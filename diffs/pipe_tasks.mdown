# Comparison of the pipe_tasks repository


<div style="background-color:Aquamarine; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Summary of Repositories</h1>
<p>
Comparison run at 02:23PM on June 09, 2015<br>
There are <b>3105</b> differences between the two repositories<br><br>
Repository <b>/Users/nate/repos_hsc/pipe_tasks/</b> <br> Revision <b>0410bba2deca9799eb14c5c440ff7a582e8cfa9e</b><br> Branch <b>master</b><br>Last commit was on <b>2015-05-16 20:09:23 -0400</b><br><br>
Repository <b>/Users/nate/repos_lsst/pipe_tasks/</b> <br> Revision <b>955c0e9fb12b052a3ef0bdc10f69f2477c4259ca</b><br> Branch <b>master</b><br>Last commit was on <b>2015-06-08 16:21:59 -0700</b><br><br>
</p>
</div>



___
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Files only in /Users/nate/repos_hsc/pipe_tasks/</h1>
<h2>bin/measureCoaddSources.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/propagateVisitFlags.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/coadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/chiSquaredCoadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/multiBand.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/mergeCoaddMeasurements.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/forcedPhotCoadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/astrometry.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/detectorUtil.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/forcedPhotImage.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/fakes.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/mergeCoaddDetections.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/detectCoaddSources.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/forcedPhotCcd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/forcedPhotCcd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>tests/interpolate.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/chiSquaredCoadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/dataIds.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/forcedPhotCoadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/references.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>tests/testCoaddInputs.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>python/lsst/pipe/tasks/setPrimaryFlags.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
<h2>bin/coadd.py</h2>
<pre>
commit 0410bba2deca9799eb14c5c440ff7a582e8cfa9e
Merge: d6d652b 847faf5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat May 16 20:09:23 2015 -0400

    Merge branch 'tickets/HSC-1245'</pre>
</div>

<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Files only in /Users/nate/repos_lsst/pipe_tasks/</h1>
<h2>tests/testPhotoCal.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/index-photocal-test-stars.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/mindex-photocal-test-4.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/calibrateTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>python/lsst/pipe/tasks/colorterms.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>bin/imageDifferenceWinter2013.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/SConscript</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>bin/transformCoaddMeasurement.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>doc/writeCmdLineTask.dox</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/exampleCmdLineTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/index-photocal-test-4.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/testTransform.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/ups/astrometry_net_data.table</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>bin/transformSrcMeasurement.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/photoCalTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/runRepair.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/mindex-photocal-test.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>python/lsst/pipe/tasks/transformMeasurement.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/andConfigOpenFiles.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/testProcessCcd.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/measurePsfTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/index-photocal-test.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>python/lsst/pipe/tasks/photoCal.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/testColorterm.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/testCoadds.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/andConfig.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>bin/transformForcedSrcMeasurement.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>doc/writeTask.dox</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>python/lsst/pipe/tasks/exampleCmdLineTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/data/v695833-e0-c000.xy.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/data/v695833-e0-c000-a00.sci.fits</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>python/lsst/pipe/tasks/exampleStatsTasks.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>tests/astrometry_net_data/photocal/README</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
<h2>examples/exampleStatsTask.py</h2>
<pre>
commit 955c0e9fb12b052a3ef0bdc10f69f2477c4259ca
Merge: 5d3fac6 2763f8f
Author: Joshua Hoblitt <jhoblitt@cpan.org>
Date:   Mon Jun 8 16:21:59 2015 -0700

    Merge pull request #3 from lsst/tickets/DM-2636
    
    Tickets/dm 2636</pre>
</div>




# List of the files in common<a name="homelist"></a>
Files without links do not differ

* [```ups/pipe_tasks.cfg```](#ups/pipe_tasks.cfg)
* ```bin/makeCoaddTempExp.py```
* [```doc/doxygen.conf.in```](#doc/doxygen.conf.in)
* [```python/lsst/pipe/tasks/repair.py```](#python/lsst/pipe/tasks/repair.py)
* [```doc/main.dox```](#doc/main.dox)
* ```python/lsst/pipe/tasks/registerImage.py```
* [```python/lsst/pipe/tasks/processCoadd.py```](#python/lsst/pipe/tasks/processCoadd.py)
* [```python/lsst/pipe/tasks/makeSkyMap.py```](#python/lsst/pipe/tasks/makeSkyMap.py)
* [```tests/testRegister.py```](#tests/testRegister.py)
* ```SConstruct```
* ```bin/processCoadd.py```
* ```tests/SConscript```
* [```python/lsst/pipe/tasks/scaleZeroPoint.py```](#python/lsst/pipe/tasks/scaleZeroPoint.py)
* ```tests/astrometry_net_data/t2155/index-tst2155-00.fits```
* ```.gitignore```
* ```bin/reportImagesInPatch.py```
* ```python/lsst/pipe/tasks/getRepositoryData.py```
* [```tests/testScaleZeroPoint.py```](#tests/testScaleZeroPoint.py)
* ```tests/astrometry_net_data/t2155/andConfig.py```
* [```python/lsst/pipe/tasks/measurePsf.py```](#python/lsst/pipe/tasks/measurePsf.py)
* ```tests/wcsSelectImages.py```
* ```python/lsst/pipe/tasks/__init__.py```
* ```python/lsst/pipe/tasks/repositoryIterator.py```
* ```bin/matchBackgrounds.py```
* [```python/lsst/pipe/tasks/calibrate.py```](#python/lsst/pipe/tasks/calibrate.py)
* ```python/lsst/pipe/tasks/warpAndPsfMatch.py```
* ```python/lsst/pipe/__init__.py```
* [```python/lsst/pipe/tasks/assembleCoadd.py```](#python/lsst/pipe/tasks/assembleCoadd.py)
* ```bin/processCcd.py```
* ```bin/assembleCoadd.py```
* [```python/lsst/pipe/tasks/mocks/mockCoadd.py```](#python/lsst/pipe/tasks/mocks/mockCoadd.py)
* [```python/lsst/pipe/tasks/makeDiscreteSkyMap.py```](#python/lsst/pipe/tasks/makeDiscreteSkyMap.py)
* [```python/lsst/pipe/tasks/makeCoaddTempExp.py```](#python/lsst/pipe/tasks/makeCoaddTempExp.py)
* [```python/lsst/pipe/tasks/imageDifference.py```](#python/lsst/pipe/tasks/imageDifference.py)
* [```ups/pipe_tasks.table```](#ups/pipe_tasks.table)
* ```python/lsst/pipe/tasks/mocks/visualization.py```
* [```python/lsst/pipe/tasks/ingest.py```](#python/lsst/pipe/tasks/ingest.py)
* [```python/lsst/pipe/tasks/mocks/mockObject.py```](#python/lsst/pipe/tasks/mocks/mockObject.py)
* ```bin/dumpTaskMetadata.py```
* ```doc/SConscript```
* [```python/lsst/pipe/tasks/interpImage.py```](#python/lsst/pipe/tasks/interpImage.py)
* ```bin/reportTaskTiming.py```
* [```bin/imageDifference.py```](#bin/imageDifference.py)
* ```bin/reportPatches.py```
* ```bin/makeDiscreteSkyMap.py```
* [```tests/matchBackgrounds.py```](#tests/matchBackgrounds.py)
* [```python/lsst/pipe/tasks/matchBackgrounds.py```](#python/lsst/pipe/tasks/matchBackgrounds.py)
* [```python/lsst/pipe/tasks/mocks/simpleMapper.py```](#python/lsst/pipe/tasks/mocks/simpleMapper.py)
* [```python/lsst/pipe/tasks/coaddInputRecorder.py```](#python/lsst/pipe/tasks/coaddInputRecorder.py)
* ```python/lsst/pipe/tasks/mocks/mockSelect.py```
* ```bin/ingestImages.py```
* [```tests/testSnapCombine.py```](#tests/testSnapCombine.py)
* ```tests/astrometry_net_data/t2155/ups/astrometry_net_data.table```
* ```tests/config.py```
* [```tests/ticket-2155.py```](#tests/ticket-2155.py)
* [```python/lsst/pipe/tasks/snapCombine.py```](#python/lsst/pipe/tasks/snapCombine.py)
* [```python/lsst/pipe/tasks/mocks/mockObservation.py```](#python/lsst/pipe/tasks/mocks/mockObservation.py)
* ```python/lsst/__init__.py```
* [```python/lsst/pipe/tasks/selectImages.py```](#python/lsst/pipe/tasks/selectImages.py)
* [```python/lsst/pipe/tasks/coaddBase.py```](#python/lsst/pipe/tasks/coaddBase.py)
* ```python/lsst/pipe/tasks/mocks/__init__.py```
* [```python/lsst/pipe/tasks/processCcd.py```](#python/lsst/pipe/tasks/processCcd.py)
* ```ups/pipe_tasks.build```
* ```bin/makeSkyMap.py```
* ```tests/data/mini-r-3-113,0.fits.gz```
* [```python/lsst/pipe/tasks/processImage.py```](#python/lsst/pipe/tasks/processImage.py)
* ```python/lsst/pipe/tasks/coaddHelpers.py```
* ```bin/reportImagesToCoadd.py```

# <a name="ups/pipe_tasks.cfg"/></a>ups/pipe_tasks.cfg
### Diff:

<pre>
                # -*- python -*-
                
                import lsst.sconsUtils
                
                dependencies = dict(
                    required = [
                        "pipe_base",
                        "afw",
                        "pex_config",
                        ],
                    optional = [
                        "coadd_utils",
                        "coadd_chisquared",
                        "ip_isr",
                        "ip_diffim",
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#82a87ff9">82a87ff9</a> +         "meas_astrom",</div>
                        ],
                )
                
                config = lsst.sconsUtils.Configuration(
                    __file__,
                    hasDoxygenInclude=False,
                    hasSwigFiles=False,
                )
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="82a87ff9"/></a>82a87ff9</h3>

<pre>
commit 82a87ff92a39d1b026b8accd04e63bec6bb3bfe6
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 6 18:22:54 2014 -0400

    Added reference to doxygen group LSST_task_documentation
    
    I also discovered that pipe_tasks wasn't picking up meas_astrom doxy tags,
    hence the change to the .cfg file
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/repair.py"/></a>python/lsst/pipe/tasks/repair.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import lsst.pex.config as pexConfig
                import lsst.afw.math as afwMath
                import lsst.afw.detection as afwDet
                import lsst.meas.algorithms as measAlg
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#54640552">54640552</a> - from lsst.pipe.tasks.interpImage import InterpImageConfig</div>
                
                import lsstDebug
                
                class RepairConfig(pexConfig.Config):
                    doInterpolate = pexConfig.Field(
                        dtype = bool,
                        doc = "Interpolate over defects? (ignored unless you provide a list of defects)",
                        default = True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#59a33a28">59a33a28</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#54640552">54640552</a> -     interp = pexConfig.ConfigField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#54640552">54640552</a> -         dtype = InterpImageConfig,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#54640552">54640552</a> -         doc = "Options for interpolating",</div>
                    )
                    doCosmicRay = pexConfig.Field(
                        dtype = bool,
                        doc = "Find and mask out cosmic rays?",
                        default = True,
                    )
                    cosmicray = pexConfig.ConfigField(
                        dtype = measAlg.FindCosmicRaysConfig,
                        doc = "Options for finding and masking cosmic rays",
                    )
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#24500549">24500549</a> + ## \addtogroup LSST_task_documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#24500549">24500549</a> + ## \{</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#24500549">24500549</a> + ## \page RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#24500549">24500549</a> + ## \ref RepairTask_ "RepairTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#696b641f">696b641f</a> + ## \copybrief RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#24500549">24500549</a> + ## \}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#24500549">24500549</a> + </div>
                class RepairTask(pipeBase.Task):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#24500549">24500549</a> +     """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#93e0ef62">93e0ef62</a> +     \anchor RepairTask_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#24500549">24500549</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#93e0ef62">93e0ef62</a> +     \brief Interpolate over defects in an exposure and handle cosmic rays</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#24500549">24500549</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Contents Contents</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_Purpose</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_Initialize</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_IO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_Config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_Debug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#93e0ef62">93e0ef62</a> +      - \ref pipe_tasks_repair_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Purpose Description</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#93e0ef62">93e0ef62</a> +     \copybrief RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#126f3e7b">126f3e7b</a> +     This task operates on an lsst.afw.image.Exposure in place to interpolate over a set of</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#93e0ef62">93e0ef62</a> +     lsst.meas.algorithms.Defect objects.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#93e0ef62">93e0ef62</a> +     It will also, optionally, find and interpolate any cosmic rays in the lsst.afw.image.Exposure.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Initialize Task initialization</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#126f3e7b">126f3e7b</a> +     See: lsst.pipe.base.task.Task.__init__</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_IO Inputs/Outputs to the run method</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#93e0ef62">93e0ef62</a> +     \copydoc run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Config Configuration parameters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#93e0ef62">93e0ef62</a> +     See \ref RepairConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Debug Debug variables</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#93e0ef62">93e0ef62</a> +     The \link lsst.pipe.base.cmdLineTask.CmdLineTask command line task\endlink interface supports a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#93e0ef62">93e0ef62</a> +     flag \c -d to import \b debug.py from your \c PYTHONPATH; see <a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#93e0ef62">93e0ef62</a> +     href="http://lsst-web.ncsa.illinois.edu/~buildbot/doxygen/x_masterDoxyDoc/base_debug.html"></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#93e0ef62">93e0ef62</a> +     Using lsstDebug to control debugging output</a> for more about \b debug.py files.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#93e0ef62">93e0ef62</a> +     The available variables in RepairTask are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#93e0ef62">93e0ef62</a> +     <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#93e0ef62">93e0ef62</a> +       <DT> \c display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#93e0ef62">93e0ef62</a> +       <DD> A dictionary containing debug point names as keys with frame number as value. Valid keys are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#93e0ef62">93e0ef62</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#93e0ef62">93e0ef62</a> +           <DT> repair.before</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#93e0ef62">93e0ef62</a> +           <DD> display image before any repair is done</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#93e0ef62">93e0ef62</a> +           <DT> repair.after</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#93e0ef62">93e0ef62</a> +           <DD> display image after cosmic ray and defect correction</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#93e0ef62">93e0ef62</a> +         </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#93e0ef62">93e0ef62</a> +       <DT> \c displayCR</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#93e0ef62">93e0ef62</a> +       <DD> If True, display the exposure on ds9's frame 1 and overlay bounding boxes around detects CRs.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#93e0ef62">93e0ef62</a> +     </DL>  </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#93e0ef62">93e0ef62</a> +     \section pipe_tasks_repair_Example A complete example of using RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#93e0ef62">93e0ef62</a> +     This code is in runRepair.py in the examples directory, and can be run as \em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#93e0ef62">93e0ef62</a> +     \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#93e0ef62">93e0ef62</a> +     examples/runRepair.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#93e0ef62">93e0ef62</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#93e0ef62">93e0ef62</a> +     \dontinclude runRepair.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#93e0ef62">93e0ef62</a> +     Import the task.  There are other imports.  Read the source file for more info.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#93e0ef62">93e0ef62</a> +     \skipline RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#93e0ef62">93e0ef62</a> +     For this example, we manufacture a test image to run on.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#93e0ef62">93e0ef62</a> +     First, create a pure Poisson noise image and a Psf to go with it.  The mask plane</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#126f3e7b">126f3e7b</a> +     and variance can be constructed at the same time.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#93e0ef62">93e0ef62</a> +     \skip poisson</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#93e0ef62">93e0ef62</a> +     \until mask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#93e0ef62">93e0ef62</a> +     Inject some cosmic rays and generate the Exposure.  Exposures are MaskedImages (image + mask + variance)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#93e0ef62">93e0ef62</a> +     with other metadata (e.g. Psf and Wcs objects).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#93e0ef62">93e0ef62</a> +     \skip some CRs</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#93e0ef62">93e0ef62</a> +     \until setPsf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#93e0ef62">93e0ef62</a> +     Defects are represented as bad columns of random lengths.  A defect list must be constructed to pass</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#126f3e7b">126f3e7b</a> +     on to the RepairTask.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#126f3e7b">126f3e7b</a> +     \bug This is addressed in <a href="https://jira.lsstcorp.org/browse/DM-963"> DM-963</a></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#126f3e7b">126f3e7b</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#126f3e7b">126f3e7b</a> +     \skip addDefects</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#93e0ef62">93e0ef62</a> +     \until push_back</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#93e0ef62">93e0ef62</a> +     Finally, the exposure can be repaired.  Create an instance of the task and run it.  The exposure is modified in place.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#93e0ef62">93e0ef62</a> +     \skip RepairTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#93e0ef62">93e0ef62</a> +     \until repair.run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#93e0ef62">93e0ef62</a> +     <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#93e0ef62">93e0ef62</a> +     To investigate the \ref pipe_tasks_repair_Debug, put something like</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#93e0ef62">93e0ef62</a> +     \code{.py}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#93e0ef62">93e0ef62</a> +     import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#93e0ef62">93e0ef62</a> +     def DebugInfo(name):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#93e0ef62">93e0ef62</a> +         di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#93e0ef62">93e0ef62</a> +         if name == "lsst.pipe.tasks.repair":</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#93e0ef62">93e0ef62</a> +             di.display = {'repair.before':2, 'repair.after':3}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#93e0ef62">93e0ef62</a> +             di.displayCR = True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#93e0ef62">93e0ef62</a> +         return di</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#93e0ef62">93e0ef62</a> +     lsstDebug.Info = DebugInfo</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#93e0ef62">93e0ef62</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#93e0ef62">93e0ef62</a> +     into your debug.py file and run runRepair.py with the \c --debug flag.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#f3a6f7f0">f3a6f7f0</a> -     """Conversion notes:</div>
              ?     ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#93e0ef62">93e0ef62</a> +     Conversion notes:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#f3a6f7f0">f3a6f7f0</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#f3a6f7f0">f3a6f7f0</a> -     Display code should be updated once we settle on a standard way of controlling what is displayed.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#93e0ef62">93e0ef62</a> +         Display code should be updated once we settle on a standard way of controlling what is displayed.</div>
              ? ++++
                    """
                    ConfigClass = RepairConfig
                
                    @pipeBase.timeMethod
                    def run(self, exposure, defects=None, keepCRs=None):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#f3a6f7f0">f3a6f7f0</a> -         """Repair exposure's instrumental problems</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#93e0ef62">93e0ef62</a> +         """!Repair an Exposure's defects and cosmic rays</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#f3a6f7f0">f3a6f7f0</a> -         @param[in,out] exposure Exposure to process</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#f3a6f7f0">f3a6f7f0</a> -         @param defects Defect list</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#126f3e7b">126f3e7b</a> +         \param[in, out] exposure lsst.afw.image.Exposure to process.  Exposure must have a valid Psf.  Modified in place.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#93e0ef62">93e0ef62</a> +         \param[in] defects  an lsst.meas.algorithms.DefectListT object.  If None, do no defect correction.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#e6abf87a">e6abf87a</a> -         @param keepCRs  Don't interpolate over the CR pixels (defer to pex_config if None)</div>
              ?         ^               ^                                               ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#93e0ef62">93e0ef62</a> +         \param[in] keepCRs  don't interpolate over the CR pixels (defer to RepairConfig if None)</div>
              ?         ^     ++++          ^                                              ++ ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#93e0ef62">93e0ef62</a> +         \throws AssertionError with the following strings:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#93e0ef62">93e0ef62</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#93e0ef62">93e0ef62</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#93e0ef62">93e0ef62</a> +           <DT> No exposure provided</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#126f3e7b">126f3e7b</a> +           <DD> The object provided as exposure evaluates to False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#93e0ef62">93e0ef62</a> +           <DT> No PSF provided</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#93e0ef62">93e0ef62</a> +           <DD> The Exposure has no associated Psf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#93e0ef62">93e0ef62</a> +         </DL></div>
                        """
                        assert exposure, "No exposure provided"
                        psf = exposure.getPsf()
                        assert psf, "No PSF provided"
                
                        self.display('repair.before', exposure=exposure)
                        if defects is not None and self.config.doInterpolate:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#54640552">54640552</a> -             self.interpolate(exposure, defects,</div>
              ?                                               ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#e269ca47">e269ca47</a> +             self.interpolate(exposure, defects)</div>
              ?                                               ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#54640552">54640552</a> -                              useFallbackValueAtEdge=self.config.interp.useFallbackValueAtEdge)</div>
                
                        if self.config.doCosmicRay:
                            self.cosmicRay(exposure, keepCRs=keepCRs)
                
                        self.display('repair.after', exposure=exposure)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#54640552">54640552</a> -     def interpolate(self, exposure, defects, useFallbackValueAtEdge=False):</div>
              ?                                            ------------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#e269ca47">e269ca47</a> +     def interpolate(self, exposure, defects):</div>
                        """Interpolate over defects
                
                        @param[in,out] exposure Exposure to process
                        @param defects Defect list
                        """
                        assert exposure, "No exposure provided"
                        assert defects is not None, "No defects provided"
                        psf = exposure.getPsf()
                        assert psf, "No psf provided"
                
                        mi = exposure.getMaskedImage()
                        fallbackValue = afwMath.makeStatistics(mi, afwMath.MEANCLIP).getValue()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#54640552">54640552</a> -         measAlg.interpolateOverDefects(mi, psf, defects, fallbackValue, useFallbackValueAtEdge)</div>
              ?                                                                       ------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#f3a6f7f0">f3a6f7f0</a> +         measAlg.interpolateOverDefects(mi, psf, defects, fallbackValue)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#54640552">54640552</a> - </div>
                        self.log.info("Interpolated over %d defects." % len(defects))
                
                    def cosmicRay(self, exposure, keepCRs=None):
                        """Mask cosmic rays
                
                        @param[in,out] exposure Exposure to process
                        @param keepCRs  Don't interpolate over the CR pixels (defer to pex_config if None)
                        """
                        import lsstDebug
                        display = lsstDebug.Info(__name__).display
                        displayCR = lsstDebug.Info(__name__).displayCR
                
                        assert exposure, "No exposure provided"
                        psf = exposure.getPsf()
                        assert psf, "No psf provided"
                
                        # Blow away old mask
                        try:
                            mask = exposure.getMaskedImage().getMask()
                            crBit = mask.getMaskPlane("CR")
                            mask.clearMaskPlane(crBit)
                        except Exception:
                            pass
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#f7292b93">f7292b93</a> +         mi = exposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#3bae328e">3bae328e</a> -         exposure0 = exposure            # initial value of exposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#3bae328e">3bae328e</a> -         binSize = self.config.cosmicray.background.binSize</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#3bae328e">3bae328e</a> -         nx, ny = exposure.getWidth()/binSize, exposure.getHeight()/binSize</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#3bae328e">3bae328e</a> -         if nx*ny <= 1:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#3bae328e">3bae328e</a> -             bg = afwMath.makeStatistics(exposure.getMaskedImage(), afwMath.MEDIAN).getValue()</div>
              ? ----                                    ------------------- ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#f3a6f7f0">f3a6f7f0</a> +         bg = afwMath.makeStatistics(mi, afwMath.MEDIAN).getValue()</div>
              ?                                      ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#2cdb7c60">2cdb7c60</a> -             bkgd = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#3bae328e">3bae328e</a> -         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#3bae328e">3bae328e</a> -             exposure = exposure.Factory(exposure, True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#2cdb7c60">2cdb7c60</a> -             bkgd, exposure = measAlg.estimateBackground(exposure, self.config.cosmicray.background,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#3bae328e">3bae328e</a> -                                                       subtract=True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#3bae328e">3bae328e</a> -             bg = 0.0</div>
                
                        if keepCRs is None:
                            keepCRs = self.config.cosmicray.keepCRs
                        try:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#d5640eb2">d5640eb2</a> +             crs = measAlg.findCosmicRays(mi, psf, bg, pexConfig.makePolicy(self.config.cosmicray), keepCRs)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#3bae328e">3bae328e</a> -             crs = measAlg.findCosmicRays(exposure.getMaskedImage(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#3bae328e">3bae328e</a> -                                          psf, bg, pexConfig.makePolicy(self.config.cosmicray), keepCRs)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#2cdb7c60">2cdb7c60</a> -             if bkgd:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#2cdb7c60">2cdb7c60</a> -                 # Add back background image</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#2cdb7c60">2cdb7c60</a> -                 img = exposure.getMaskedImage().getImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#2cdb7c60">2cdb7c60</a> -                 img += bkgd.getImageF()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#2cdb7c60">2cdb7c60</a> -                 del img</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#2cdb7c60">2cdb7c60</a> -                 # Replace original image with CR subtracted image</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#2cdb7c60">2cdb7c60</a> -                 mimg = exposure0.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#2cdb7c60">2cdb7c60</a> -                 mimg <<= exposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#2cdb7c60">2cdb7c60</a> -                 del mimg</div>
                        except Exception, e:
                            if display:
                                import lsst.afw.display.ds9 as ds9
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#3bae328e">3bae328e</a> -                 ds9.mtv(exposure0, title="Failed CR")</div>
              ?                                 -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#d5640eb2">d5640eb2</a> +                 ds9.mtv(exposure, title="Failed CR")</div>
                            raise
                            
                        num = 0
                        if crs is not None:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#3bae328e">3bae328e</a> -             mask = exposure0.getMaskedImage().getMask()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#f3a6f7f0">f3a6f7f0</a> +             mask = mi.getMask()</div>
                            crBit = mask.getPlaneBitMask("CR")
                            afwDet.setMaskFromFootprintList(mask, crs, crBit)
                            num = len(crs)
                
                            if display and displayCR:
                                import lsst.afw.display.ds9 as ds9
                                import lsst.afw.display.utils as displayUtils
                
                                ds9.incrDefaultFrame()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#3bae328e">3bae328e</a> -                 ds9.mtv(exposure0, title="Post-CR")</div>
              ?                                 -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#f3a6f7f0">f3a6f7f0</a> +                 ds9.mtv(exposure, title="Post-CR")</div>
                                
                                with ds9.Buffering():
                                    for cr in crs:
                                        displayUtils.drawBBox(cr.getBBox(), borderWidth=0.55)
                
                        self.log.info("Identified %s cosmic rays." % (num,))
                
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="3bae328e"/></a>3bae328e</h3>

<pre>
commit 3bae328e0fff4b2a02267e97cc1e53b5bbe431cb
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Feb 26 06:04:38 2013 +0900

    Support a full background model when detecting cosmic rays
    
    If there are strong gradients (e.g. M31's nucleus) we need to do more than
    treat the background as a constant.  However, this requires making a copy
    of the data so the background-is-a-constant model is preserved as a special
    case
</pre>
<h3><a name="59a33a28"/></a>59a33a28</h3>

<pre>
commit 59a33a289d5a0ab9a6ef8f5924f58e6d21e6dc1a
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Dec 21 17:01:49 2011 -0800

    Lots of work on incorporating Config (with some guesses).
    Also a first cut at ipDiffimPsfMatchConfig.py that will need serious revision to be nice,
    and should live in ip_diffim when finished.
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="54640552"/></a>54640552</h3>

<pre>
commit 54640552cc6c1270650c56dddad173e3dd1bd775
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 13 09:42:18 2014 -0700

    Cleanup interpolation tasks and implement useFallbackValueAtEdge (DM-756)
</pre>
<h3><a name="e6abf87a"/></a>e6abf87a</h3>

<pre>
commit e6abf87a7d6d4a1581f18fbcc3a50bc634cd9bbc
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Feb 17 13:18:53 2012 -0500

    Optionally keep CRs in the corrected frame
</pre>
<h3><a name="2cdb7c60"/></a>2cdb7c60</h3>

<pre>
commit 2cdb7c606270d84c7a05baf9949ff5724463fa6b
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Tue Sep 2 15:32:31 2014 +0900

    Fixed cosmicRay() in RepairTask for the case background is subtracted.
    
    When the background is subtracted with finer binsize, new exposure
    will be created and cosmic rays will be detected on that exposure.
    But the image of that exposure was not properly returned back.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="d5640eb2"/></a>d5640eb2</h3>

<pre>
commit d5640eb27ad10ef241a16cd799c0c6c2be14bba0
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Apr 9 14:47:05 2012 -0400

    Cleanup display a little
    
    Conflicts:
    	python/lsst/pipe/tasks/repair.py
</pre>
<h3><a name="24500549"/></a>24500549</h3>

<pre>
commit 24500549a1df10f2684274d3310206cfd4a66849
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Jun 30 12:58:42 2014 -0400

    Boiler plate for task documentation
</pre>
<h3><a name="696b641f"/></a>696b641f</h3>

<pre>
commit 696b641f20d2bf91283a0d639727e0bb9b1a8607
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Jun 30 18:52:24 2014 -0400

    Worked on CalibrateTask documentation
</pre>
<h3><a name="e269ca47"/></a>e269ca47</h3>

<pre>
commit e269ca47a3789f5864b3dd81ff1bec9fadeaeb65
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Feb 27 19:04:16 2012 -0500

    rewrote calibration tasks with schema/table stuff
</pre>
<h3><a name="f7292b93"/></a>f7292b93</h3>

<pre>
commit f7292b93bb4b67f8eafafe8a30a0b5c536675c91
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jan 31 17:50:49 2012 -0500

    Update cosmic ray finding.
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="93e0ef62"/></a>93e0ef62</h3>

<pre>
commit 93e0ef6266ea55c7a8763d3ee4173f02013a7408
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Mon Jul 7 18:20:49 2014 -0700

    Add documenation for RepairTask
    
    The documenation includes adding Doxygen comments as well as
    an example of how to run the task.  The example produces a
    fake image and repairs cosmic rays and bad columns using the
    task.
</pre>
<h3><a name="126f3e7b"/></a>126f3e7b</h3>

<pre>
commit 126f3e7b0facf6ef09770eefe8c49b5224650d8a
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Fri Aug 8 18:20:53 2014 -0700

    Response to review of DM-928
    
    There were a couple of typos in the documentation.  There were also
    some improvements to the example code.
</pre>
</div>


[Return to list](#homelist)
# <a name="doc/main.dox"/></a>doc/main.dox
### Diff:

<pre>
                /**
                \mainpage lsst::pipe::tasks: Pipeline tasks
                
                \section pipeTasks_introduction Introduction
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
6    <a href="#c5d3f125">c5d3f125</a> - Each data processing pipeline is implemented as a task that is a subclass of pipe_base CmdLineTask.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
7    <a href="#c5d3f125">c5d3f125</a> - Tasks often call other tasks as subtasks; these may be derived from CmdLineTask or Task.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
8    <a href="#c5d3f125">c5d3f125</a> - See pipe_base documentation for more information about the basics of writing and using tasks.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
9    <a href="#c5d3f125">c5d3f125</a> - See the individual tasks in pipe_tasks for information about the available pipeline tasks and subtasks.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
6    <a href="#a08552c5">a08552c5</a> + Data processing pipeline tasks.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
7    <a href="#82a87ff9">82a87ff9</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
8    <a href="#a08552c5">a08552c5</a> + Documentation for existing tasks is in \ref LSST_task_documentation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
9    <a href="#82a87ff9">82a87ff9</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
10   <a href="#95e8a962">95e8a962</a> + Instructions for writing new tasks is in \ref pipeTasks_writeTask and \ref pipeTasks_writeCmdLineTask.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
11   <a href="#82a87ff9">82a87ff9</a> +  */</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
12   <a href="#82a87ff9">82a87ff9</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
13   <a href="#82a87ff9">82a87ff9</a> + /**</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
14   <a href="#c1f8b414">c1f8b414</a> + \defgroup LSST_task_documentation Task Documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
15   <a href="#a08552c5">a08552c5</a> + Documentation for existing data processing Tasks</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#82a87ff9">82a87ff9</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#c1f8b414">c1f8b414</a> + Tasks are scattered over various implementation products and gathered together by their membership of the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
18   <a href="#c1f8b414">c1f8b414</a> + doxygen group LSST_task_documentation.</div>
                */
                }}}
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="c5d3f125"/></a>c5d3f125</h3>

<pre>
commit c5d3f1251f48c9b3ce97fb1d7aa2944938354cef
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 13 16:35:16 2012 -0700

    minor tweaks to doxygen
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="95e8a962"/></a>95e8a962</h3>

<pre>
commit 95e8a962b7377cf8bf2cf130479cfdc7ac403e85
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jul 18 16:31:28 2014 -0700

    Split "how to write a command-line task" into two documents.
</pre>
<h3><a name="82a87ff9"/></a>82a87ff9</h3>

<pre>
commit 82a87ff92a39d1b026b8accd04e63bec6bb3bfe6
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 6 18:22:54 2014 -0400

    Added reference to doxygen group LSST_task_documentation
    
    I also discovered that pipe_tasks wasn't picking up meas_astrom doxy tags,
    hence the change to the .cfg file
</pre>
<h3><a name="c1f8b414"/></a>c1f8b414</h3>

<pre>
commit c1f8b414d407a0297f72aa40ef21a2ca5cc23d21
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 27 17:28:48 2014 -0400

    Provided a description of the LSST_task_documentation group for the list on the Modules page
</pre>
<h3><a name="a08552c5"/></a>a08552c5</h3>

<pre>
commit a08552c55abab8711641943ec46baee9e0180672
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Jul 16 15:42:30 2014 -0700

    Fully documented all three example tasks and polished up "how to write..."
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/processCoadd.py"/></a>python/lsst/pipe/tasks/processCoadd.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#165af203">165af203</a> - import lsst.daf.base as dafBase</div>
                import lsst.afw.geom as afwGeom
                import lsst.afw.math as afwMath
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#886d41a3">886d41a3</a> - from .coaddBase import ExistingCoaddDataIdContainer, getSkyInfo</div>
                import lsst.afw.table as afwTable
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#886d41a3">886d41a3</a> - from .coaddBase import CoaddDataIdContainer</div>
              ?            ^^ -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#c066caa3">c066caa3</a> + from lsst.coadd.utils import CoaddDataIdContainer</div>
              ?      ++++      ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#c066caa3">c066caa3</a> + from .coaddBase import getSkyInfo</div>
                from .processImage import ProcessImageTask
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#08a8ec02">08a8ec02</a> - from .astrometry import AstrometryTask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#a3d241a4">a3d241a4</a> - from .setPrimaryFlags import SetPrimaryFlagsTask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#c6e19050">c6e19050</a> - from .propagateVisitFlags import PropagateVisitFlagsTask</div>
                
                class ProcessCoaddConfig(ProcessImageTask.ConfigClass):
                    """Config for ProcessCoadd"""
                    coaddName = pexConfig.Field(
                        doc = "coadd name: typically one of deep or goodSeeing",
                        dtype = str,
                        default = "deep",
                    )
                    doScaleVariance = pexConfig.Field(dtype=bool, default=True, doc = "Scale variance plane using empirical noise")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#08a8ec02">08a8ec02</a> -     astrometry = pexConfig.ConfigurableField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#08a8ec02">08a8ec02</a> -         target = AstrometryTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#08a8ec02">08a8ec02</a> -         doc = "Astrometric matching, for matching sources to reference",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#08a8ec02">08a8ec02</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#a3d241a4">a3d241a4</a> -     setPrimaryFlags = pexConfig.ConfigurableField(target=SetPrimaryFlagsTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#a3d241a4">a3d241a4</a> -                                                   doc="Set flags for primary source in tract/patch")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#c6e19050">c6e19050</a> -     propagateFlags = pexConfig.ConfigurableField(target=PropagateVisitFlagsTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#c6e19050">c6e19050</a> -                                                  doc="Propagate flags to coadd")</div>
                
                    def setDefaults(self):
                        ProcessImageTask.ConfigClass.setDefaults(self)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.background.undersampleStyle = 'REDUCE_INTERP_ORDER'</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.detection.background.undersampleStyle = 'REDUCE_INTERP_ORDER'</div>
                        self.detection.background.undersampleStyle = 'REDUCE_INTERP_ORDER'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#9e8563fd">9e8563fd</a> -         self.detection.thresholdType = "pixel_stdev"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.doPsf = False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.astrometry.forceKnownWcs = True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.repair.doInterpolate = False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#62e47fe0">62e47fe0</a> +         self.calibrate.repair.doCosmicRay = False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#240e68c6">240e68c6</a> +         self.calibrate.doPhotoCal = False</div>
                        self.detection.isotropicGrow = True
                        self.detection.returnOriginalFootprints = False
                        self.doWriteSourceMatches = True
                        self.measurement.doReplaceWithNoise = True
                        self.doDeblend = True
                        self.deblend.maxNumberOfPeaks = 20
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#08a8ec02">08a8ec02</a> -         self.astrometry.forceKnownWcs = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#08a8ec02">08a8ec02</a> -         self.astrometry.solver.calculateSip = False</div>
                
                class ProcessCoaddTask(ProcessImageTask):
                    """Process a Coadd image
                    
                    """
                    ConfigClass = ProcessCoaddConfig
                    _DefaultName = "processCoadd"
                
                    def __init__(self, **kwargs):
                        ProcessImageTask.__init__(self, **kwargs)
                        self.dataPrefix = self.config.coaddName + "Coadd_"
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#a3d241a4">a3d241a4</a> -         self.makeSubtask("setPrimaryFlags", schema=self.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#c6e19050">c6e19050</a> -         self.makeSubtask("propagateFlags", schema=self.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#08a8ec02">08a8ec02</a> -         if self.config.doWriteSourceMatches:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#08a8ec02">08a8ec02</a> -             self.makeSubtask("astrometry", schema=self.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#e0116f17">e0116f17</a> +         self.isPatchInnerKey = self.schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#e0116f17">e0116f17</a> +             "detect_isPatchInner", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#e0116f17">e0116f17</a> +             doc="true if source is in the inner region of a coadd patch",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#e0116f17">e0116f17</a> +         )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#e0116f17">e0116f17</a> +         self.isTractInnerKey = self.schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#e0116f17">e0116f17</a> +             "detect_isTractInner", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#e0116f17">e0116f17</a> +             doc="true if source is in the inner region of a coadd tract",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#e0116f17">e0116f17</a> +         )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#e0116f17">e0116f17</a> +         self.isPrimaryKey = self.schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#e0116f17">e0116f17</a> +             "detect_isPrimary", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#e0116f17">e0116f17</a> +             doc="true if source has no children and is in the inner region of a coadd patch " \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#e0116f17">e0116f17</a> +                 + "and is in the inner region of a coadd tract",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#e0116f17">e0116f17</a> +         )</div>
                
                    @pipeBase.timeMethod
                    def scaleVariance(self, exposure):
                        ctrl = afwMath.StatisticsControl()
                        ctrl.setAndMask(~0x0)
                        var    = exposure.getMaskedImage().getVariance()
                        mask   = exposure.getMaskedImage().getMask()
                        dstats = afwMath.makeStatistics(exposure.getMaskedImage(), afwMath.VARIANCECLIP, ctrl).getValue(afwMath.VARIANCECLIP)
                        vstats = afwMath.makeStatistics(var, mask, afwMath.MEANCLIP, ctrl).getValue(afwMath.MEANCLIP)
                        vrat   = dstats / vstats
                        self.log.info("Renormalising variance by %f" % (vrat))
                        var   *= vrat
                
                    def makeIdFactory(self, dataRef):
                        expBits = dataRef.get(self.config.coaddName + "CoaddId_bits")
                        expId = long(dataRef.get(self.config.coaddName + "CoaddId"))
                        return afwTable.IdFactory.makeSource(expId, 64 - expBits)
                        
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#0494ead9">0494ead9</a> -     def getExpId(self, dataRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#671f4e40">671f4e40</a> +     def getExposureId(self, dataRef):</div>
              ?               +++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#0494ead9">0494ead9</a> -         return dataRef.get(self.config.coaddName+"CoaddId", immediate=True)</div>
              ?                                                           ^^^^^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#671f4e40">671f4e40</a> +         return long(dataRef.get(self.config.coaddName + "CoaddId"))</div>
              ?                +++++                                 + +         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#af675928">af675928</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#08a8ec02">08a8ec02</a> -     def getAstrometer(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#08a8ec02">08a8ec02</a> -         return self.astrometry.astrometer</div>
                
                    @pipeBase.timeMethod
                    def run(self, dataRef):
                        """Process a coadd image
                        
                        @param dataRef: butler data reference corresponding to coadd patch
                        @return pipe_base Struct containing these fields:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#08a8ec02">08a8ec02</a> -         - exposure: input exposure, as modified in the course of processing</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#424c7109">424c7109</a> +         - exposure: calibrated exposure (calexp): as computed if config.doCalibrate,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#424c7109">424c7109</a> +             else as upersisted and updated if config.doDetection, else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#424c7109">424c7109</a> +         - calib: object returned by calibration process if config.doCalibrate, else None</div>
                        - sources: detected source if config.doDetection, else None
                        """
                        self.log.info("Processing %s" % (dataRef.dataId))
                
                        # initialize outputs
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#2f0ac149">2f0ac149</a> +         coadd = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#cb0cca56">cb0cca56</a> +         </div>
                        skyInfo = getSkyInfo(coaddName=self.config.coaddName, patchRef=dataRef)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#424c7109">424c7109</a> + </div>
                        coadd = dataRef.get(self.config.coaddName + "Coadd")
                        if self.config.doScaleVariance:
                            self.scaleVariance(coadd)
                
                        # delegate most of the work to ProcessImageTask
                        result = self.process(dataRef, coadd, enableWriteSources=False)
                        result.coadd = coadd
                
                        if result.sources is not None:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#4a61a62d">4a61a62d</a> +             self.setIsPrimaryFlag(sources=result.sources, skyInfo=skyInfo)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#a3d241a4">a3d241a4</a> -             self.setPrimaryFlags.run(result.sources, skyInfo.skyMap, skyInfo.tractInfo, skyInfo.patchInfo,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#a3d241a4">a3d241a4</a> -                                      includeDeblend=self.config.doDeblend)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#c6e19050">c6e19050</a> -             self.propagateFlags.run(dataRef.getButler(), result.sources,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#c6e19050">c6e19050</a> -                                     self.propagateFlags.getCcdInputs(coadd), coadd.getWcs())</div>
                
                            # write sources
                            if self.config.doWriteSources:
                                dataRef.put(result.sources, self.dataPrefix + 'src')
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#69bbbeaa">69bbbeaa</a> -         self.log.info("Finish processing %s" % (dataRef.dataId))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#69bbbeaa">69bbbeaa</a> - </div>
                        return result
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#30395242">30395242</a> +     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#30395242">30395242</a> +     def setIsPrimaryFlag(self, sources, skyInfo):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#30395242">30395242</a> +         """Set is-primary and related flags on sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#30395242">30395242</a> +         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#30395242">30395242</a> +         @param[in,out] sources: a SourceTable</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#30395242">30395242</a> +             - reads centroid fields and an nChild field</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#30395242">30395242</a> +             - writes is-patch-inner, is-tract-inner and is-primary flags</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#30395242">30395242</a> +         @param[in] skyInfo: a SkyInfo object as returned by getSkyInfo;</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#30395242">30395242</a> +             reads skyMap, patchInfo, and tractInfo fields</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#30395242">30395242</a> +             </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#30395242">30395242</a> +         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#30395242">30395242</a> +         @raise RuntimeError if self.config.doDeblend and the nChild key is not found in the table</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#30395242">30395242</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#30395242">30395242</a> +         # Test for the presence of the nchild key instead of checking config.doDeblend because sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#30395242">30395242</a> +         # might be unpersisted with deblend info, even if deblending is not run again.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#e0116f17">e0116f17</a> +         nChildKeyName = "deblend_nChild"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#2f1f8046">2f1f8046</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#30395242">30395242</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#30395242">30395242</a> +             nChildKey = self.schema.find(nChildKeyName).key</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#30395242">30395242</a> +         except Exception:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#30395242">30395242</a> +             nChildKey = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#30395242">30395242</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#30395242">30395242</a> +         if self.config.doDeblend and nChildKey is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#30395242">30395242</a> +             # deblending was run but the nChildKey was not found; this suggests a variant deblender</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#30395242">30395242</a> +             # was used that we cannot use the output from, or some obscure error.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#30395242">30395242</a> +             raise RuntimeError("Ran the deblender but cannot find %r in the source table" % (nChildKeyName,))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#30395242">30395242</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#30395242">30395242</a> +         # set inner flags for each source and set primary flags for sources with no children</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#30395242">30395242</a> +         # (or all sources if deblend info not available)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#30395242">30395242</a> +         innerFloatBBox = afwGeom.Box2D(skyInfo.patchInfo.getInnerBBox())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#30395242">30395242</a> +         tractId = skyInfo.tractInfo.getId()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#4a61a62d">4a61a62d</a> +         for source in sources:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#30395242">30395242</a> +             if source.getCentroidFlag():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#30395242">30395242</a> +                 # centroid unknown, so leave the inner and primary flags False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#30395242">30395242</a> +                 continue</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#30395242">30395242</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#30395242">30395242</a> +             centroidPos = source.getCentroid()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#30395242">30395242</a> +             isPatchInner = innerFloatBBox.contains(centroidPos)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#30395242">30395242</a> +             source.setFlag(self.isPatchInnerKey, isPatchInner)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#30395242">30395242</a> +             </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#30395242">30395242</a> +             skyPos = source.getCoord()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#30395242">30395242</a> +             sourceInnerTractId = skyInfo.skyMap.findTract(skyPos).getId()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#30395242">30395242</a> +             isTractInner = sourceInnerTractId == tractId</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#30395242">30395242</a> +             source.setFlag(self.isTractInnerKey, isTractInner)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#30395242">30395242</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#30395242">30395242</a> +             if nChildKey is None or source.get(nChildKey) == 0:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#30395242">30395242</a> +                 source.setFlag(self.isPrimaryKey, isPatchInner and isTractInner)</div>
                
                    @classmethod
                    def _makeArgumentParser(cls):
                        parser = pipeBase.ArgumentParser(name=cls._DefaultName)
                        parser.add_id_argument("--id", "deepCoadd", help="data ID, e.g. --id tract=12345 patch=1,2",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#1ab95d8f">1ab95d8f</a> -                                ContainerClass=ExistingCoaddDataIdContainer)</div>
              ?                                               --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#8f6870f5">8f6870f5</a> +                                ContainerClass=CoaddDataIdContainer)</div>
                        return parser
                
                    def _getConfigName(self):
                        """Return the name of the config dataset
                        """
                        return "%s_processCoadd_config" % (self.config.coaddName,)
                    
                    def _getMetadataName(self):
                        """Return the name of the metadata dataset
                        """
                        return "%s_processCoadd_metadata" % (self.config.coaddName,)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="165af203"/></a>165af203</h3>

<pre>
commit 165af203d598f5bfde5553e0bf0a24a46ecec9f2
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue May 29 18:49:24 2012 -0500

    Scripts to reduce LSST-generated S82 coadds.
</pre>
<h3><a name="af675928"/></a>af675928</h3>

<pre>
commit af6759285e5c8383e74f2e40dcee7d6fbd08b769
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 31 17:11:25 2012 +0900

    refactored processCcd and processCoadd to remove duplicate coadd; now both inherit from processImage
</pre>
<h3><a name="08a8ec02"/></a>08a8ec02</h3>

<pre>
commit 08a8ec029dd52ac55e47b707a6905df061a40506
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:54:36 2014 +0900

    move CalibrateTask from ProcessImageTask into ProcessCcdTask
    
    CalibrateTask seems to have been included in ProcessImageTask before the
    days of CoaddPsf, when we needed to be able to generate a Psf for a coadd
    using the coadd; this is no longer necessary, and its presence in
    ProcessImageTask stands in the way of further refactoring to support the
    plan for coadd multi-band deblending and measurement.
    
    In order to implement matching between the detected sources and the
    reference catalog, I've added an AstrometryTask to ProcessCoaddTask, since
    it can no longer rely on the one in CalibrateTask.  This change does
    change the config hierarchy, and so will break use of processCcd on
    data repositories with existing data (if not using "--clobber-config").
</pre>
<h3><a name="9e8563fd"/></a>9e8563fd</h3>

<pre>
commit 9e8563fd8d630dad967786387b1f27b6bc7ee039
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Sep 12 11:47:08 2014 -0400

    processCoadd: set detection to use the declared variances
    
    In detection on a coadd, we typically want to normalise out
    the (sometimes extreme) differences in depth over the image
    due to dithers.
</pre>
<h3><a name="1ab95d8f"/></a>1ab95d8f</h3>

<pre>
commit 1ab95d8fd0aadf5be3349a901392b1ac4d4d3ec6
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue May 21 05:57:11 2013 +0900

    only processCoadd/forcedPhotCoadd on existing data
    
    Added an ExistingCoaddDataIdContainer which tosses data references
    that don't exist.  Using this in ProcessCoaddTask and ForcedPhotCoaddTask
    means we don't get unnecessary backtraces when we know the data doesn't
    exist.
</pre>
<h3><a name="c6e19050"/></a>c6e19050</h3>

<pre>
commit c6e19050733811b25b589d430d49027e75fac54a
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Dec 18 22:41:51 2014 -0500

    add task to propagate flags from CCDs to coadds
    
    This is used in processCoadd and the detection and measurement parts
    of the multiband processing scheme to flag stars on the coadd as
    having been used for PSF determination.
    
    Based on code written by Hironao Miyatake.
</pre>
<h3><a name="886d41a3"/></a>886d41a3</h3>

<pre>
commit 886d41a34846ecf9367ac511a1253681b615b38e
Merge: 0568827 14efc9c
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Jun 29 12:02:11 2013 +0900

    Merge remote-tracking branch 'lsst/master'
    
    Conflicts:
    	python/lsst/pipe/tasks/coaddBase.py
    	python/lsst/pipe/tasks/forcedPhot.py
    	python/lsst/pipe/tasks/makeCoaddTempExp.py
    	python/lsst/pipe/tasks/processCoadd.py
</pre>
<h3><a name="69bbbeaa"/></a>69bbbeaa</h3>

<pre>
commit 69bbbeaa49963b60b7fc0e3457f43b4703ad45a1
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Fri Apr 25 14:15:22 2014 +0900

    Skip source whose centroid is nan in setIsPrimaryFlag().
</pre>
<h3><a name="0494ead9"/></a>0494ead9</h3>

<pre>
commit 0494ead9c5c4fc97f8f48aa1a138cec9ec552bdf
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Aug 27 09:46:59 2014 -0400

    measurePSF: Allow for option to reserve PSF candidates from fitting for cross-validation
    
    To get a unique random seed for each CCD this required adding expId method for processImage
</pre>
<h3><a name="a3d241a4"/></a>a3d241a4</h3>

<pre>
commit a3d241a4a5040e11be4ea808539b59f411421055
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 6 21:13:42 2015 -0500

    consolidate code for setting flags for primary tract/patch
    
    The code was used in two places in pipe_tasks, and we want to
    use it in one more place elsewhere.  Pulled it out of ProcessCoaddTask
    and into its own independent SetPrimaryFlagsTask.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="62e47fe0"/></a>62e47fe0</h3>

<pre>
commit 62e47fe058cdf75e90018c0ec8d1ae16270231b6
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Apr 9 11:07:44 2013 -0400

    Update processCoadd defaults to avoid recalibrating things we know.
</pre>
<h3><a name="2f0ac149"/></a>2f0ac149</h3>

<pre>
commit 2f0ac149aebcf8949b152b5e930d844b6065b680
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Sep 25 16:03:07 2012 -0500

    initialize outputs at the top of tasks
</pre>
<h3><a name="cb0cca56"/></a>cb0cca56</h3>

<pre>
commit cb0cca56b54ba2fb0be63d7f02da64b5899a8dd2
Author: Russell Owen <rowen@uw.edu>
Date:   Thu May 23 14:21:03 2013 -0700

    Modify ProcessCoaddTask to add flags to sources indicating is in inner region of patch
    and is inner region of tract.
</pre>
<h3><a name="8f6870f5"/></a>8f6870f5</h3>

<pre>
commit 8f6870f55c5528a55e303acbb082071bf2e00922
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Apr 8 19:07:55 2013 -0400

    CoaddArgumentParser has been replaced with CoaddDataIdContainer.
</pre>
<h3><a name="424c7109"/></a>424c7109</h3>

<pre>
commit 424c7109601d5196ccfa977a28273c16ec032ef4
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Jun 20 16:33:29 2012 -0700

    Updated the two coadd versions of processCcdSdss. Untested.
</pre>
<h3><a name="e0116f17"/></a>e0116f17</h3>

<pre>
commit e0116f179ec95625b82333a1abe45c424b192bef
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Wed Mar 4 02:55:24 2015 -0800

    DM-420 removal of meas_algorithms measurement
    
    Move all measurement tests to meas_base
    Removed field named for version 0 deblender
    Remove use of tableVersion on measurement task and code tasks which used it.
</pre>
<h3><a name="240e68c6"/></a>240e68c6</h3>

<pre>
commit 240e68c6b25a6a5ec0d61ce5d7e817223a9cfccf
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Apr 9 18:59:59 2013 -0400

    More fixes for ProcessCoadd so it works when there's a valid input PSF.
</pre>
<h3><a name="4a61a62d"/></a>4a61a62d</h3>

<pre>
commit 4a61a62db4942f3aec82216b7fd1bddd02325aea
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Jun 5 18:56:14 2013 -0500

    processCoadd fixes for passing results.sources variables
</pre>
<h3><a name="30395242"/></a>30395242</h3>

<pre>
commit 303952420bdef67f62abae341fbde64b99feb844
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Jun 5 16:15:36 2013 -0700

    Respond to review:
    - move setting of the is-primary flag and related flags to a method of ProcessCoaddTask
    - use a key instead of a string to access the nchild field
    - fix mis-setting of __all__ in coaddBase
</pre>
<h3><a name="671f4e40"/></a>671f4e40</h3>

<pre>
commit 671f4e407a2db21cb99ef70d743df739a692fa17
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Fri Feb 6 14:12:03 2015 -0800

    modify processCoadd and Ccd to pass the unique exposure Id to the measurement.run()
    
    This is being used to set the noise seed.
</pre>
<h3><a name="c066caa3"/></a>c066caa3</h3>

<pre>
commit c066caa3335c97cc59566fa0cd1c03822a3796ad
Author: pgee <pgee@pgeepc2.gateway.2wire.net>
Date:   Wed Feb 12 11:41:45 2014 -0800

    Changes to move CoaddDataIdContainer to coadd.utils
</pre>
<h3><a name="2f1f8046"/></a>2f1f8046</h3>

<pre>
commit 2f1f804688a668f96de6a2c9c805977fdd368da9
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Jul 3 17:42:24 2014 -0700

    Fixes for review of DM-545
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/makeSkyMap.py"/></a>python/lsst/pipe/tasks/makeSkyMap.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#9419aa0b">9419aa0b</a> - # Copyright 2008, 2009, 2010 LSST Corporation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#3cf09ecc">3cf09ecc</a> + # Copyright 2008-2015 AURA/LSST.</div>
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#9419aa0b">9419aa0b</a> - # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the</div>
              ?                                                         --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#3cf09ecc">3cf09ecc</a> + # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</div>
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
21   <a href="#9419aa0b">9419aa0b</a> - # see <http://www.lsstcorp.org/LegalNotices/>.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
21   <a href="#3cf09ecc">3cf09ecc</a> + # see <https://www.lsstcorp.org/LegalNotices/>.</div>
              ?            +
                #
                import sys
                import traceback
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#5a53ed27">5a53ed27</a> - import lsst.afw.coord as afwCoord</div>
                import lsst.afw.geom as afwGeom
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                from lsst.skymap import skyMapRegistry
                
                class MakeSkyMapConfig(pexConfig.Config):
                    """Config for MakeSkyMapTask
                    """
                    coaddName = pexConfig.Field(
                        doc = "coadd name, e.g. deep, goodSeeing, chiSquared",
                        dtype = str,
                        default = "deep",
                    )
                    skyMap = skyMapRegistry.makeField(
                        doc = "type of skyMap",
                        default = "dodeca",
                    )
                    doWrite = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#9419aa0b">9419aa0b</a> -         doc = "persist the skyMap?",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#d3ed8aae">d3ed8aae</a> +         doc = "persist the skyMap? If False then run generates the sky map and returns it, " \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#d3ed8aae">d3ed8aae</a> +             + "but does not save it to the data repository",</div>
                        dtype = bool,
                        default = True,
                    )
                
                
                class MakeSkyMapRunner(pipeBase.TaskRunner):
                    """Only need a single butler instance to run on."""
                    @staticmethod
                    def getTargetList(parsedCmd):
                        return [parsedCmd.butler]
                
                    def precall(self, parsedCmd):
                        # We overload to disable writing/checking of schemas and configs.
                        # There's only one SkyMap per rerun anyway, so the config is redundant,
                        # and checking it means we can't overwrite or append to one once we've
                        # written it.
                        return True
                
                    def __call__(self, butler):
                        task = self.TaskClass(config=self.config, log=self.log)
                        if self.doRaise:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#a4f4272b">a4f4272b</a> -             result = task.run(butler)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#fdd25124">fdd25124</a> +             results = task.run(butler)</div>
              ?                   +
                        else:
                            try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#a4f4272b">a4f4272b</a> -                 result = task.run(butler)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#fdd25124">fdd25124</a> +                 results = task.run(butler)</div>
              ?                       +
                            except Exception, e:
                                task.log.fatal("Failed: %s" % e)
                                if not isinstance(e, pipeBase.TaskError):
                                    traceback.print_exc(file=sys.stderr)
                        task.writeMetadata(butler)
                        if self.doReturnResults:
                            return results
                
                class MakeSkyMapTask(pipeBase.CmdLineTask):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#9419aa0b">9419aa0b</a> -     """Make a SkyMap in a repository, setting it up for coaddition</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#3cf09ecc">3cf09ecc</a> +     """!Make a sky map in a repository</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#d3ed8aae">d3ed8aae</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#d3ed8aae">d3ed8aae</a> +     Making a sky map in a repository is a prerequisite for making a coadd,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#d3ed8aae">d3ed8aae</a> +     since the sky map is used as the pixelization for the coadd.</div>
                    """
                    ConfigClass = MakeSkyMapConfig
                    _DefaultName = "makeSkyMap"
                    RunnerClass = MakeSkyMapRunner
                
                    def __init__(self, **kwargs):
                        pipeBase.CmdLineTask.__init__(self, **kwargs)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#9419aa0b">9419aa0b</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#3cf09ecc">3cf09ecc</a> + </div>
                    @pipeBase.timeMethod
                    def run(self, butler):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#9419aa0b">9419aa0b</a> -         """Make a skymap</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#9419aa0b">9419aa0b</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#3cf09ecc">3cf09ecc</a> +         """!Make a skymap, persist it (optionally) and log some information about it</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#3cf09ecc">3cf09ecc</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#b847d5b6">b847d5b6</a> -         @param butler: data butler</div>
              ?                      ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#3cf09ecc">3cf09ecc</a> +         @param[in]   butler  data butler</div>
              ?               ++++++       ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#9419aa0b">9419aa0b</a> -         @return a pipeBase Struct containing:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#3cf09ecc">3cf09ecc</a> +         @return      a pipeBase Struct containing:</div>
              ?                 +++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#9419aa0b">9419aa0b</a> -         - skyMap: the constructed SkyMap</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#3cf09ecc">3cf09ecc</a> +                      - skyMap: the constructed SkyMap</div>
              ? +++++++++++++
                        """
                        skyMap = self.config.skyMap.apply()
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#d3ed8aae">d3ed8aae</a> +         self.logSkyMapInfo(skyMap)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#d3ed8aae">d3ed8aae</a> +         if self.config.doWrite:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#d3ed8aae">d3ed8aae</a> +             butler.put(skyMap, self.config.coaddName + "Coadd_skyMap")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#d3ed8aae">d3ed8aae</a> +         return pipeBase.Struct(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#d3ed8aae">d3ed8aae</a> +             skyMap = skyMap</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#d3ed8aae">d3ed8aae</a> +         )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#d3ed8aae">d3ed8aae</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#d3ed8aae">d3ed8aae</a> +     def logSkyMapInfo(self, skyMap):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#3cf09ecc">3cf09ecc</a> +         """!Log information about a sky map</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#d3ed8aae">d3ed8aae</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#3cf09ecc">3cf09ecc</a> +         @param[in] skyMap  sky map (an lsst.skyMap.SkyMap)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#d3ed8aae">d3ed8aae</a> +         """</div>
                        self.log.info("sky map has %s tracts" % (len(skyMap),))
                        for tractInfo in skyMap:
                            wcs = tractInfo.getWcs()
                            posBox = afwGeom.Box2D(tractInfo.getBBox())
                            pixelPosList = (
                                posBox.getMin(),
                                afwGeom.Point2D(posBox.getMaxX(), posBox.getMinY()),
                                posBox.getMax(),
                                afwGeom.Point2D(posBox.getMinX(), posBox.getMaxY()),
                            )
                            skyPosList = [wcs.pixelToSky(pos).getPosition(afwGeom.degrees) for pos in pixelPosList]
                            posStrList = ["(%0.3f, %0.3f)" % tuple(skyPos) for skyPos in skyPosList]
                            self.log.info("tract %s has corners %s (RA, Dec deg) and %s x %s patches" % \
                                (tractInfo.getId(), ", ".join(posStrList), \
                                tractInfo.getNumPatches()[0], tractInfo.getNumPatches()[1]))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#9419aa0b">9419aa0b</a> -         if self.config.doWrite:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#afd5a427">afd5a427</a> -             butler.put(skyMap, self.config.coaddName + "Coadd_skyMap")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#9419aa0b">9419aa0b</a> -         return pipeBase.Struct(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#9419aa0b">9419aa0b</a> -             skyMap = skyMap</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#9419aa0b">9419aa0b</a> -         )</div>
                
                    @classmethod
                    def _makeArgumentParser(cls):
                        """Create an argument parser
                
                        No identifiers are added because none are used.
                        """
                        return pipeBase.ArgumentParser(name=cls._DefaultName)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#7b0c11cc">7b0c11cc</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#3cf09ecc">3cf09ecc</a> + </div>
                    def _getConfigName(self):
                        """Return the name of the config dataset
                        """
                        return "%s_makeSkyMap_config" % (self.config.coaddName,)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#7b0c11cc">7b0c11cc</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#3cf09ecc">3cf09ecc</a> + </div>
                    def _getMetadataName(self):
                        """Return the name of the metadata dataset
                        """
                        return "%s_makeSkyMap_metadata" % (self.config.coaddName,)
                
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="9419aa0b"/></a>9419aa0b</h3>

<pre>
commit 9419aa0b7d6174387ca4528ff744e2cc67736933
Author: Russell Owen <rowen@uw.edu>
Date:   Tue May 15 14:16:03 2012 -0700

    First cut. Need modern data repo to test it.
</pre>
<h3><a name="a4f4272b"/></a>a4f4272b</h3>

<pre>
commit a4f4272b1b762a6d0428b31f58ebda07d6b3af50
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Feb 27 17:03:38 2013 +0900

    Re-enable config and metadata saving for makeSkyMap, as well as doRaise-included traceback squashing.
</pre>
<h3><a name="b847d5b6"/></a>b847d5b6</h3>

<pre>
commit b847d5b6422999a3f10cb1eb4b5a0ae33f2c0a76
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Feb 18 23:14:57 2013 +0900

    Convert CmdLineTasks to #2144 (multiple identifier arguments).
</pre>
<h3><a name="afd5a427"/></a>afd5a427</h3>

<pre>
commit afd5a42709fde66263a1ce8fa8a092fb920a2191
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Feb 25 21:35:52 2013 +0900

    Fix makeSkyMap following tickets/2144 merge (#2569)
    
    A few things didn't get adapted, or got adapted wrongly or insufficiently.
</pre>
<h3><a name="7b0c11cc"/></a>7b0c11cc</h3>

<pre>
commit 7b0c11cc62fe2a4749d4132354e66afca2d959f0
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jun 22 13:42:21 2012 -0500

    Modified makeSkyMap to persist config and metadata
</pre>
<h3><a name="5a53ed27"/></a>5a53ed27</h3>

<pre>
commit 5a53ed27a5ffaaae8080c1a2f731c87e7c2e1e09
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jun 8 12:07:09 2012 -0500

    Fixed some residual references to NullSelectTask.
    Modified makeSkyMap to report more information about the created map
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="3cf09ecc"/></a>3cf09ecc</h3>

<pre>
commit 3cf09ecc19e1d9f2d57f0aed4b07a277dbad0d72
Author: Lauren MacArthur <lauren@astro.princeton.edu>
Date:   Tue May 12 14:12:57 2015 -0400

    Remove whitespace, fix copyright year, and minor formatting
</pre>
<h3><a name="fdd25124"/></a>fdd25124</h3>

<pre>
commit fdd25124d0795becb7597be2957fdec92c6a7b1d
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Jul 7 15:05:48 2014 -0700

    Bug fix: MakeSkyMapTask's task runner would not return results
    
    MakeSkyMapTask's task runner MakeSkyMapRunner had a bug in __call__
    that would fail to return results when requested.
    I also took the opportunity to remove an unused import.
</pre>
<h3><a name="d3ed8aae"/></a>d3ed8aae</h3>

<pre>
commit d3ed8aaed16c4ce3cc01a766a7e9c4356dba2ac7
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jul 11 15:39:40 2014 -0700

    Add a sample task and runner. Pushed so I can try it at NCSA.
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/testRegister.py"/></a>tests/testRegister.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008-2013 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import unittest
                import numpy
                
                import lsst.utils.tests as utilsTests
                import lsst.afw.image as afwImage
                import lsst.afw.table as afwTable
                import lsst.afw.coord as afwCoord
                import lsst.afw.geom as afwGeom
                import lsst.afw.display.ds9 as ds9
                
                from lsst.pipe.base import Struct
                from lsst.pipe.tasks.registerImage import RegisterConfig, RegisterTask
                
                try:
                    display
                except NameError:
                    display = False
                
                class RegisterTestCase(unittest.TestCase):
                    """A test case for RegisterTask."""
                
                    def setUp(self):
                        self.dx = -5
                        self.dy = +3
                        self.numSources = 123
                        self.border = 10 # Must be larger than dx,dy
                        self.width = 1000
                        self.height = 1000
                        self.pixelScale = 0.1 * afwGeom.arcseconds # So dx,dy is not larger than RegisterConfig.matchRadius
                
                    def tearDown(self):
                        del self.pixelScale
                
                    def create(self):
                        """Create test images and sources
                
                        We will create two fake images with some 'sources', which are just single bright pixels.
                        The images will have the same sources with a constant offset between them.  The WCSes
                        of the two images are identical, despite the offset; this simulates a small e.g., pointing
                        error, or misalignment that the RegisterTask should rectify.
                        """
                        numpy.random.seed(0)
                        templateImage = afwImage.MaskedImageF(self.width, self.height)
                        templateImage.set(0)
                        inputImage = afwImage.MaskedImageF(self.width, self.height)
                        inputImage.set(0)
                
                        templateArray = templateImage.getImage().getArray()
                        inputArray = inputImage.getImage().getArray()
                
                        # Sources are at integer positions to ensure warped pixels have value of unity
                        xTemplate = numpy.random.randint(self.border, self.width - self.border, self.numSources)
                        yTemplate = numpy.random.randint(self.border, self.width - self.border, self.numSources)
                        xInput = xTemplate + self.dx
                        yInput = yTemplate + self.dy
                
                        # Note: numpy indices are backwards: [y,x]
                        templateArray[(yTemplate).astype(int),(xTemplate).astype(int)] = 1
                        inputArray[(yInput).astype(int),(xInput).astype(int)] = 1
                
                        # Create WCSes
                        centerCoord = afwCoord.IcrsCoord(0*afwGeom.degrees, 0*afwGeom.degrees)
                        centerPixel = afwGeom.Point2D(self.width/2, self.height/2)
                        wcs = afwImage.makeWcs(centerCoord, centerPixel, self.pixelScale.asDegrees(), 0, 0,
                                               self.pixelScale.asDegrees())
                
                        # Note that one of the WCSes must be "wrong", since they are the same, but the sources are offset.
                        # It is the job of the RegisterTask to align the images, despite the "wrong" WCS.
                        templateExp = afwImage.makeExposure(templateImage, wcs)
                        inputExp = afwImage.makeExposure(inputImage, wcs)
                
                        # Generate catalogues
                        schema = afwTable.SourceTable.makeMinimalSchema()
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#aabf3c6d">aabf3c6d</a> +         schema.setVersion(0)   </div>
                        centroidKey = schema.addField("center", type="PointD")
                
                        def newCatalog():
                            catalog = afwTable.SourceCatalog(schema)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#ebf80858">ebf80858</a> -             catalog.getTable().defineCentroid(centroidKey)</div>
              ?                                                    ^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#6bd9c6d6">6bd9c6d6</a> +             catalog.getTable().defineCentroid("center")</div>
              ?                                               +    + ^
                            return catalog
                
                        templateSources = newCatalog()
                        inputSources = newCatalog()
                
                        coordKey = templateSources.getCoordKey()
                        for xt, yt, xi, yi in zip(xTemplate, yTemplate, xInput, yInput):
                            tRecord = templateSources.addNew()
                            iRecord = inputSources.addNew()
                
                            tPoint = afwGeom.Point2D(float(xt), float(yt))
                            iPoint = afwGeom.Point2D(float(xi), float(yi))
                
                            tRecord.set(centroidKey, tPoint)
                            iRecord.set(centroidKey, iPoint)
                            tRecord.set(coordKey, wcs.pixelToSky(tPoint))
                            iRecord.set(coordKey, wcs.pixelToSky(iPoint))
                
                        self.showImage(inputExp, inputSources, "Input", 1)
                        self.showImage(templateExp, templateSources, "Template", 2)
                
                        return Struct(xInput=xInput, yInput=yInput, xTemplate=xTemplate, yTemplate=yTemplate, wcs=wcs,
                                      inputExp=inputExp, inputSources=inputSources,
                                      templateExp=templateExp, templateSources=templateSources)
                
                    def runTask(self, inData, config=RegisterConfig()):
                        """Run the task on the data"""
                        config.sipOrder = 2
                        task = RegisterTask(name="register", config=config)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#ebf80858">ebf80858</a> -         results = task.run(inData.inputSources, inData.inputExp.getWcs(), inData.inputExp.getBBox(),</div>
              ?                                                                          ---------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#2c455602">2c455602</a> +         results = task.run(inData.inputSources, inData.inputExp.getWcs(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#ebf80858">ebf80858</a> -                            inData.templateSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#2c455602">2c455602</a> +             inData.inputExp.getBBox(afwImage.LOCAL), inData.templateSources)</div>
                        warpedExp = task.warpExposure(inData.inputExp, results.wcs, inData.templateExp.getWcs(),
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#ebf80858">ebf80858</a> -                                       inData.templateExp.getBBox())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#2c455602">2c455602</a> +                                       inData.templateExp.getBBox(afwImage.LOCAL))</div>
              ?                                                                  ++++++++++++++
                        warpedSources = task.warpSources(inData.inputSources, results.wcs, inData.templateExp.getWcs(),
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#ebf80858">ebf80858</a> -                                          inData.templateExp.getBBox())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#2c455602">2c455602</a> +                                          inData.templateExp.getBBox(afwImage.LOCAL))</div>
              ?                                                                     ++++++++++++++
                
                        self.showImage(warpedExp, warpedSources, "Aligned", 3)
                        return Struct(warpedExp=warpedExp, warpedSources=warpedSources, matches=results.matches,
                                      wcs=results.wcs, task=task)
                
                    def assertRegistered(self, inData, outData, bad=set()):
                        """Assert that the registration task is registering images"""
                        xTemplate = numpy.array([x for i,x in enumerate(inData.xTemplate) if i not in bad])
                        yTemplate = numpy.array([y for i,y in enumerate(inData.yTemplate) if i not in bad])
                        alignedArray = outData.warpedExp.getMaskedImage().getImage().getArray()
                        self.assertTrue((alignedArray[yTemplate,xTemplate] == 1.0).all())
                        for dx in (-1, 0, +1):
                            for dy in range(-1, 0, +1):
                                # The density of points is such that I can assume that no point is next to another.
                                # The values are not quite zero because the "image" is undersampled, so we get ringing.
                                self.assertTrue((alignedArray[yTemplate+dy,xTemplate+dx] < 0.1).all())
                
                        xAligned = numpy.array([x for i,x in enumerate(outData.warpedSources["center.x"]) if i not in bad])
                        yAligned = numpy.array([y for i,y in enumerate(outData.warpedSources["center.y"]) if i not in bad])
                        self.assertAlmostEqual((xAligned - xTemplate).mean(), 0, 8)
                        self.assertAlmostEqual((xAligned - xTemplate).std(), 0, 8)
                        self.assertAlmostEqual((yAligned - yTemplate).mean(), 0, 8)
                        self.assertAlmostEqual((yAligned - yTemplate).std(), 0, 8)
                
                    def assertMetadata(self, outData, numRejected=0):
                        """Assert that the registration task is populating the metadata"""
                        metadata = outData.task.metadata
                        self.assertEqual(metadata.get("MATCH_NUM"), self.numSources)
                        self.assertAlmostEqual(metadata.get("SIP_RMS"), 0.0)
                        self.assertEqual(metadata.get("SIP_GOOD"), self.numSources-numRejected)
                        self.assertEqual(metadata.get("SIP_REJECTED"), numRejected)
                
                
                    def testRegister(self):
                        """Test image registration"""
                        inData = self.create()
                        outData = self.runTask(inData)
                        self.assertRegistered(inData, outData)
                        self.assertMetadata(outData)
                
                    def testRejection(self):
                        """Test image registration with rejection"""
                        inData = self.create()
                
                        # Tweak a source to have a bad offset
                        badIndex = 111
                        
                        coordKey = inData.inputSources[badIndex].getTable().getCoordKey()
                        centroidKey = inData.inputSources[badIndex].getTable().getCentroidKey()
                        x,y = float(inData.xInput[badIndex] + 0.01), float(inData.yInput[badIndex] - 0.01)
                        point = afwGeom.Point2D(x, y)
                        inData.inputSources[badIndex].set(centroidKey, point)
                        inData.inputSources[badIndex].set(coordKey, inData.wcs.pixelToSky(point))
                
                        config = RegisterConfig()
                        config.sipRej = 10.0
                
                        outData = self.runTask(inData)
                        self.assertRegistered(inData, outData, bad=set([badIndex]))
                        self.assertMetadata(outData, numRejected=1)
                
                    def showImage(self, image, sources, title, frame):
                        """Display an image
                
                        Images are only displayed if 'display' is turned on.
                
                        @param image: Image to display
                        @param sources: Sources to mark on the display
                        @param title: Title to give frame
                        @param frame: Frame on which to display
                        """
                        if not display:
                            return
                        ds9.mtv(image, title=title, frame=frame)
                        with ds9.Buffering():
                            for s in sources:
                                center = s.getCentroid()
                                ds9.dot("o", center.getX(), center.getY(), frame=frame)
                
                
                def suite():
                    utilsTests.init()
                    suites = []
                    suites += unittest.makeSuite(RegisterTestCase)
                    suites += unittest.makeSuite(utilsTests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(shouldExit=False):
                    utilsTests.run(suite(), shouldExit)
                
                if __name__ == "__main__":
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="ebf80858"/></a>ebf80858</h3>

<pre>
commit ebf8085801007d8c7b4c868653b77aabe0522ced
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jan 22 10:16:41 2013 -0500

    Add task to register (align) images (#2562).
    
    This depends on meas_astrom #2579 (template CreateWcsWithSip on MatchVector
    type), since we need a Wcs from a SourceMatchVector rather than
    ReferenceMatchVector.
    
    Added test, with and without rejection.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="6bd9c6d6"/></a>6bd9c6d6</h3>

<pre>
commit 6bd9c6d6399304b2cda8c0fa9d814d698b2625e1
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 22 15:22:29 2014 -0600

    Fix unit test failure from merge of DM-936
</pre>
<h3><a name="aabf3c6d"/></a>aabf3c6d</h3>

<pre>
commit aabf3c6dad2c69cf311258197ff50534fc684556
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Fri Aug 29 18:01:49 2014 -0700

    DM-1070 fix unit tests which depend on table version 0
</pre>
<h3><a name="2c455602"/></a>2c455602</h3>

<pre>
commit 2c4556020545add633871e5932c3293b64b71906
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Sep 9 15:06:07 2014 -0700

    Specify image origin
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/scaleZeroPoint.py"/></a>python/lsst/pipe/tasks/scaleZeroPoint.py
### Diff:

<pre>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import numpy
                import lsst.afw.geom as afwGeom
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#5d569e2d">5d569e2d</a> - import lsst.afw.image as afwMath</div>
                import lsst.afw.image as afwImage
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                from lsst.pipe.tasks.selectImages import BaseSelectImagesTask
                
                __all__ = ["ImageScaler", "SpatialImageScaler", "ScaleZeroPointTask"]
                
                
                class ImageScaler(object):
                    """A class that scales an image
                
                    This version uses a single scalar. Fancier versions may use a spatially varying scale.
                    """
                    def __init__(self, scale=1.0):
                        """Construct an ImageScaler
                
                        @param[in] scale: scale correction to apply (see scaleMaskedImage);
                        """
                        self._scale = scale
                
                    def scaleMaskedImage(self, maskedImage):
                        """Scale the specified image or masked image in place.
                
                        @param[in,out] maskedImage: masked image to scale
                        """
                        maskedImage *= self._scale
                
                
                class SpatialImageScaler(ImageScaler):
                    """Multiplicative image scaler using interpolation over a grid of points.
                
                    Contains the x, y positions in tract coordinates and the scale factors.
                    Interpolates only when scaleMaskedImage() or getInterpImage() is called.
                
                    Currently the only type of 'interpolation' implemented is CONSTANT which calculates the mean.
                    """
                
                    def __init__(self, interpStyle, xList, yList, scaleList):
                        """Constructor
                
                        @param[in] interpStyle: interpolation style (CONSTANT is only option)
                        @param[in] xList: list of X pixel positions
                        @param[in] yList: list of Y pixel positions
                        @param[in] scaleList: list of multiplicative scale factors at (x,y)
                
                        @raise RuntimeError if the lists have different lengths
                        """
                        if len(xList) != len(yList) or len(xList) != len(scaleList):
                            raise RuntimeError(
                                "len(xList)=%s len(yList)=%s, len(scaleList)=%s but all lists must have the same length" %
                                (len(xList), len(yList), len(scaleList)))
                
                        #Eventually want this do be: self.interpStyle = getattr(afwMath.Interpolate2D, interpStyle)
                        self._xList = xList
                        self._yList = yList
                        self._scaleList = scaleList
                
                    def scaleMaskedImage(self, maskedImage):
                        """Apply scale correction to the specified masked image
                
                        @param[in,out] image to scale; scale is applied in place
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#5d569e2d">5d569e2d</a> -         scale = self.getInterpImage(maskedImage.getBBox(afwImage.PARENT))</div>
              ?                                                         ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#35e3701f">35e3701f</a> +         scale = self.getInterpImage(maskedImage.getBBox())</div>
                        maskedImage *= scale
                
                    def getInterpImage(self, bbox):
                        """Return an image containing the scale correction with same bounding box as supplied.
                
                        @param[in] bbox: integer bounding box for image (afwGeom.Box2I)
                        """
                        npoints = len(self._xList)
                
                        if npoints < 1:
                            raise RuntimeError("Cannot create scaling image. Found no fluxMag0s to interpolate")
                
                        image = afwImage.ImageF(bbox, numpy.mean(self._scaleList))
                
                        return image
                
                
                class ScaleZeroPointConfig(pexConfig.Config):
                    """Config for ScaleZeroPointTask
                    """
                    zeroPoint = pexConfig.Field(
                        dtype = float,
                        doc = "desired photometric zero point",
                        default = 27.0,
                    )
                
                
                class SpatialScaleZeroPointConfig(ScaleZeroPointConfig):
                    selectFluxMag0 = pexConfig.ConfigurableField(
                        doc = "Task to select data to compute spatially varying photometric zeropoint",
                        target = BaseSelectImagesTask,
                    )
                
                    interpStyle = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "Algorithm to interpolate the flux scalings;" \
                              "Currently only one choice implemented",
                        default = "CONSTANT",
                        allowed={
                             "CONSTANT" : "Use a single constant value",
                             }
                    )
                
                
                class ScaleZeroPointTask(pipeBase.Task):
                    """Compute scale factor to scale exposures to a desired photometric zero point
                
                    This simple version assumes that the zero point is spatially invariant.
                    """
                    ConfigClass = ScaleZeroPointConfig
                    _DefaultName = "scaleZeroPoint"
                
                    def __init__(self, *args, **kwargs):
                        """Construct a ScaleZeroPointTask
                        """
                        pipeBase.Task.__init__(self, *args, **kwargs)
                
                        #flux at mag=0 is 10^(zeroPoint/2.5)   because m = -2.5*log10(F/F0)
                        fluxMag0 = 10**(0.4 * self.config.zeroPoint)
                        self._calib = afwImage.Calib()
                        self._calib.setFluxMag0(fluxMag0)
                
                    def run(self, exposure, dataRef=None):
                        """Scale the specified exposure to the desired photometric zeropoint
                
                        @param[in,out] exposure: exposure to scale; masked image is scaled in place
                        @param[in] dataRef: dataRef for exposure.
                                               Not used, but in API so that users can switch between spatially variant
                                               and invariant tasks
                        @return a pipeBase.Struct containing:
                        - imageScaler: the image scaling object used to scale exposure
                        """
                        imageScaler = self.computeImageScaler(exposure=exposure, dataRef=dataRef)
                        mi = exposure.getMaskedImage()
                        imageScaler.scaleMaskedImage(mi)
                        return pipeBase.Struct(
                            imageScaler = imageScaler,
                        )
                
                    def computeImageScaler(self, exposure, dataRef=None):
                        """Compute image scaling object for a given exposure.
                
                        @param[in] exposure: exposure for which scaling is desired
                        @param[in] dataRef: dataRef for exposure.
                                               Not used, but in API so that users can switch between spatially variant
                                               and invariant tasks
                        """
                        scale = self.scaleFromCalib(exposure.getCalib()).scale
                        return ImageScaler(scale)
                
                
                    def getCalib(self):
                        """Get desired Calib
                
                        @return calibration (lsst.afw.image.Calib) with fluxMag0 set appropriately for config.zeroPoint
                        """
                        return self._calib
                
                    def scaleFromCalib(self, calib):
                        """Compute the scale for the specified Calib
                
                        Compute scale, such that if pixelCalib describes the photometric zeropoint of a pixel
                        then the following scales that pixel to the photometric zeropoint specified by config.zeroPoint:
                            scale = computeScale(pixelCalib)
                            pixel *= scale
                
                        @return a pipeBase.Struct containing:
                        - scale, as described above.
                
                        @note: returns a struct to leave room for scaleErr in a future implementation.
                        """
                        fluxAtZeroPoint = calib.getFlux(self.config.zeroPoint)
                        return pipeBase.Struct(
                            scale = 1.0 / fluxAtZeroPoint,
                        )
                
                    def scaleFromFluxMag0(self, fluxMag0):
                        """Compute the scale for the specified fluxMag0
                
                        This is a wrapper around scaleFromCalib, which see for more information
                
                        @param[in] fluxMag0
                        @return a pipeBase.Struct containing:
                        - scale, as described in scaleFromCalib.
                        """
                        calib = afwImage.Calib()
                        calib.setFluxMag0(fluxMag0)
                        return self.scaleFromCalib(calib)
                
                
                class SpatialScaleZeroPointTask(ScaleZeroPointTask):
                    """Compute spatially varying scale factor to scale exposures to a desired photometric zero point
                    """
                    ConfigClass = SpatialScaleZeroPointConfig
                    _DefaultName = "scaleZeroPoint"
                
                    def __init__(self, *args, **kwargs):
                        ScaleZeroPointTask.__init__(self, *args, **kwargs)
                        self.makeSubtask("selectFluxMag0")
                
                    def run(self, exposure, dataRef):
                        """Scale the specified exposure to the desired photometric zeropoint
                
                        @param[in,out] exposure: exposure to scale; masked image is scaled in place
                        @param[in] dataRef: dataRef for exposure
                
                        @return a pipeBase.Struct containing:
                        - imageScaler: the image scaling object used to scale exposure
                        """
                        imageScaler = self.computeImageScaler(exposure=exposure, dataRef=dataRef)
                        mi = exposure.getMaskedImage()
                        imageScaler.scaleMaskedImage(mi)
                        return pipeBase.Struct(
                            imageScaler = imageScaler,
                        )
                
                    def computeImageScaler(self, exposure, dataRef):
                        """Compute image scaling object for a given exposure.
                
                        @param[in] exposure: exposure for which scaling is desired. Only wcs and bbox are used.
                        @param[in] dataRef: dataRef of exposure
                                            dataRef.dataId used to retrieve all applicable fluxMag0's from a database.
                        @return a SpatialImageScaler
                        """
                
                        wcs = exposure.getWcs()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#5d569e2d">5d569e2d</a> -         bbox = exposure.getBBox(afwImage.PARENT)</div>
                
                        fluxMagInfoList = self.selectFluxMag0.run(dataRef.dataId).fluxMagInfoList
                
                        xList = []
                        yList = []
                        scaleList = []
                
                        for fluxMagInfo in fluxMagInfoList:
                            # find center of field in tract coordinates
                            if not fluxMagInfo.coordList:
                                raise RuntimeError("no x,y data for fluxMagInfo")
                            ctr = afwGeom.Extent2D()
                            for coord in fluxMagInfo.coordList:
                                #accumulate x, y
                                ctr += afwGeom.Extent2D(wcs.skyToPixel(coord))
                            #and find average x, y as the center of the chip
                            ctr = afwGeom.Point2D(ctr / len(fluxMagInfo.coordList))
                            xList.append(ctr.getX())
                            yList.append(ctr.getY())
                            scaleList.append(self.scaleFromFluxMag0(fluxMagInfo.fluxMag0).scale)
                
                        self.log.info("Found %d flux scales for interpolation: %s"% (len(scaleList),
                                                                                     ["%0.4f"%(s) for s in scaleList]))
                        return SpatialImageScaler(
                            interpStyle = self.config.interpStyle,
                            xList = xList,
                            yList = yList,
                            scaleList = scaleList,
                            )
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="5d569e2d"/></a>5d569e2d</h3>

<pre>
commit 5d569e2de8b795cacfcd5fbcd3872d7f95c959e8
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 24 15:01:05 2013 -0500

    Move ScaleZeroPointTask to pipe_tasks
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/testScaleZeroPoint.py"/></a>tests/testScaleZeroPoint.py
### Diff:

<pre>
                #!/usr/bin/env python
                
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                """Test lsst.pipe.tasks.ScaleZeroPointTask
                """
                import os
                import pdb # we may want to say pdb.set_trace()
                import unittest
                import warnings
                import sys
                
                import numpy
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#5d569e2d">5d569e2d</a> - import eups</div>
                import lsst.afw.geom as afwGeom
                import lsst.afw.image as afwImage
                import lsst.afw.image.utils as imageUtils
                import lsst.afw.image.testUtils as imTestUtils
                import lsst.afw.math as afwMath
                import lsst.utils.tests as utilsTests
                import lsst.pex.exceptions as pexExcept
                import lsst.pex.logging as pexLog
                import lsst.pex.policy as pexPolicy
                from lsst.pipe.tasks.scaleZeroPoint import ScaleZeroPointTask
                
                #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
                
                class ScaleZeroPointTaskTestCase(unittest.TestCase):
                    """A test case for ScaleZeroPointTask
                    """
                    def testBasics(self):
                        for outZeroPoint in (23, 24):
                            config = ScaleZeroPointTask.ConfigClass()
                            config.zeroPoint = outZeroPoint
                            zpScaler = ScaleZeroPointTask(config=config)
                            outCalib = zpScaler.getCalib()
                
                            self.assertAlmostEqual(outCalib.getMagnitude(1.0), outZeroPoint)
                
                            for inZeroPoint in (24, 25.5):
                                exposure = afwImage.ExposureF(10,10)
                                mi = exposure.getMaskedImage()
                                mi.set(1.0)
                                var = mi.getVariance()
                                var.set(1.0)
                
                                inCalib = self.makeCalib(inZeroPoint)
                                exposure.setCalib(inCalib)
                                imageScaler = zpScaler.computeImageScaler(exposure)
                
                                predScale = 1.0 / inCalib.getFlux(outZeroPoint)
                                self.assertAlmostEqual(predScale, imageScaler._scale)
                
                                inFluxAtOutZeroPoint = exposure.getCalib().getFlux(outZeroPoint)
                                outFluxAtOutZeroPoint = outCalib.getFlux(outZeroPoint)
                                self.assertAlmostEqual(outFluxAtOutZeroPoint / imageScaler._scale, inFluxAtOutZeroPoint)
                
                                inFluxMag0 = exposure.getCalib().getFluxMag0()
                                outFluxMag0 = outCalib.getFluxMag0()
                                self.assertAlmostEqual(outFluxMag0[0] / imageScaler._scale, inFluxMag0[0], places=4)
                
                                imageScaler.scaleMaskedImage(mi)
                                self.assertAlmostEqual(mi.get(1,1)[0], predScale) #check image plane scaled
                                self.assertAlmostEqual(mi.get(1,1)[2], predScale**2) #check variance plane scaled
                
                
                    def makeCalib(self, zeroPoint):
                        calib = afwImage.Calib()
                        fluxMag0 = 10**(0.4 * zeroPoint)
                        calib.setFluxMag0(fluxMag0, 1.0)
                        return calib
                
                
                def suite():
                    """Return a suite containing all the test cases in this module.
                    """
                    utilsTests.init()
                
                    suites = [
                        unittest.makeSuite(ScaleZeroPointTaskTestCase),
                        unittest.makeSuite(utilsTests.MemoryTestCase),
                    ]
                
                    return unittest.TestSuite(suites)
                
                
                def run(shouldExit=False):
                    """Run the tests"""
                    utilsTests.run(suite(), shouldExit)
                
                if __name__ == "__main__":
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="5d569e2d"/></a>5d569e2d</h3>

<pre>
commit 5d569e2de8b795cacfcd5fbcd3872d7f95c959e8
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 24 15:01:05 2013 -0500

    Move ScaleZeroPointTask to pipe_tasks
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/measurePsf.py"/></a>python/lsst/pipe/tasks/measurePsf.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#75be6566">75be6566</a> + #</div>
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011 LSST Corporation.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#75be6566">75be6566</a> + #</div>
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
12   <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
12   <a href="#75be6566">75be6566</a> + #</div>
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#75be6566">75be6566</a> + #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
18   <a href="#f3a6f7f0">f3a6f7f0</a> - # You should have received a copy of the LSST License Statement and </div>
              ?                                                                    -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
18   <a href="#75be6566">75be6566</a> + # You should have received a copy of the LSST License Statement and</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
19   <a href="#f3a6f7f0">f3a6f7f0</a> - # the GNU General Public License along with this program.  If not, </div>
              ?                                                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
19   <a href="#75be6566">75be6566</a> + # the GNU General Public License along with this program.  If not,</div>
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
22   <a href="#0494ead9">0494ead9</a> - import random</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
22   <a href="#8ca82c24">8ca82c24</a> + import lsst.afw.math as afwMath</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#8ca82c24">8ca82c24</a> + import lsst.afw.display.ds9 as ds9</div>
                import lsst.meas.algorithms as measAlg
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#8ca82c24">8ca82c24</a> + import lsst.meas.algorithms.utils as maUtils</div>
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                import lsst.afw.table as afwTable
                
                class MeasurePsfConfig(pexConfig.Config):
                    starSelector = measAlg.starSelectorRegistry.makeField("Star selection algorithm", default="secondMoment")
                    psfDeterminer = measAlg.psfDeterminerRegistry.makeField("PSF Determination algorithm", default="pca")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#f3a6f7f0">f3a6f7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#696b641f">696b641f</a> + ## \addtogroup LSST_task_documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#696b641f">696b641f</a> + ## \{</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#696b641f">696b641f</a> + ## \page MeasurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#696b641f">696b641f</a> + ## \ref MeasurePsfTask_ "MeasurePsfTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#75be6566">75be6566</a> + ## \copybrief MeasurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#696b641f">696b641f</a> + ## \}</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#0494ead9">0494ead9</a> -     reserveFraction = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#0494ead9">0494ead9</a> -         dtype = float,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#0494ead9">0494ead9</a> -         doc = "Fraction PSF candidates to reserve from fitting",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#b7c8e0e8">b7c8e0e8</a> -         default = 0.2,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#0494ead9">0494ead9</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#0494ead9">0494ead9</a> -     reserveSeed = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#0494ead9">0494ead9</a> -         dtype = int,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#0494ead9">0494ead9</a> -         doc = "This number will be multplied by the exposure ID to set the random seed for reserving candidates",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#0494ead9">0494ead9</a> -         default = 1,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#0494ead9">0494ead9</a> -     )</div>
                
                class MeasurePsfTask(pipeBase.Task):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#f3a6f7f0">f3a6f7f0</a> -     """Conversion notes:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#f3a6f7f0">f3a6f7f0</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#f3a6f7f0">f3a6f7f0</a> -     Split out of Calibrate since it seemed a good self-contained task</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#f3a6f7f0">f3a6f7f0</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#c351575f">c351575f</a> -     @warning</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#c351575f">c351575f</a> -     - I'm not sure I'm using metadata correctly (to replace old sdqa code)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#696b641f">696b641f</a> +     """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#696b641f">696b641f</a> + \anchor MeasurePsfTask_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#75be6566">75be6566</a> + \brief Measure the PSF</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Contents Contents</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_Purpose</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_Initialize</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_IO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_Config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_Debug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#75be6566">75be6566</a> +  - \ref pipe_tasks_measurePsf_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Purpose	Description</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#75be6566">75be6566</a> + A task that wraps two algorithms set via a pair of registries specified in the task's</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#75be6566">75be6566</a> + \ref pipe_tasks_measurePsf_Config.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#75be6566">75be6566</a> + Both algorithms are classes with a constructor taking a pex.config.Config object (\em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#75be6566">75be6566</a> + lsst.meas.algorithms.objectSizeStarSelector.ObjectSizeStarSelector.__init__).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#75be6566">75be6566</a> + The algorithms are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#75be6566">75be6566</a> +  - a star selector with API:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#75be6566">75be6566</a> + \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#75be6566">75be6566</a> + selectStars(self, exposure, catalog, matches=None)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#75be6566">75be6566</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#75be6566">75be6566</a> + which returns a list of lsst.meas.algorithms.PsfCandidate (\em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#75be6566">75be6566</a> + lsst.meas.algorithms.objectSizeStarSelector.ObjectSizeStarSelector.selectStars)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#75be6566">75be6566</a> +  - a psf estimator with API:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#75be6566">75be6566</a> + \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#75be6566">75be6566</a> + determinePsf(exposure, psfCandidateList, metadata=None, flagKey=None)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#75be6566">75be6566</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#75be6566">75be6566</a> + which returns an lsst.afw.detection.Psf and lsst.afw.math.SpatialCellSet (\em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#75be6566">75be6566</a> + lsst.meas.algorithms.pcaPsfDeterminer.PcaPsfDeterminer.determinePsf).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#75be6566">75be6566</a> + MeasurePsfTask calls determinePsf with \c flagKey set to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#75be6566">75be6566</a> + "calib.psf.used" if a schema is passed to its constructor (see \ref pipe_tasks_measurePsf_Initialize).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#75be6566">75be6566</a> + See also lsst.meas.algorithms.starSelectorRegistry.starSelectorRegistry and</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#75be6566">75be6566</a> + lsst.meas.algorithms.psfDeterminerRegistry.psfDeterminerRegistry.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#75be6566">75be6566</a> + \warning</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#75be6566">75be6566</a> + There is no establised set of configuration parameters for these algorithms, so once you start modifying</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#75be6566">75be6566</a> + parameters (as we do in \ref pipe_tasks_measurePsf_Example) your code is no longer portable.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Initialize	Task initialisation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#f644224a">f644224a</a> + \copydoc \_\_init\_\_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#f644224a">f644224a</a> + \section pipe_tasks_measurePsf_IO		Invoking the Task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#75be6566">75be6566</a> + \copydoc run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Config       Configuration parameters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#b0a7a7f0">b0a7a7f0</a> + See \ref MeasurePsfConfig.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#75be6566">75be6566</a> + \warning</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#c351575f">c351575f</a> -     - The star selector and psf determiner registries will have to be modified to return a class,</div>
              ? ------                                                ^^ ^^^^^^^^^                              -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#75be6566">75be6566</a> + The star selector and psf determiner registries should be modified to return a class</div>
              ?                                                 ^^^^ ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#c351575f">c351575f</a> -       which has a ConfigClass attribute and can be instantiated with a config. Until then, there's no</div>
              ? ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#75be6566">75be6566</a> + which has a ConfigClass attribute and can be instantiated with a config. Until then, there's no</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#c351575f">c351575f</a> -       obvious way to get a registry algorithm's Config from another Config.</div>
              ? ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#75be6566">75be6566</a> + obvious way to get a registry algorithm's Config from another Config.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Debug		Debug variables</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#75be6566">75be6566</a> + The \link lsst.pipe.base.cmdLineTask.CmdLineTask command line task\endlink interface supports a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#75be6566">75be6566</a> + flag \c -d to import \b debug.py from your \c PYTHONPATH; see \ref baseDebug for more about \b debug.py files.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#75be6566">75be6566</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#75be6566">75be6566</a> +   <DT> \c display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#75be6566">75be6566</a> +   <DD> If True, display debugging plots</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#75be6566">75be6566</a> +   <DT> displayExposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#75be6566">75be6566</a> +   <DD> display the Exposure + spatialCells</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#75be6566">75be6566</a> +   <DT> displayPsfCandidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#75be6566">75be6566</a> +   <DD> show mosaic of candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#75be6566">75be6566</a> +   <DT> showBadCandidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#75be6566">75be6566</a> +   <DD> Include bad candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#75be6566">75be6566</a> +   <DT> displayPsfMosaic</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#75be6566">75be6566</a> +   <DD> show mosaic of reconstructed PSF(xy)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#75be6566">75be6566</a> +   <DT> displayResiduals</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#75be6566">75be6566</a> +   <DD> show residuals</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#75be6566">75be6566</a> +   <DT> normalizeResiduals</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#75be6566">75be6566</a> +   <DD> Normalise residuals by object amplitude</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#75be6566">75be6566</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#75be6566">75be6566</a> + Additionally you can enable any debug outputs that your chosen star selector and psf determiner support.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#75be6566">75be6566</a> + \section pipe_tasks_measurePsf_Example	A complete example of using MeasurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#75be6566">75be6566</a> + This code is in \link measurePsfTask.py\endlink in the examples directory, and can be run as \em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#75be6566">75be6566</a> + \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#75be6566">75be6566</a> + examples/measurePsfTask.py --ds9</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#75be6566">75be6566</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#75be6566">75be6566</a> + \dontinclude measurePsfTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#75be6566">75be6566</a> + The example also runs SourceDetectionTask and SourceMeasurementTask; see \ref meas_algorithms_measurement_Example for more explanation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#b0a7a7f0">b0a7a7f0</a> + Import the tasks (there are some other standard imports; read the file to see them all):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#75be6566">75be6566</a> + \skip SourceDetectionTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#75be6566">75be6566</a> + \until MeasurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#75be6566">75be6566</a> + We need to create the tasks before processing any data as the task constructor</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#b0a7a7f0">b0a7a7f0</a> + can add an extra column to the schema, but first we need an almost-empty</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#b0a7a7f0">b0a7a7f0</a> + Schema:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#75be6566">75be6566</a> + \skipline makeMinimalSchema</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#b0a7a7f0">b0a7a7f0</a> + We can now call the constructors for the tasks we need to find and characterize candidate</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#75be6566">75be6566</a> + PSF stars:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#75be6566">75be6566</a> + \skip SourceDetectionTask.ConfigClass</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#75be6566">75be6566</a> + \until measureTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#b0a7a7f0">b0a7a7f0</a> + Note that we've chosen a minimal set of measurement plugins: we need the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#63e038bc">63e038bc</a> + outputs of \c base_SdssCentroid, \c base_SdssShape and \c base_CircularApertureFlux as</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#b0a7a7f0">b0a7a7f0</a> + inputs to the PSF measurement algorithm, while \c base_PixelFlags identifies</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#b0a7a7f0">b0a7a7f0</a> + and flags bad sources (e.g. with pixels too close to the edge) so they can be</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#b0a7a7f0">b0a7a7f0</a> + removed later.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#b0a7a7f0">b0a7a7f0</a> + Now we can create and configure the task that we're interested in:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#b0a7a7f0">b0a7a7f0</a> + \skip MeasurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#b0a7a7f0">b0a7a7f0</a> + \until measurePsfTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#75be6566">75be6566</a> + We're now ready to process the data (we could loop over multiple exposures/catalogues using the same</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#75be6566">75be6566</a> + task objects).  First create the output table:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#75be6566">75be6566</a> + \skipline afwTable</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#b0a7a7f0">b0a7a7f0</a> + And process the image:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#75be6566">75be6566</a> + \skip sources =</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#75be6566">75be6566</a> + \until result</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#75be6566">75be6566</a> + We can then unpack and use the results:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#75be6566">75be6566</a> + \skip psf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#75be6566">75be6566</a> + \until cellSet</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#75be6566">75be6566</a> + If you specified \c --ds9 you can see the PSF candidates:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#75be6566">75be6566</a> + \skip display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#75be6566">75be6566</a> + \until RED</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#75be6566">75be6566</a> + <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#b0a7a7f0">b0a7a7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#75be6566">75be6566</a> + To investigate the \ref pipe_tasks_measurePsf_Debug, put something like</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#75be6566">75be6566</a> + \code{.py}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#75be6566">75be6566</a> +     import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#75be6566">75be6566</a> +     def DebugInfo(name):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#75be6566">75be6566</a> +         di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#75be6566">75be6566</a> +         if name == "lsst.pipe.tasks.measurePsf" :</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#75be6566">75be6566</a> +             di.display = True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#75be6566">75be6566</a> +             di.displayExposure = False          # display the Exposure + spatialCells</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#75be6566">75be6566</a> +             di.displayPsfCandidates = True      # show mosaic of candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#75be6566">75be6566</a> +             di.displayPsfMosaic = True          # show mosaic of reconstructed PSF(xy)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#75be6566">75be6566</a> +             di.displayResiduals = True          # show residuals</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#75be6566">75be6566</a> +             di.showBadCandidates = True         # Include bad candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#75be6566">75be6566</a> +             di.normalizeResiduals = False       # Normalise residuals by object amplitude</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#75be6566">75be6566</a> +         return di</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#75be6566">75be6566</a> +     lsstDebug.Info = DebugInfo</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#75be6566">75be6566</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#75be6566">75be6566</a> + into your debug.py file and run measurePsfTask.py with the \c --debug flag.</div>
                    """
                    ConfigClass = MeasurePsfConfig
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#75be6566">75be6566</a> +     _DefaultName = "measurePsf"</div>
                
                    def __init__(self, schema=None, **kwargs):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#75be6566">75be6566</a> +         """!Create the detection task.  Most arguments are simply passed onto pipe.base.Task.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#75be6566">75be6566</a> +         \param schema An lsst::afw::table::Schema used to create the output lsst.afw.table.SourceCatalog</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#75be6566">75be6566</a> +         \param **kwargs Keyword arguments passed to lsst.pipe.base.task.Task.__init__.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
218  <a href="#75be6566">75be6566</a> +         If schema is not None, 'calib.psf.candidate' and 'calib.psf.used' fields will be added to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
219  <a href="#75be6566">75be6566</a> +         identify which stars were employed in the PSF estimation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#75be6566">75be6566</a> +         \note This task can add fields to the schema, so any code calling this task must ensure that</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#75be6566">75be6566</a> +         these fields are indeed present in the input table.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#75be6566">75be6566</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#75be6566">75be6566</a> + </div>
                        pipeBase.Task.__init__(self, **kwargs)
                        if schema is not None:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#7e6427f7">7e6427f7</a> +             if schema.getVersion() == 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#f53351fb">f53351fb</a> -             self.candidateKey = schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
228  <a href="#ee85f9b2">ee85f9b2</a> +                 self.candidateKey = schema.addField(</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#36777f3e">36777f3e</a> -                 "calib.psf.candidate", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#ee85f9b2">ee85f9b2</a> +                     "calib.psf.candidate", type="Flag",</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#f53351fb">f53351fb</a> -                 doc=("Flag set if the source was a candidate for PSF determination, "</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#ee85f9b2">ee85f9b2</a> +                     doc=("Flag set if the source was a candidate for PSF determination, "</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#f53351fb">f53351fb</a> -                      "as determined by the '%s' star selector.") % self.config.starSelector.name</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#ee85f9b2">ee85f9b2</a> +                          "as determined by the '%s' star selector.") % self.config.starSelector.name</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#f53351fb">f53351fb</a> -                 )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#ee85f9b2">ee85f9b2</a> +                     )</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#f53351fb">f53351fb</a> -             self.usedKey = schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#ee85f9b2">ee85f9b2</a> +                 self.usedKey = schema.addField(</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#36777f3e">36777f3e</a> -                 "calib.psf.used", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#ee85f9b2">ee85f9b2</a> +                     "calib.psf.used", type="Flag",</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#f53351fb">f53351fb</a> -                 doc=("Flag set if the source was actually used for PSF determination, "</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#ee85f9b2">ee85f9b2</a> +                     doc=("Flag set if the source was actually used for PSF determination, "</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#f53351fb">f53351fb</a> -                      "as determined by the '%s' PSF determiner.") % self.config.psfDeterminer.name</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#ee85f9b2">ee85f9b2</a> +                          "as determined by the '%s' PSF determiner.") % self.config.psfDeterminer.name</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#f53351fb">f53351fb</a> -                 )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#ee85f9b2">ee85f9b2</a> +                     )</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#0494ead9">0494ead9</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#0494ead9">0494ead9</a> -             if self.config.reserveFraction > 0:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#ee85f9b2">ee85f9b2</a> +             else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#ee85f9b2">ee85f9b2</a> +                 self.candidateKey = schema.addField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#2f1f8046">2f1f8046</a> +                     "calib_psfCandidate", type="Flag",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
241  <a href="#ee85f9b2">ee85f9b2</a> +                     doc=("Flag set if the source was a candidate for PSF determination, "</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#ee85f9b2">ee85f9b2</a> +                          "as determined by the '%s' star selector.") % self.config.starSelector.name</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#ee85f9b2">ee85f9b2</a> +                     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#0494ead9">0494ead9</a> -                 self.reservedKey = schema.addField(</div>
              ?                      ^^ ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#ee85f9b2">ee85f9b2</a> +                 self.usedKey = schema.addField(</div>
              ?                      ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#0494ead9">0494ead9</a> -                     "calib.psf.reserved", type="Flag",</div>
              ?                           ^   ^^^ ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#2f1f8046">2f1f8046</a> +                     "calib_psfUsed", type="Flag",</div>
              ?                           ^   ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#0494ead9">0494ead9</a> -                     doc=("Flag set if the source was selected as a PSF candidate, but was "</div>
              ?                                                        -----  ^^^^     ^^ ---  ^ --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#ee85f9b2">ee85f9b2</a> +                     doc=("Flag set if the source was actually used for PSF determination, "</div>
              ?                                                      ++++++++++    ^^^     ^^^^^^^   ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#0494ead9">0494ead9</a> -                          "reserved from the PSF fitting."))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#ee85f9b2">ee85f9b2</a> +                          "as determined by the '%s' PSF determiner.") % self.config.psfDeterminer.name</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#0494ead9">0494ead9</a> -                 </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#ee85f9b2">ee85f9b2</a> +                     )</div>
              ?                 +++++
                        else:
                            self.candidateKey = None
                            self.usedKey = None
                        self.starSelector = self.config.starSelector.apply()
                        self.psfDeterminer = self.config.psfDeterminer.apply()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#c351575f">c351575f</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#75be6566">75be6566</a> + </div>
                    @pipeBase.timeMethod
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#0494ead9">0494ead9</a> -     def run(self, exposure, sources, expId=0, matches=None):</div>
              ?                                     ---------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#f8af68d3">f8af68d3</a> +     def run(self, exposure, sources, matches=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#f3a6f7f0">f3a6f7f0</a> -         """Measure the PSF</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#75be6566">75be6566</a> +         """!Measure the PSF</div>
              ?            +
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#e269ca47">e269ca47</a> -         @param[in,out]   exposure      Exposure to process; measured PSF will be installed here as well.</div>
              ?         ^                                                                        ---- ^^  -------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#75be6566">75be6566</a> +         \param[in,out]   exposure      Exposure to process; measured PSF will be added.</div>
              ?         ^                                                                         ^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#e269ca47">e269ca47</a> -         @param[in,out]   sources       Measured sources on exposure; flag fields will be set marking</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#75be6566">75be6566</a> +         \param[in,out]   sources       Measured sources on exposure; flag fields will be set marking</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#e269ca47">e269ca47</a> -                                        stars chosen by the star selector and PSF determiner.</div>
              ?                                                                                            ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#75be6566">75be6566</a> +                                        stars chosen by the star selector and the PSF determiner if a schema</div>
              ?                                                                              ++++              ^^^^^^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#0494ead9">0494ead9</a> -         @param[in]       expId         Exposure id used for generating random seed.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#f8af68d3">f8af68d3</a> -         @param[in]       matches       ReferenceMatchVector, as returned by the AstrometryTask, used</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#75be6566">75be6566</a> +                                        was passed to the task constructor.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#75be6566">75be6566</a> +         \param[in] matches a list of lsst.afw.table.ReferenceMatch objects (\em i.e. of lsst.afw.table.Match</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#75be6566">75be6566</a> +         			       with \c first being of type lsst.afw.table.SimpleRecord and \c second</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#75be6566">75be6566</a> +         			       type lsst.afw.table.SourceRecord --- the reference object and detected</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#75be6566">75be6566</a> +         			       object respectively) as returned by \em e.g. the AstrometryTask.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#f8af68d3">f8af68d3</a> -                                        by star selectors that refer to an external catalog.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#75be6566">75be6566</a> +                                        Used by star selectors that choose to refer to an external catalog.</div>
              ?                                       +++++                       ++++++++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#f3a6f7f0">f3a6f7f0</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#75be6566">75be6566</a> +         \return a pipe.base.Struct with fields:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#75be6566">75be6566</a> +          - psf: The measured PSF (also set in the input exposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#75be6566">75be6566</a> +          - cellSet: an lsst.afw.math.SpatialCellSet containing the PSF candidates as returned by the psf determiner.</div>
                        """
                        self.log.info("Measuring PSF")
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#8ca82c24">8ca82c24</a> +         import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#75be6566">75be6566</a> +         display = lsstDebug.Info(__name__).display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#75be6566">75be6566</a> +         displayExposure = lsstDebug.Info(__name__).displayExposure     # display the Exposure + spatialCells</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#8ca82c24">8ca82c24</a> +         displayPsfMosaic = lsstDebug.Info(__name__).displayPsfMosaic # show mosaic of reconstructed PSF(x,y)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#75be6566">75be6566</a> +         displayPsfCandidates = lsstDebug.Info(__name__).displayPsfCandidates # show mosaic of candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#8ca82c24">8ca82c24</a> +         displayResiduals = lsstDebug.Info(__name__).displayResiduals   # show residuals</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#8ca82c24">8ca82c24</a> +         showBadCandidates = lsstDebug.Info(__name__).showBadCandidates # include bad candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#8ca82c24">8ca82c24</a> +         normalizeResiduals = lsstDebug.Info(__name__).normalizeResiduals # normalise residuals by object peak</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
284  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#8ca82c24">8ca82c24</a> +         #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#8ca82c24">8ca82c24</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
287  <a href="#8ca82c24">8ca82c24</a> +         # Run star selector</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
288  <a href="#8ca82c24">8ca82c24</a> +         #</div>
                        psfCandidateList = self.starSelector.selectStars(exposure, sources, matches=matches)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#0494ead9">0494ead9</a> -         reserveList = []</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#0494ead9">0494ead9</a> -         </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#0494ead9">0494ead9</a> -         if self.config.reserveFraction > 0 :</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#0494ead9">0494ead9</a> -             random.seed(self.config.reserveSeed*expId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#0494ead9">0494ead9</a> -             reserveList = random.sample(psfCandidateList, </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#0494ead9">0494ead9</a> -                                         int((self.config.reserveFraction)*len(psfCandidateList)))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#0494ead9">0494ead9</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#0494ead9">0494ead9</a> -             for cand in reserveList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#0494ead9">0494ead9</a> -                 psfCandidateList.remove(cand)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#0494ead9">0494ead9</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#0494ead9">0494ead9</a> -             if reserveList and self.reservedKey is not None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#0494ead9">0494ead9</a> -                 for cand in reserveList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#0494ead9">0494ead9</a> -                     source = cand.getSource()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#0494ead9">0494ead9</a> -                     source.set(self.reservedKey,True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#0494ead9">0494ead9</a> -             </div>
                        if psfCandidateList and self.candidateKey is not None:
                            for cand in psfCandidateList:
                                source = cand.getSource()
                                source.set(self.candidateKey, True)
                
                        self.log.info("PSF star selector found %d candidates" % len(psfCandidateList))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#0494ead9">0494ead9</a> -         if self.config.reserveFraction > 0 :</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#0494ead9">0494ead9</a> -             self.log.info("Reserved %d candidates from the fitting" % len(reserveList))</div>
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#8ca82c24">8ca82c24</a> +         if display:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
298  <a href="#8ca82c24">8ca82c24</a> +             frame = display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#8ca82c24">8ca82c24</a> +             if displayExposure:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
300  <a href="#8ca82c24">8ca82c24</a> +                 ds9.mtv(exposure, frame=frame, title="psf determination")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
301  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
302  <a href="#8ca82c24">8ca82c24</a> +         #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
303  <a href="#8ca82c24">8ca82c24</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
304  <a href="#8ca82c24">8ca82c24</a> +         # Determine PSF</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
305  <a href="#8ca82c24">8ca82c24</a> +         #</div>
                        psf, cellSet = self.psfDeterminer.determinePsf(exposure, psfCandidateList, self.metadata,
                                                                       flagKey=self.usedKey)
                        self.log.info("PSF determination using %d/%d stars." %
                                     (self.metadata.get("numGoodStars"), self.metadata.get("numAvailStars")))
                
                        exposure.setPsf(psf)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#8ca82c24">8ca82c24</a> +         if display:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#8ca82c24">8ca82c24</a> +             frame = display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
315  <a href="#8ca82c24">8ca82c24</a> +             if displayExposure:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#8ca82c24">8ca82c24</a> +                 showPsfSpatialCells(exposure, cellSet, showBadCandidates, frame=frame)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#8ca82c24">8ca82c24</a> +                 frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#8ca82c24">8ca82c24</a> +             if displayPsfCandidates:    # Show a mosaic of  PSF candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#8ca82c24">8ca82c24</a> +                 plotPsfCandidates(cellSet, showBadCandidates, frame)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#8ca82c24">8ca82c24</a> +                 frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#8ca82c24">8ca82c24</a> +             if displayResiduals:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#8ca82c24">8ca82c24</a> +                 frame = plotResiduals(exposure, cellSet,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#8ca82c24">8ca82c24</a> +                                       showBadCandidates=showBadCandidates,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#8ca82c24">8ca82c24</a> +                                       normalizeResiduals=normalizeResiduals,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#8ca82c24">8ca82c24</a> +                                       frame=frame)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#8ca82c24">8ca82c24</a> +             if displayPsfMosaic:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#8ca82c24">8ca82c24</a> +                 maUtils.showPsfMosaic(exposure, psf, frame=frame, showFwhm=True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#8ca82c24">8ca82c24</a> +                 ds9.scale(0, 1, "linear", frame=frame)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#8ca82c24">8ca82c24</a> +                 frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#8ca82c24">8ca82c24</a> + </div>
                        return pipeBase.Struct(
                            psf = psf,
                            cellSet = cellSet,
                        )
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#8ca82c24">8ca82c24</a> + #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#8ca82c24">8ca82c24</a> + #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#8ca82c24">8ca82c24</a> + # Debug code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#8ca82c24">8ca82c24</a> + #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#8ca82c24">8ca82c24</a> + def showPsfSpatialCells(exposure, cellSet, showBadCandidates, frame=1):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#8ca82c24">8ca82c24</a> +     maUtils.showPsfSpatialCells(exposure, cellSet,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#8ca82c24">8ca82c24</a> +                                 symb="o", ctype=ds9.CYAN, ctypeUnused=ds9.YELLOW,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#8ca82c24">8ca82c24</a> +                                 size=4, frame=frame)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#8ca82c24">8ca82c24</a> +     for cell in cellSet.getCellList():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#8ca82c24">8ca82c24</a> +         for cand in cell.begin(not showBadCandidates): # maybe include bad candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#8ca82c24">8ca82c24</a> +             cand = measAlg.cast_PsfCandidateF(cand)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#8ca82c24">8ca82c24</a> +             status = cand.getStatus()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#8ca82c24">8ca82c24</a> +             ds9.dot('+', *cand.getSource().getCentroid(), frame=frame,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#8ca82c24">8ca82c24</a> +                     ctype=ds9.GREEN if status == afwMath.SpatialCellCandidate.GOOD else</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#8ca82c24">8ca82c24</a> +                     ds9.YELLOW if status == afwMath.SpatialCellCandidate.UNKNOWN else ds9.RED)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
353  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
354  <a href="#8ca82c24">8ca82c24</a> + def plotPsfCandidates(cellSet, showBadCandidates=False, frame=1):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#8ca82c24">8ca82c24</a> +     import lsst.afw.display.utils as displayUtils</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#8ca82c24">8ca82c24</a> +     stamps = []</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#8ca82c24">8ca82c24</a> +     for cell in cellSet.getCellList():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#8ca82c24">8ca82c24</a> +         for cand in cell.begin(not showBadCandidates): # maybe include bad candidates</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#8ca82c24">8ca82c24</a> +             cand = measAlg.cast_PsfCandidateF(cand)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#8ca82c24">8ca82c24</a> +             try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#8ca82c24">8ca82c24</a> +                 im = cand.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#8ca82c24">8ca82c24</a> +                 chi2 = cand.getChi2()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
366  <a href="#8ca82c24">8ca82c24</a> +                 if chi2 < 1e100:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#8ca82c24">8ca82c24</a> +                     chi2 = "%.1f" % chi2</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#8ca82c24">8ca82c24</a> +                 else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#8ca82c24">8ca82c24</a> +                     chi2 = numpy.nan</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#8ca82c24">8ca82c24</a> +                 stamps.append((im, "%d%s" %</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#8ca82c24">8ca82c24</a> +                                (maUtils.splitId(cand.getSource().getId(), True)["objId"], chi2),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#8ca82c24">8ca82c24</a> +                                cand.getStatus()))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#8ca82c24">8ca82c24</a> +             except Exception, e:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#8ca82c24">8ca82c24</a> +                 continue</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#8ca82c24">8ca82c24</a> +     mos = displayUtils.Mosaic()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#8ca82c24">8ca82c24</a> +     for im, label, status in stamps:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#8ca82c24">8ca82c24</a> +         im = type(im)(im, True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#8ca82c24">8ca82c24</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#8ca82c24">8ca82c24</a> +             im /= afwMath.makeStatistics(im, afwMath.MAX).getValue()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#8ca82c24">8ca82c24</a> +         except NotImplementedError:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
383  <a href="#8ca82c24">8ca82c24</a> +             pass</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#8ca82c24">8ca82c24</a> +         mos.append(im, label,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#8ca82c24">8ca82c24</a> +                    ds9.GREEN if status == afwMath.SpatialCellCandidate.GOOD else</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#8ca82c24">8ca82c24</a> +                    ds9.YELLOW if status == afwMath.SpatialCellCandidate.UNKNOWN else ds9.RED)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#8ca82c24">8ca82c24</a> +     if mos.images:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#8ca82c24">8ca82c24</a> +         mos.makeMosaic(frame=frame, title="Psf Candidates")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#8ca82c24">8ca82c24</a> + def plotResiduals(exposure, cellSet, showBadCandidates=False, normalizeResiduals=True, frame=2):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#8ca82c24">8ca82c24</a> +     psf = exposure.getPsf()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#8ca82c24">8ca82c24</a> +     while True:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#8ca82c24">8ca82c24</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#8ca82c24">8ca82c24</a> +             maUtils.showPsfCandidates(exposure, cellSet, psf=psf, frame=frame,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#8ca82c24">8ca82c24</a> +                                       normalize=normalizeResiduals,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#8ca82c24">8ca82c24</a> +                                       showBadCandidates=showBadCandidates)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#8ca82c24">8ca82c24</a> +             frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#8ca82c24">8ca82c24</a> +             maUtils.showPsfCandidates(exposure, cellSet, psf=psf, frame=frame,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#8ca82c24">8ca82c24</a> +                                       normalize=normalizeResiduals,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#8ca82c24">8ca82c24</a> +                                       showBadCandidates=showBadCandidates,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#8ca82c24">8ca82c24</a> +                                       variance=True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#8ca82c24">8ca82c24</a> +             frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#8ca82c24">8ca82c24</a> +         except Exception as e:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#8ca82c24">8ca82c24</a> +             if not showBadCandidates:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
407  <a href="#8ca82c24">8ca82c24</a> +                 showBadCandidates = True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
408  <a href="#8ca82c24">8ca82c24</a> +                 continue</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
409  <a href="#8ca82c24">8ca82c24</a> +         break</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
410  <a href="#8ca82c24">8ca82c24</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
411  <a href="#8ca82c24">8ca82c24</a> +     return frame</div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="b7c8e0e8"/></a>b7c8e0e8</h3>

<pre>
commit b7c8e0e8002856006c49d7da8468217a16bcc26f
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Sep 10 12:45:37 2014 -0400

    Change default setting for reserved PSF objects
</pre>
<h3><a name="36777f3e"/></a>36777f3e</h3>

<pre>
commit 36777f3e7095db4e2ed0765ad50d4406bc018cc7
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Sep 7 19:59:06 2012 -0400

    Fix up how icSource flags are propagated to Sources, using SchemaMapper more and hard-coding the fields to propagate less.
</pre>
<h3><a name="c351575f"/></a>c351575f</h3>

<pre>
commit c351575fce98a9302d3a06559a25ce6ceee7d388
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Dec 20 17:17:03 2011 -0800

    Updated more code for prototype Config. More to be done.
</pre>
<h3><a name="e269ca47"/></a>e269ca47</h3>

<pre>
commit e269ca47a3789f5864b3dd81ff1bec9fadeaeb65
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Feb 27 19:04:16 2012 -0500

    rewrote calibration tasks with schema/table stuff
</pre>
<h3><a name="f8af68d3"/></a>f8af68d3</h3>

<pre>
commit f8af68d3ee3af11cecc0711b49de3dcbf721d78c
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Aug 27 15:37:33 2012 -0400

    Pass matches to MeasurePsf subtask so it can pass them to Star Selector.
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="f53351fb"/></a>f53351fb</h3>

<pre>
commit f53351fb6ec1c057f21ef9cee1db80a11a99f41e
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Sep 7 16:25:28 2012 -0400

    Move PSF flag setting from selectors/determiners to MeasurePsfTask as much as possible.
</pre>
<h3><a name="0494ead9"/></a>0494ead9</h3>

<pre>
commit 0494ead9c5c4fc97f8f48aa1a138cec9ec552bdf
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Aug 27 09:46:59 2014 -0400

    measurePSF: Allow for option to reserve PSF candidates from fitting for cross-validation
    
    To get a unique random seed for each CCD this required adding expId method for processImage
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="8ca82c24"/></a>8ca82c24</h3>

<pre>
commit 8ca82c2461a8228f2e0ace89cfb6e808f386b06c
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Jul 1 18:13:31 2014 -0400

    Implement debug plotting for measurePsf.py
</pre>
<h3><a name="75be6566"/></a>75be6566</h3>

<pre>
commit 75be6566dab1d895a4e1fdb523898958a9efcd33
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jul 2 15:49:44 2014 -1000

    More work on Task docs
</pre>
<h3><a name="7e6427f7"/></a>7e6427f7</h3>

<pre>
commit 7e6427f786afd7ff0ec5f6873d8b50bba9c16ce7
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Mon Aug 18 19:42:15 2014 -0500

    Use the schema object to get/set the tableVersion
</pre>
<h3><a name="696b641f"/></a>696b641f</h3>

<pre>
commit 696b641f20d2bf91283a0d639727e0bb9b1a8607
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Jun 30 18:52:24 2014 -0400

    Worked on CalibrateTask documentation
</pre>
<h3><a name="f8af68d3"/></a>f8af68d3</h3>

<pre>
commit f8af68d3ee3af11cecc0711b49de3dcbf721d78c
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Aug 27 15:37:33 2012 -0400

    Pass matches to MeasurePsf subtask so it can pass them to Star Selector.
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="f644224a"/></a>f644224a</h3>

<pre>
commit f644224afa7ddf78da6f21a55e89ea9d386d2dda
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jul 16 13:34:12 2014 -0400

    Follow REO's hints/suggestions
</pre>
<h3><a name="b0a7a7f0"/></a>b0a7a7f0</h3>

<pre>
commit b0a7a7f04965abaef2a1359868a5c3425bbebddc
Author: John Swinbank <swinbank@princeton.edu>
Date:   Mon Jan 12 15:32:33 2015 -0500

    Update examples/measurePsfTask.py to new framework
</pre>
<h3><a name="ee85f9b2"/></a>ee85f9b2</h3>

<pre>
commit ee85f9b2668760e360700dd38d683e6c4e00f798
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Thu Jun 19 20:30:53 2014 -0500

    Changes to processImage to allow to run with either tableVersion
</pre>
<h3><a name="63e038bc"/></a>63e038bc</h3>

<pre>
commit 63e038bcbc75b43299e2f880d57e5c2f6cff9425
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Jan 23 16:40:13 2015 -0500

    Adapt to removal of SincFlux in favor of CircularApertureFlux.
</pre>
<h3><a name="2f1f8046"/></a>2f1f8046</h3>

<pre>
commit 2f1f804688a668f96de6a2c9c805977fdd368da9
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Jul 3 17:42:24 2014 -0700

    Fixes for review of DM-545
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/calibrate.py"/></a>python/lsst/pipe/tasks/calibrate.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#7484a32c">7484a32c</a> + #</div>
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011 LSST Corporation.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#7484a32c">7484a32c</a> + #</div>
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
12   <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
12   <a href="#7484a32c">7484a32c</a> + #</div>
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#f3a6f7f0">f3a6f7f0</a> - # </div>
              ?  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#7484a32c">7484a32c</a> + #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
18   <a href="#f3a6f7f0">f3a6f7f0</a> - # You should have received a copy of the LSST License Statement and </div>
              ?                                                                    -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
18   <a href="#7484a32c">7484a32c</a> + # You should have received a copy of the LSST License Statement and</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
19   <a href="#f3a6f7f0">f3a6f7f0</a> - # the GNU General Public License along with this program.  If not, </div>
              ?                                                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
19   <a href="#7484a32c">7484a32c</a> + # the GNU General Public License along with this program.  If not,</div>
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import math
                
                import lsst.daf.base as dafBase
                import lsst.pex.config as pexConfig
                import lsst.afw.math as afwMath
                import lsst.afw.table as afwTable
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#19efc211">19efc211</a> - import lsst.afw.image as afwImage</div>
                import lsst.meas.algorithms as measAlg
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#4f2984d1">4f2984d1</a> + import lsst.meas.base</div>
                import lsst.pipe.base as pipeBase
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#b6658aa8">b6658aa8</a> + from lsst.meas.astrom import ANetAstrometryTask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#3ffd87c1">3ffd87c1</a> - from lsst.meas.photocal import PhotoCalTask</div>
              ?      ---------      ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#67e144b3">67e144b3</a> + from .photoCal import PhotoCalTask</div>
              ?            ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#bb668ac5">bb668ac5</a> - from .astrometry import AstrometryTask</div>
                from .repair import RepairTask
                from .measurePsf import MeasurePsfTask
                
                class InitialPsfConfig(pexConfig.Config):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#e269ca47">e269ca47</a> -     """Describes the initial PSF used for detection and measurement before we do PSF determination."""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#696b641f">696b641f</a> +     """!Describes the initial PSF used for detection and measurement before we do PSF determination."""</div>
              ?        +
                
                    model = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "PSF model type",
                        default = "SingleGaussian",
                        allowed = {
                            "SingleGaussian": "Single Gaussian model",
                            "DoubleGaussian": "Double Gaussian model",
                        },
                    )
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#b0aa8088">b0aa8088</a> +     pixelScale = pexConfig.Field(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#b0aa8088">b0aa8088</a> +         dtype = float,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#b0aa8088">b0aa8088</a> +         doc = "Pixel size (arcsec).  Only needed if no Wcs is provided",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#b0aa8088">b0aa8088</a> +         default = 0.25,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#b0aa8088">b0aa8088</a> +     )</div>
                    fwhm = pexConfig.Field(
                        dtype = float,
                        doc = "FWHM of PSF model (arcsec)",
                        default = 1.0,
                    )
                    size = pexConfig.Field(
                        dtype = int,
                        doc = "Size of PSF model (pixels)",
                        default = 15,
                    )
                
                class CalibrateConfig(pexConfig.Config):
                    initialPsf = pexConfig.ConfigField(dtype=InitialPsfConfig, doc=InitialPsfConfig.__doc__)
                    doBackground = pexConfig.Field(
                        dtype = bool,
                        doc = "Subtract background (after computing it, if not supplied)?",
                        default = True,
                    )
                    doPsf = pexConfig.Field(
                        dtype = bool,
                        doc = "Perform PSF fitting?",
                        default = True,
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#396c9ef4">396c9ef4</a> -     doCurveOfGrowth = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#396c9ef4">396c9ef4</a> -         dtype = bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#396c9ef4">396c9ef4</a> -         doc = "Measure and apply curve of growth?",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#4ecd18e0">4ecd18e0</a> -         default = False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#396c9ef4">396c9ef4</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#19efc211">19efc211</a> -     doMeasureApCorr = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#19efc211">19efc211</a> -         dtype = bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#19efc211">19efc211</a> -         doc = "Compute aperture corrections?",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#19efc211">19efc211</a> -         default = True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#19efc211">19efc211</a> -     )</div>
                    doAstrometry = pexConfig.Field(
                        dtype = bool,
                        doc = "Compute astrometric solution?",
                        default = True,
                    )
                    doPhotoCal = pexConfig.Field(
                        dtype = bool,
                        doc = "Compute photometric zeropoint?",
                        default = True,
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#e9db5c0d">e9db5c0d</a> -     requireAstrometry = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#e9db5c0d">e9db5c0d</a> -         dtype = bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#e9db5c0d">e9db5c0d</a> -         doc = "Require astrometry to succeed, if activated?",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#e9db5c0d">e9db5c0d</a> -         default = False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#e9db5c0d">e9db5c0d</a> -         )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#cf14d0ab">cf14d0ab</a> -     requirePhotoCal = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#cf14d0ab">cf14d0ab</a> -         dtype = bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#cf14d0ab">cf14d0ab</a> -         doc = "Require photometric calibration to succeed?",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#cf14d0ab">cf14d0ab</a> -         default = False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#cf14d0ab">cf14d0ab</a> -         )</div>
                    background = pexConfig.ConfigField(
                        dtype = measAlg.estimateBackground.ConfigClass,
                        doc = "Background estimation configuration"
                        )
                    repair       = pexConfig.ConfigurableField(target = RepairTask, doc = "")
                    detection    = pexConfig.ConfigurableField(
                        target = measAlg.SourceDetectionTask,
                        doc = "Initial (high-threshold) detection phase for calibration",
                    )
                    initialMeasurement = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#3ffd87c1">3ffd87c1</a> -         target = measAlg.SourceMeasurementTask,</div>
              ?                      ^^^  ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#db3e8e3f">db3e8e3f</a> +         target = lsst.meas.base.SingleFrameMeasurementTask,</div>
              ?                  +++++    ^^^^^  ^^^^^^ ^^
                        doc = "Initial measurements used to feed PSF determination and aperture correction determination",
                    )
                    measurePsf   = pexConfig.ConfigurableField(target = MeasurePsfTask, doc = "")
                    measurement = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#3ffd87c1">3ffd87c1</a> -         target = measAlg.SourceMeasurementTask,</div>
              ?                      ^^^  ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#db3e8e3f">db3e8e3f</a> +         target = lsst.meas.base.SingleFrameMeasurementTask,</div>
              ?                  +++++    ^^^^^  ^^^^^^ ^^
                        doc = "Post-PSF-determination measurements used to feed other calibrations",
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#396c9ef4">396c9ef4</a> -     measureCurveOfGrowth = pexConfig.ConfigurableField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#396c9ef4">396c9ef4</a> -         target = measAlg.CurveOfGrowthMeasurementTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#396c9ef4">396c9ef4</a> -         doc = "Curve of growth, for correcting apertures to infinity",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#396c9ef4">396c9ef4</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#19efc211">19efc211</a> -     measureApCorr   = pexConfig.ConfigurableField(</div>
              ?       ^^^ ^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#5fb621f2">5fb621f2</a> +     astrometry    = pexConfig.ConfigurableField(</div>
              ?     +++++  ^ ^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#19efc211">19efc211</a> -         target = measAlg.MeasureApCorrTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#19efc211">19efc211</a> -         doc = "subtask to measure aperture corrections"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#b6658aa8">b6658aa8</a> +         target = ANetAstrometryTask,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#5fb621f2">5fb621f2</a> +         doc = "fit WCS of exposure",</div>
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#3ffd87c1">3ffd87c1</a> -     astrometry    = pexConfig.ConfigurableField(target = AstrometryTask, doc = "")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#3ffd87c1">3ffd87c1</a> -     photocal      = pexConfig.ConfigurableField(target = PhotoCalTask, doc="")</div>
              ?                                                 ------------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#5fb621f2">5fb621f2</a> +     photocal      = pexConfig.ConfigurableField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#5fb621f2">5fb621f2</a> +         target = PhotoCalTask,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#5fb621f2">5fb621f2</a> +         doc = "peform photometric calibration",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#5fb621f2">5fb621f2</a> +     )</div>
                
                    def validate(self):
                        pexConfig.Config.validate(self)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#10e1577b">10e1577b</a> -         if self.doPsf and (self.doPhotoCal or self.doAstrometry):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#e269ca47">e269ca47</a> -             if self.initialMeasurement.prefix == self.measurement.prefix:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#e269ca47">e269ca47</a> -                 raise ValueError("CalibrateConfig.initialMeasurement and CalibrateConfig.measurement "\</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#e269ca47">e269ca47</a> -                                      "have the same prefix; field names may clash.")</div>
                        if self.doPhotoCal and not self.doAstrometry:
                            raise ValueError("Cannot do photometric calibration without doing astrometric matching")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#cf14d0ab">cf14d0ab</a> -         if self.requireAstrometry and not self.doAstrometry:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#cf14d0ab">cf14d0ab</a> -             raise ValueError("Astrometric solution required, but not activated")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#cf14d0ab">cf14d0ab</a> -         if self.requirePhotoCal and not self.doPhotoCal:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#cf14d0ab">cf14d0ab</a> -             raise ValueError("Photometric calibration required, but not activated")</div>
                
                    def setDefaults(self):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#ab6736cd">ab6736cd</a> -         pexConfig.Config.setDefaults(self)</div>
                        self.detection.includeThresholdMultiplier = 10.0
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#8bf0f4a4">8bf0f4a4</a> -         # Because we don't deblend in CalibrateTask, we want to minimize merge detections caused by</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#8bf0f4a4">8bf0f4a4</a> -         # growing the footprints.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#8bf0f4a4">8bf0f4a4</a> -         self.detection.returnOriginalFootprints = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#a75584a8">a75584a8</a> -         self.initialMeasurement.prefix = "initial."</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#ab6736cd">ab6736cd</a> -         self.initialMeasurement.algorithms.names -= ["correctfluxes"]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#7484a32c">7484a32c</a> +         self.initialMeasurement.algorithms.names -= ["correctfluxes", "classification.extendedness"]</div>
              ?                                                                     +++++++++++++++++++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#ab6736cd">ab6736cd</a> -         initflags = [self.initialMeasurement.prefix+x</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#ab6736cd">ab6736cd</a> -                      for x in self.measurePsf.starSelector["catalog"].badStarPixelFlags]</div>
              ?         ^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#79013ddb">79013ddb</a> +         initflags = [x for x in self.measurePsf.starSelector["catalog"].badStarPixelFlags]</div>
              ?         ^^^^^^^^^^^^^^
                        self.measurePsf.starSelector["catalog"].badStarPixelFlags.extend(initflags)
                        self.background.binSize = 1024
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#c351575f">c351575f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#696b641f">696b641f</a> + ## \addtogroup LSST_task_documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#696b641f">696b641f</a> + ## \{</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#696b641f">696b641f</a> + ## \page CalibrateTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#696b641f">696b641f</a> + ## \ref CalibrateTask_ "CalibrateTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#696b641f">696b641f</a> + ## \copybrief CalibrateTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#696b641f">696b641f</a> + ## \}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#52b73463">52b73463</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#52b73463">52b73463</a> -         # Don't measure the elliptical aperture fluxes when calibrating</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#52b73463">52b73463</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#52b73463">52b73463</a> -         aperture_elliptical = "flux.aperture.elliptical"</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#52b73463">52b73463</a> -         if aperture_elliptical in self.measurement.value.algorithms.names:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#52b73463">52b73463</a> -             self.measurement.value.algorithms.names -= (aperture_elliptical,)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#0888abcd">0888abcd</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#0888abcd">0888abcd</a> -         # Stop flux.gaussian recomputing the Gaussian's weights (as shape.sdss already did that)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#0888abcd">0888abcd</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#0888abcd">0888abcd</a> -         try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#0888abcd">0888abcd</a> -             self.initialMeasurement.algorithms['flux.gaussian'].fixed = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#0888abcd">0888abcd</a> -             self.measurement.algorithms['flux.gaussian'].fixed = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#5bae4e5a">5bae4e5a</a> -             self.initialMeasurement.algorithms['flux.gaussian'].centroid = \</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#0888abcd">0888abcd</a> -                 'initial.shape.sdss.centroid'</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#5bae4e5a">5bae4e5a</a> -             self.initialMeasurement.algorithms['flux.gaussian'].shape = 'initial.shape.sdss'</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#0888abcd">0888abcd</a> -         except pexConfig.FieldValidationError: # "flux.gaussian" isn't there</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#0888abcd">0888abcd</a> -             pass</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#a75584a8">a75584a8</a> -         </div>
                class CalibrateTask(pipeBase.Task):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#c3a3e34a">c3a3e34a</a> -     """Calibrate an exposure: measure PSF, subtract background, etc.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#696b641f">696b641f</a> +     """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#696b641f">696b641f</a> + \anchor CalibrateTask_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#696b641f">696b641f</a> + \brief Calibrate an exposure: measure PSF, subtract background, measure astrometry and photometry</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Contents Contents</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Purpose</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Initialize</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_IO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Metadata</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Debug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#696b641f">696b641f</a> +  - \ref pipe_tasks_calibrate_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Purpose	Description</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#696b641f">696b641f</a> + \copybrief CalibrateTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#696b641f">696b641f</a> + Calculate an Exposure's zero-point given a set of flux measurements of stars matched to an input catalogue.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#696b641f">696b641f</a> + The type of flux to use is specified by CalibrateConfig.fluxField.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#696b641f">696b641f</a> + The algorithm clips outliers iteratively, with parameters set in the configuration.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#696b641f">696b641f</a> + \note This task can adds fields to the schema, so any code calling this task must ensure that</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#696b641f">696b641f</a> + these columns are indeed present in the input match list; see \ref pipe_tasks_calibrate_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Initialize	Task initialisation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#f644224a">f644224a</a> + \copydoc \_\_init\_\_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#696b641f">696b641f</a> + CalibrateTask delegates most of its work to a set of sub-Tasks:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#696b641f">696b641f</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#696b641f">696b641f</a> + <DT> repair \ref RepairTask_ "RepairTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#696b641f">696b641f</a> + <DD> Interpolate over defects such as bad columns and cosmic rays.  This task is called twice;  once</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#696b641f">696b641f</a> + before the %measurePsf step and again after the PSF has been measured.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#696b641f">696b641f</a> + <DT> detection \ref SourceDetectionTask_ "SourceDetectionTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#696b641f">696b641f</a> + <DD> Initial (high-threshold) detection phase for calibration</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#696b641f">696b641f</a> + <DT> initialMeasurement \ref SourceMeasurementTask_ "SourceMeasurementTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#696b641f">696b641f</a> + <DD> Make the initial measurements used to feed PSF determination and aperture correction determination</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#696b641f">696b641f</a> + <DT> astrometry \ref AstrometryTask_ "AstrometryTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#696b641f">696b641f</a> + <DD> Solve the astrometry.  May be disabled by setting CalibrateTaskConfig.doAstrometry to be False.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#696b641f">696b641f</a> + This task is called twice;  once before the %measurePsf step and again after the PSF has been measured.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#696b641f">696b641f</a> + <DT> %measurePsf \ref MeasurePsfTask_ "MeasurePsfTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#696b641f">696b641f</a> + <DD> Estimate the PSF.  May be disabled by setting CalibrateTaskConfig.doPsf to be False.  If requested</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#696b641f">696b641f</a> + the astrometry is solved before this is called, so if you disable the astrometry the %measurePsf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#696b641f">696b641f</a> + task won't have access to objects positions.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#696b641f">696b641f</a> + <DT> measurement \ref SourceMeasurementTask_ "SourceMeasurementTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#696b641f">696b641f</a> + <DD> Post-PSF-determination measurements used to feed other calibrations</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#696b641f">696b641f</a> + <DT> photocal \ref PhotoCalTask_ "PhotoCalTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#696b641f">696b641f</a> + <DD> Solve for the photometric zeropoint.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#696b641f">696b641f</a> + May be disabled by setting CalibrateTaskConfig.doPhotoCal to be False.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#696b641f">696b641f</a> + \em N.b.  Requires that \c astrometry was successfully run.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#696b641f">696b641f</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#696b641f">696b641f</a> + You can replace any of these subtasks if you wish, see \ref calibrate_MyAstrometryTask.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#696b641f">696b641f</a> + \note These task APIs are not well controlled, so replacing a task is a matter of matching</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#696b641f">696b641f</a> + a poorly specified interface.  We will be working on this over the first year of construction.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#f644224a">f644224a</a> + \section pipe_tasks_calibrate_IO		Invoking the Task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#696b641f">696b641f</a> + \copydoc run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Config       Configuration parameters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#696b641f">696b641f</a> + See \ref CalibrateConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#696b641f">696b641f</a> + #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Metadata   Quantities set in Metadata</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#696b641f">696b641f</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#696b641f">696b641f</a> + <DT>Task metadata</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#696b641f">696b641f</a> + <DD></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#696b641f">696b641f</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#696b641f">696b641f</a> + <DT> MAGZERO <DD> Measured zeropoint (DN per second)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#696b641f">696b641f</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#696b641f">696b641f</a> + <DT> Exposure metadata</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#696b641f">696b641f</a> + <DD></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#696b641f">696b641f</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#696b641f">696b641f</a> + <DT> MAGZERO_RMS <DD> MAGZERO's RMS == return.sigma</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#696b641f">696b641f</a> + <DT> MAGZERO_NOBJ <DD> Number of stars used == return.ngood</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#696b641f">696b641f</a> + <DT> COLORTERM1 <DD> ?? (always 0.0)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#696b641f">696b641f</a> + <DT> COLORTERM2 <DD> ?? (always 0.0)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
218  <a href="#696b641f">696b641f</a> + <DT> COLORTERM3 <DD> ?? (always 0.0)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
219  <a href="#696b641f">696b641f</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#696b641f">696b641f</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#696b641f">696b641f</a> + #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Debug		Debug variables</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#696b641f">696b641f</a> + The \link lsst.pipe.base.cmdLineTask.CmdLineTask command line task\endlink interface supports a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#696b641f">696b641f</a> + flag \c -d to import \b debug.py from your \c PYTHONPATH; see \ref baseDebug for more about \b debug.py files.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
228  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#696b641f">696b641f</a> + The calibrate task has a debug dictionary with keys which correspond to stages of the CalibrationTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#696b641f">696b641f</a> + processing:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#696b641f">696b641f</a> + <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#696b641f">696b641f</a> + <DT>repair</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#da979ae2">da979ae2</a> + <DD> Fixed defects and masked cosmic rays with a guessed PSF.  Action: show the exposure.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#696b641f">696b641f</a> + <DT>background</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#da979ae2">da979ae2</a> + <DD> Subtracted background (no sources masked).  Action: show the exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#696b641f">696b641f</a> + <DT>PSF_repair</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#da979ae2">da979ae2</a> + <DD> Fixed defects and removed cosmic rays with an estimated PSF.  Action: show the exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#696b641f">696b641f</a> + <DT>PSF_background</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#da979ae2">da979ae2</a> + <DD> Subtracted background (calibration sources masked).  Action: show the exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#696b641f">696b641f</a> + <DT>calibrate</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
241  <a href="#da979ae2">da979ae2</a> + <DD> Just before astro/photo calibration.  Action: show the exposure, and</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#696b641f">696b641f</a> +  - sources as smallish green o</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#696b641f">696b641f</a> +  - matches (if exposure has a Wcs).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#696b641f">696b641f</a> +   - catalog position as a largish yellow +</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#696b641f">696b641f</a> +   - source position as a largish red x</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#696b641f">696b641f</a> + </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#696b641f">696b641f</a> + The values are the \c ds9 frame to display in (if >= 1); if <= 0, nothing's displayed.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#696b641f">696b641f</a> + There's an example \ref pipe_tasks_calibrate_Debug_example "here".</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#696b641f">696b641f</a> + Some subtasks may also have their own debug information; see individual Task documentation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#696b641f">696b641f</a> + \section pipe_tasks_calibrate_Example	A complete example of using CalibrateTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
253  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#da979ae2">da979ae2</a> + This code is in \link calibrateTask.py\endlink in the examples directory, and can be run as \em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#696b641f">696b641f</a> + \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#696b641f">696b641f</a> + examples/calibrateTask.py --ds9</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#696b641f">696b641f</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#696b641f">696b641f</a> + \dontinclude calibrateTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#696b641f">696b641f</a> + Import the task (there are some other standard imports; read the file if you're curious)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#696b641f">696b641f</a> + \skipline CalibrateTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#696b641f">696b641f</a> + Create the detection task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#696b641f">696b641f</a> + \skip CalibrateTask.ConfigClass</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#696b641f">696b641f</a> + \until config=config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#696b641f">696b641f</a> + Note that we're using a custom AstrometryTask (because we don't have a valid astrometric catalogue handy);</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#696b641f">696b641f</a> + see \ref calibrate_MyAstrometryTask.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#696b641f">696b641f</a> + We're now ready to process the data (we could loop over multiple exposures/catalogues using the same</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#696b641f">696b641f</a> + task objects) and unpack the results</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#75be6566">75be6566</a> + \skip loadData</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#696b641f">696b641f</a> + \until sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#696b641f">696b641f</a> + We then might plot the results (\em e.g. if you set \c --ds9 on the command line)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#696b641f">696b641f</a> + \skip display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#696b641f">696b641f</a> + \until dot</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#696b641f">696b641f</a> + \subsection calibrate_MyAstrometryTask Using a Custom Astrometry Task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#696b641f">696b641f</a> + The first thing to do is define my own task:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#696b641f">696b641f</a> + \dontinclude calibrateTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#696b641f">696b641f</a> + \skip MyAstrometryTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#696b641f">696b641f</a> + \skip MyAstrometryTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
284  <a href="#696b641f">696b641f</a> + \until super</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#da979ae2">da979ae2</a> + Then we need our own \c run method.  First unpack the filtername and wcs</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
287  <a href="#696b641f">696b641f</a> + \skip run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
288  <a href="#da979ae2">da979ae2</a> + \until wcs</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#696b641f">696b641f</a> + Then build a "reference catalog" by shamelessly copying the catalog of detected sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#696b641f">696b641f</a> + \skip schema</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
291  <a href="#696b641f">696b641f</a> + \until get("photometric")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
292  <a href="#696b641f">696b641f</a> + (you need to set "flux" as well as \c filterName due to a bug in the photometric calibration code;</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
293  <a href="#696b641f">696b641f</a> + <A HREF=https://jira.lsstcorp.org/browse/DM-933>DM-933</A>).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#696b641f">696b641f</a> + Then "match" by zipping up the two catalogs,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
296  <a href="#696b641f">696b641f</a> + \skip matches</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#696b641f">696b641f</a> + \until append</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
298  <a href="#696b641f">696b641f</a> + and finally return the desired results.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#696b641f">696b641f</a> + \skip return</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
300  <a href="#696b641f">696b641f</a> + \until )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
301  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
302  <a href="#696b641f">696b641f</a> + <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
303  <a href="#696b641f">696b641f</a> + \anchor pipe_tasks_calibrate_Debug_example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
304  <a href="#696b641f">696b641f</a> + To investigate the \ref pipe_tasks_calibrate_Debug, put something like</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
305  <a href="#696b641f">696b641f</a> + \code{.py}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
306  <a href="#696b641f">696b641f</a> +     import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
307  <a href="#696b641f">696b641f</a> +     def DebugInfo(name):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
308  <a href="#696b641f">696b641f</a> +         di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
309  <a href="#696b641f">696b641f</a> +         if name == "lsst.pipe.tasks.calibrate":</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#696b641f">696b641f</a> +             di.display = dict(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#696b641f">696b641f</a> +                 repair = 1,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#696b641f">696b641f</a> +                 calibrate = 2,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#696b641f">696b641f</a> +             )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
315  <a href="#696b641f">696b641f</a> +         return di</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#696b641f">696b641f</a> +     lsstDebug.Info = DebugInfo</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#696b641f">696b641f</a> + \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#696b641f">696b641f</a> + into your debug.py file and run calibrateTask.py with the \c --debug flag.</div>
                    """
                    ConfigClass = CalibrateConfig
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#696b641f">696b641f</a> +     _DefaultName = "calibrate"</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#08a8ec02">08a8ec02</a> -     def __init__(self, schema=None, **kwargs):</div>
              ?                        -------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#02df497d">02df497d</a> +     def __init__(self, **kwargs):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#696b641f">696b641f</a> +         """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#696b641f">696b641f</a> +         Create the calibration task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#696b641f">696b641f</a> +         \param **kwargs keyword arguments to be passed to lsst.pipe.base.task.Task.__init__</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#696b641f">696b641f</a> +         """</div>
                        pipeBase.Task.__init__(self, **kwargs)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#08a8ec02">08a8ec02</a> -         if schema is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#3132b1de">3132b1de</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#3132b1de">3132b1de</a> +         # the calibrate Source Catalog is divided into two catalogs to allow measurement to be run twice</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#e19091f6">e19091f6</a> +         # schema1 contains everything except what is added by the second measurement task.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#e19091f6">e19091f6</a> +         # Before the second measurement task is run, self.schemaMapper transforms the sources into</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#e19091f6">e19091f6</a> +         # the final output schema, at the same time renaming the measurement fields to "initial_" </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#08a8ec02">08a8ec02</a> -             schema = afwTable.SourceTable.makeMinimalSchema()</div>
              ?         ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
336  <a href="#79013ddb">79013ddb</a> +         self.schema1 = afwTable.SourceTable.makeMinimalSchema()</div>
              ?         ^^^^^      +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#08a8ec02">08a8ec02</a> -         self.schema = schema</div>
                        self.algMetadata = dafBase.PropertyList()
                        self.makeSubtask("repair")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("detection", schema=self.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#7e6427f7">7e6427f7</a> +         self.makeSubtask("detection", schema=self.schema1)</div>
              ?                                                         +
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#79013ddb">79013ddb</a> +         beginInitial = self.schema1.getFieldCount()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("initialMeasurement", schema=self.schema, algMetadata=self.algMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#79013ddb">79013ddb</a> +         self.makeSubtask("initialMeasurement", schema=self.schema1, algMetadata=self.algMetadata)</div>
              ?                                                                  +
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#79013ddb">79013ddb</a> +         endInitial = self.schema1.getFieldCount()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("measurePsf", schema=self.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#7e6427f7">7e6427f7</a> +         self.makeSubtask("measurePsf", schema=self.schema1)</div>
              ?                                                          +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("measurement", schema=self.schema, algMetadata=self.algMetadata)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#c120a342">c120a342</a> -         if self.config.doCurveOfGrowth:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#c120a342">c120a342</a> -             self.makeSubtask("measureCurveOfGrowth", schema=self.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#19efc211">19efc211</a> -         self.makeSubtask("measureApCorr", schema=self.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("astrometry", schema=self.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#7e6427f7">7e6427f7</a> +         self.makeSubtask("astrometry", schema=self.schema1)</div>
              ?                                                          +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#3ffd87c1">3ffd87c1</a> -         self.makeSubtask("photocal", schema=self.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#7e6427f7">7e6427f7</a> +         self.makeSubtask("photocal", schema=self.schema1)</div>
              ?                                                        +
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#79013ddb">79013ddb</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#e19091f6">e19091f6</a> +         # create a schemaMapper to map schema1 into schema2</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#e19091f6">e19091f6</a> +         self.schemaMapper = afwTable.SchemaMapper(self.schema1)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#e0116f17">e0116f17</a> +         separator =  "_"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#79013ddb">79013ddb</a> +         count = 0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#79013ddb">79013ddb</a> +         for item in self.schema1:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#79013ddb">79013ddb</a> +             count = count + 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
353  <a href="#79013ddb">79013ddb</a> +             field = item.getField()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
354  <a href="#79013ddb">79013ddb</a> +             name = field.getName()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#e19091f6">e19091f6</a> +             if count > beginInitial and count <= endInitial: </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#e19091f6">e19091f6</a> +                 name = "initial" + separator + name </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#e19091f6">e19091f6</a> +             self.schemaMapper.addMapping(item.key, name)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#3132b1de">3132b1de</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#e19091f6">e19091f6</a> +         # measurements fo the second measurement step done with a second schema</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#e19091f6">e19091f6</a> +         schema = self.schemaMapper.editOutputSchema()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#e19091f6">e19091f6</a> +         self.makeSubtask("measurement", schema=schema, algMetadata=self.algMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#e19091f6">e19091f6</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#e19091f6">e19091f6</a> +         # the final schema is the same as the schemaMapper output</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#e19091f6">e19091f6</a> +         self.schema = self.schemaMapper.getOutputSchema()</div>
                
                    def getCalibKeys(self):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#36777f3e">36777f3e</a> -         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#696b641f">696b641f</a> +         """!</div>
              ?            +
                        Return a sequence of schema keys that represent fields that should be propagated from
                        icSrc to src by ProcessCcdTask.
                        """
                        if self.config.doPsf:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#0494ead9">0494ead9</a> -             if self.measurePsf.config.reserveFraction > 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#0494ead9">0494ead9</a> -                 return (self.measurePsf.candidateKey, self.measurePsf.usedKey, self.measurePsf.reservedKey)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#0494ead9">0494ead9</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#0494ead9">0494ead9</a> -                 return (self.measurePsf.candidateKey, self.measurePsf.usedKey)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#43df1994">43df1994</a> +             return (self.measurePsf.candidateKey, self.measurePsf.usedKey)</div>
                        else:
                            return ()
                
                    @pipeBase.timeMethod
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#0494ead9">0494ead9</a> -     def run(self, exposure, defects=None, idFactory=None, expId=0):</div>
              ?                                                         ---------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#01027954">01027954</a> +     def run(self, exposure, defects=None, idFactory=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#f3a6f7f0">f3a6f7f0</a> -         """Calibrate an exposure: measure PSF, subtract background, measure astrometry and photometry</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#696b641f">696b641f</a> +         """!Run the calibration task on an exposure</div>
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#696b641f">696b641f</a> +         \param[in,out]  exposure   Exposure to calibrate; measured PSF will be installed there as well</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#19efc211">19efc211</a> -         @param[in,out]  exposure   Exposure to calibrate; measured Psf, Wcs, ApCorr, Calib, etc. will</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#19efc211">19efc211</a> -                                    be installed there as well</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#e269ca47">e269ca47</a> -         @param[in]      defects    List of defects on exposure</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#696b641f">696b641f</a> +         \param[in]      defects    List of defects on exposure</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#01027954">01027954</a> -         @param[in]      idFactory  afw.table.IdFactory to use for source catalog.</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#696b641f">696b641f</a> +         \param[in]      idFactory  afw.table.IdFactory to use for source catalog.</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#0494ead9">0494ead9</a> -         @param[in]      expId      Exposure id used for random number generation.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#f3a6f7f0">f3a6f7f0</a> -         @return a pipeBase.Struct with fields:</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
383  <a href="#696b641f">696b641f</a> +         \return a pipeBase.Struct with fields:</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#75be6566">75be6566</a> +         - exposure: Repaired exposure</div>
                        - backgrounds: A list of background models applied in the calibration phase
                        - psf: Point spread function
                        - sources: Sources used in calibration
                        - matches: Astrometric matches
                        - matchMeta: Metadata for astrometric matches
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#19efc211">19efc211</a> -         - apCorrMap: Map of aperture corrections</div>
                        - photocal: Output of photocal subtask
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#696b641f">696b641f</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#75be6566">75be6566</a> +         It is moderately important to provide a decent initial guess for the seeing if you want to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#75be6566">75be6566</a> +         deal with cosmic rays.  If there's a PSF in the exposure it'll be used; failing that the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#75be6566">75be6566</a> +         CalibrateConfig.initialPsf is consulted (although the pixel scale will be taken from the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#75be6566">75be6566</a> +         WCS if available).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#75be6566">75be6566</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#696b641f">696b641f</a> +         If the exposure contains an lsst.afw.image.Calib object with the exposure time set, MAGZERO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#696b641f">696b641f</a> +         will be set in the task metadata.</div>
                        """
                        assert exposure is not None, "No exposure provided"
                
                        if not exposure.hasPsf():
                            self.installInitialPsf(exposure)
                        if idFactory is None:
                            idFactory = afwTable.IdFactory.makeSimple()
                        backgrounds = afwMath.BackgroundList()
                        keepCRs = True                  # At least until we know the PSF
                        self.repair.run(exposure, defects=defects, keepCRs=keepCRs)
                        self.display('repair', exposure=exposure)
                        if self.config.doBackground:
                            with self.timer("background"):
                                bg, exposure = measAlg.estimateBackground(exposure, self.config.background, subtract=True)
                                backgrounds.append(bg)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#cb80d1d5">cb80d1d5</a> - </div>
                            self.display('background', exposure=exposure)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
415  <a href="#3132b1de">3132b1de</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
416  <a href="#3132b1de">3132b1de</a> +         # Make both tables from the same detRet, since detRet can only be run once</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#01027954">01027954</a> -         table = afwTable.SourceTable.make(self.schema, idFactory)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#79013ddb">79013ddb</a> +         table1 = afwTable.SourceTable.make(self.schema1, idFactory)</div>
              ?              +                                        +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#d51064f9">d51064f9</a> -         table.setMetadata(self.algMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
418  <a href="#79013ddb">79013ddb</a> +         table1.setMetadata(self.algMetadata)</div>
              ?              +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#84190c46">84190c46</a> -         detRet = self.detection.makeSourceCatalog(table, exposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
419  <a href="#79013ddb">79013ddb</a> +         detRet = self.detection.makeSourceCatalog(table1, exposure)</div>
              ?                                                        +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#84190c46">84190c46</a> -         sources = detRet.sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
420  <a href="#79013ddb">79013ddb</a> +         sources1 = detRet.sources</div>
              ?                +
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
421  <a href="#7484a32c">7484a32c</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
422  <a href="#7484a32c">7484a32c</a> + </div>
                        if detRet.fpSets.background:
                            backgrounds.append(detRet.fpSets.background)
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#072a7fe8">072a7fe8</a> +         # do the initial measurement.  This is normally done for star selection, but do it </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#072a7fe8">072a7fe8</a> +         # even if the psf is not going to be calculated for consistency</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
428  <a href="#072a7fe8">072a7fe8</a> +         self.initialMeasurement.measure(exposure, sources1)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
429  <a href="#c21c1dd9">c21c1dd9</a> + </div>
                        if self.config.doPsf:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#9a7843e3">9a7843e3</a> -             self.initialMeasurement.measure(exposure, sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#ff920be8">ff920be8</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#e9db5c0d">e9db5c0d</a> -             matches = None</div>
                            if self.config.doAstrometry:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
432  <a href="#e4b58dbb">e4b58dbb</a> +                 astromRet = self.astrometry.run(exposure, sources1)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
433  <a href="#e4b58dbb">e4b58dbb</a> +                 matches = astromRet.matches</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
434  <a href="#f8af68d3">f8af68d3</a> +             else:</div>
                                # If doAstrometry is False, we force the Star Selector to either make them itself
                                # or hope it doesn't need them.
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#f8af68d3">f8af68d3</a> +                 matches = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#ab6cb9e2">ab6cb9e2</a> -                 origWcs = exposure.getWcs()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#e9db5c0d">e9db5c0d</a> -                 try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#e9db5c0d">e9db5c0d</a> -                     astromRet = self.astrometry.run(exposure, sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#e9db5c0d">e9db5c0d</a> -                     matches = astromRet.matches</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#e9db5c0d">e9db5c0d</a> -                 except RuntimeError as e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#e9db5c0d">e9db5c0d</a> -                     if self.config.requireAstrometry:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#e9db5c0d">e9db5c0d</a> -                         raise</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#c2d89396">c2d89396</a> -                     self.log.warn("Unable to perform astrometry (%s): attempting to proceed" % e)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#ab6cb9e2">ab6cb9e2</a> -                 finally:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#ab6cb9e2">ab6cb9e2</a> -                     # Restore original Wcs: we're going to repeat the astrometry later, and if it succeeded</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#ab6cb9e2">ab6cb9e2</a> -                     # this time, running it again with the same basic setup means it should succeed again.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#ab6cb9e2">ab6cb9e2</a> -                     exposure.setWcs(origWcs)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#ab6736cd">ab6736cd</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#ab6736cd">ab6736cd</a> -             # This is an initial, throw-away run of photocal, since we need a valid Calib to run CModel,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#ab6736cd">ab6736cd</a> -             # and we need to run CModel to compute aperture corrections from it.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#ab6736cd">ab6736cd</a> -             if self.config.doPhotoCal:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#ab6736cd">ab6736cd</a> -                 try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#cf5724b8">cf5724b8</a> -                     if not matches:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#cf5724b8">cf5724b8</a> -                         raise RuntimeError("No matches available")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#ab6736cd">ab6736cd</a> -                     photocalRet = self.photocal.run(exposure, matches,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#625aa2e6">625aa2e6</a> -                                                     prefix=self.config.initialMeasurement.prefix,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#625aa2e6">625aa2e6</a> -                                                     doSelectUnresolved=False)# don't trust s/g without good PSF</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#f34b6263">f34b6263</a> -                     self.log.info("Initial photometric zero-point: %f" % photocalRet.calib.getMagnitude(1.0))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#ab6736cd">ab6736cd</a> -                     exposure.getCalib().setFluxMag0(photocalRet.calib.getFluxMag0())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#f34b6263">f34b6263</a> -                 except Exception, e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#f34b6263">f34b6263</a> -                     self.log.warn("Failed to determine initial photometric zero-point: %s" % e)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#ab6736cd">ab6736cd</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#0494ead9">0494ead9</a> -             psfRet = self.measurePsf.run(exposure, sources, expId=expId, matches=matches)</div>
              ?                                                            -------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
438  <a href="#79013ddb">79013ddb</a> +             psfRet = self.measurePsf.run(exposure, sources1, matches=matches)</div>
              ?                                                           +
                            psf = psfRet.psf
                        elif exposure.hasPsf():
                            psf = exposure.getPsf()
                        else:
                            psf = None
                
                        # Wash, rinse, repeat with proper PSF
                
                        if self.config.doPsf:
                            self.repair.run(exposure, defects=defects, keepCRs=None)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#d2d636aa">d2d636aa</a> -             self.display('repair', exposure=exposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
449  <a href="#696b641f">696b641f</a> +             self.display('PSF_repair', exposure=exposure)</div>
              ?                           ++++
                
                        if self.config.doBackground:
                            # Background estimation ignores (by default) pixels with the
                            # DETECTED bit set, so now we re-estimate the background,
                            # ignoring sources.  (see BackgroundConfig.ignoredPixelMask)
                            with self.timer("background"):
                                # Subtract background
                                bg, exposure = measAlg.estimateBackground(
                                    exposure, self.config.background, subtract=True,
                                    statsKeys=('BGMEAN2', 'BGVAR2'))
                                self.log.info("Fit and subtracted background")
                                backgrounds.append(bg)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
308  <a href="#d2d636aa">d2d636aa</a> -             self.display('background', exposure=exposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
463  <a href="#696b641f">696b641f</a> +             self.display('PSF_background', exposure=exposure)</div>
              ?                           ++++
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
465  <a href="#072a7fe8">072a7fe8</a> +         # make a second table with which to do the second measurement</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
466  <a href="#072a7fe8">072a7fe8</a> +         # the schemaMapper will copy the footprints and ids, which is all we need.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
467  <a href="#072a7fe8">072a7fe8</a> +         table2 = afwTable.SourceTable.make(self.schema, idFactory)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
468  <a href="#072a7fe8">072a7fe8</a> +         table2.setMetadata(self.algMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
469  <a href="#072a7fe8">072a7fe8</a> +         sources = afwTable.SourceCatalog(table2)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
470  <a href="#072a7fe8">072a7fe8</a> +         # transfer to a second table -- note that the slots do not have to be reset here</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
471  <a href="#072a7fe8">072a7fe8</a> +         # as long as measurement.run follows immediately</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
472  <a href="#072a7fe8">072a7fe8</a> +         sources.extend(sources1, self.schemaMapper)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
473  <a href="#072a7fe8">072a7fe8</a> +         self.measurement.run(exposure, sources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
474  <a href="#e269ca47">e269ca47</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#4799fab0">4799fab0</a> -         if self.config.doMeasureApCorr:</div>
              ?                          ^ ^^^ ^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
475  <a href="#e269ca47">e269ca47</a> +         if self.config.doAstrometry:</div>
              ?                          ^^^^^^ ^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
476  <a href="#e4b58dbb">e4b58dbb</a> +             astromRet = self.astrometry.run(exposure, sources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
477  <a href="#f3a6f7f0">f3a6f7f0</a> +             matches = astromRet.matches</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
478  <a href="#f3a6f7f0">f3a6f7f0</a> +             matchMeta = astromRet.matchMeta</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#4799fab0">4799fab0</a> -             # Because we want to both compute the aperture corrections and apply them - and we do the latter</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#4799fab0">4799fab0</a> -             # as a source measurement plugin ("CorrectFluxes"), we have to sandwich the aperture correction</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#4799fab0">4799fab0</a> -             # measurement in between two source measurement passes, using the priority range arguments added</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#4799fab0">4799fab0</a> -             # just for this purpose.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
315  <a href="#4799fab0">4799fab0</a> -             apCorrApplyPriority = self.config.measurement.algorithms["correctfluxes"].priority</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#4799fab0">4799fab0</a> -             self.measurement.run(exposure, sources, endPriority=apCorrApplyPriority)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#396c9ef4">396c9ef4</a> -             if self.config.doCurveOfGrowth:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#758e7f70">758e7f70</a> -                 # By applying the curve of growth here, it will affect everything else it needs to (aperture</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#758e7f70">758e7f70</a> -                 # corrections, zero point) without us modifying them directly.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#758e7f70">758e7f70</a> -                 curveOfGrowth = self.measureCurveOfGrowth.run(sources).curveOfGrowth</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#758e7f70">758e7f70</a> -                 curveOfGrowth.apply(self.config.measurement, catalog=sources,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#758e7f70">758e7f70</a> -                                     algorithms=[self.config.measurement.slots.calibFlux], log=self.log)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#057108dc">057108dc</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#057108dc">057108dc</a> -                 curveOfGrowth = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#4799fab0">4799fab0</a> -             apCorrMap = self.measureApCorr.run(exposure.getBBox(afwImage.PARENT), sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#4799fab0">4799fab0</a> -             exposure.getInfo().setApCorrMap(apCorrMap)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#4799fab0">4799fab0</a> -             self.measurement.run(exposure, sources, beginPriority=apCorrApplyPriority)</div>
                        else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#396c9ef4">396c9ef4</a> -             curveOfGrowth = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#4799fab0">4799fab0</a> -             apCorrMap = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#4799fab0">4799fab0</a> -             self.measurement.run(exposure, sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#19efc211">19efc211</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#e9db5c0d">e9db5c0d</a> -         matches, matchMeta = None, None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
480  <a href="#f3a6f7f0">f3a6f7f0</a> +             matches, matchMeta = None, None</div>
              ? ++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
481  <a href="#f3a6f7f0">f3a6f7f0</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#e269ca47">e269ca47</a> -         if self.config.doAstrometry:</div>
              ?                          ^^ - ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
482  <a href="#51ee536b">51ee536b</a> +         if self.config.doPhotoCal:</div>
              ?                          ^^^  ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
483  <a href="#e269ca47">e269ca47</a> +             assert(matches is not None)</div>
                            try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
336  <a href="#e9db5c0d">e9db5c0d</a> -                 astromRet = self.astrometry.run(exposure, sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#e9db5c0d">e9db5c0d</a> -                 matches = astromRet.matches</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#e9db5c0d">e9db5c0d</a> -                 matchMeta = astromRet.matchMeta</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#e9db5c0d">e9db5c0d</a> -             except RuntimeError as e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#e9db5c0d">e9db5c0d</a> -                 if self.config.requireAstrometry:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#e9db5c0d">e9db5c0d</a> -                     raise</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#c2d89396">c2d89396</a> -                 self.log.warn("Unable to perform astrometry (%s): attempting to proceed" % e)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#f3a6f7f0">f3a6f7f0</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#51ee536b">51ee536b</a> -         if self.config.doPhotoCal:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#c4bff963">c4bff963</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#cf5724b8">cf5724b8</a> -                 if not matches:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#cf5724b8">cf5724b8</a> -                     raise RuntimeError("No matches available")</div>
                                photocalRet = self.photocal.run(exposure, matches)
                            except Exception, e:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#cf14d0ab">cf14d0ab</a> -                 if self.config.requirePhotoCal:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#cf14d0ab">cf14d0ab</a> -                     raise</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#696b641f">696b641f</a> +                 raise</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#f34b6263">f34b6263</a> -                 self.log.warn("Failed to determine updated photometric zero-point: %s" % e)</div>
              ?                                                   --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
488  <a href="#3e137717">3e137717</a> +                 self.log.warn("Failed to determine photometric zero-point: %s" % e)</div>
                                photocalRet = None
                                self.metadata.set('MAGZERO', float("NaN"))
                
                            if photocalRet:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#f34b6263">f34b6263</a> -                 self.log.info("Updated photometric zero-point: %f" % photocalRet.calib.getMagnitude(1.0))</div>
              ?                                ^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
493  <a href="#b0880d61">b0880d61</a> +                 self.log.info("Photometric zero-point: %f" % photocalRet.calib.getMagnitude(1.0))</div>
              ?                                ^
                                exposure.getCalib().setFluxMag0(photocalRet.calib.getFluxMag0())
                                metadata = exposure.getMetadata()
                                # convert to (mag/sec/adu) for metadata
                                try:
                                    magZero = photocalRet.zp - 2.5 * math.log10(exposure.getCalib().getExptime() )
                                    metadata.set('MAGZERO', magZero)
                                except:
                                    self.log.warn("Could not set normalized MAGZERO in header: no exposure time")
                                metadata.set('MAGZERO_RMS', photocalRet.sigma)
                                metadata.set('MAGZERO_NOBJ', photocalRet.ngood)
                                metadata.set('COLORTERM1', 0.0)
                                metadata.set('COLORTERM2', 0.0)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#c7a9bd68">c7a9bd68</a> -                 metadata.set('COLORTERM3', 0.0)    </div>
              ?                                                ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
506  <a href="#7484a32c">7484a32c</a> +                 metadata.set('COLORTERM3', 0.0)</div>
                        else:
                            photocalRet = None
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#f3a6f7f0">f3a6f7f0</a> - </div>
                        self.display('calibrate', exposure=exposure, sources=sources, matches=matches)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#f3a6f7f0">f3a6f7f0</a> - </div>
                        return pipeBase.Struct(
                            exposure = exposure,
                            backgrounds = backgrounds,
                            psf = psf,
                            sources = sources,
                            matches = matches,
                            matchMeta = matchMeta,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
383  <a href="#396c9ef4">396c9ef4</a> -             curveOfGrowth = curveOfGrowth,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#19efc211">19efc211</a> -             apCorrMap = apCorrMap,</div>
                            photocal = photocalRet,
                        )
                
                    def installInitialPsf(self, exposure):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#e269ca47">e269ca47</a> -         """Initialise the calibration procedure by setting the PSF to a configuration-defined guess.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
521  <a href="#696b641f">696b641f</a> +         """!Initialise the calibration procedure by setting the PSF to a configuration-defined guess.</div>
              ?            +
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#e269ca47">e269ca47</a> -         @param[in,out] exposure Exposure to process; fake PSF will be installed here.</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
523  <a href="#696b641f">696b641f</a> +         \param[in,out] exposure Exposure to process; fake PSF will be installed here.</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
524  <a href="#696b641f">696b641f</a> +         \throws AssertionError If exposure or exposure.getWcs() are None</div>
                        """
                        assert exposure, "No exposure provided"
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#f3a6f7f0">f3a6f7f0</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
527  <a href="#7484a32c">7484a32c</a> + </div>
                        wcs = exposure.getWcs()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#f3a6f7f0">f3a6f7f0</a> -         assert wcs, "No wcs in exposure"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
529  <a href="#b0aa8088">b0aa8088</a> +         if wcs:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
530  <a href="#b0aa8088">b0aa8088</a> +             pixelScale = wcs.pixelScale().asArcseconds()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
531  <a href="#b0aa8088">b0aa8088</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
532  <a href="#b0aa8088">b0aa8088</a> +             pixelScale = self.config.initialPsf.pixelScale</div>
                
                        cls = getattr(measAlg, self.config.initialPsf.model + "Psf")
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#e269ca47">e269ca47</a> -         fwhm = self.config.initialPsf.fwhm / wcs.pixelScale().asArcseconds()</div>
              ?                                           - -----          -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
536  <a href="#b0aa8088">b0aa8088</a> +         fwhm = self.config.initialPsf.fwhm/pixelScale</div>
                        size = self.config.initialPsf.size
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#297747c5">297747c5</a> -         self.log.info("installInitialPsf fwhm=%.2f pixels; size=%d pixels" % (fwhm, size))</div>
              ?                                                ^^^               ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
538  <a href="#e7ea683d">e7ea683d</a> +         self.log.info("installInitialPsf fwhm=%s pixels; size=%s pixels" % (fwhm, size))</div>
              ?                                                ^               ^
                        psf = cls(size, size, fwhm/(2*math.sqrt(2*math.log(2))))
                        exposure.setPsf(psf)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="396c9ef4"/></a>396c9ef4</h3>

<pre>
commit 396c9ef48e25ebec5283d83b73011bb4890a9b78
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Apr 9 18:12:12 2015 +1000

    calibrate: add curve of growth
    
    The curve of growth corrects fluxes to a very large aperture.  The idea is
    that the aperture correction corrects fluxes to a modest aperture with
    spatial variation, while the curve of growth corrects to a very large
    aperture ("infinity") with a single value for the entire CCD.  The
    aperture correction radius (the calibFlux slot) should therefore be set
    to the smallest radius outside which the correction does not vary
    spatially.
    
    We correct the flux in the calibFlux slot, and then the aperture correction
    will correct everything else.  We also correct the multiple aperture
    fluxes.
</pre>
<h3><a name="19efc211"/></a>19efc211</h3>

<pre>
commit 19efc21140df3d68770fead64535cda5ca05c1f8
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Jun 19 14:31:36 2014 -0400

    Measure aperture corrections in CalibrateTask
</pre>
<h3><a name="10e1577b"/></a>10e1577b</h3>

<pre>
commit 10e1577bddf244dc887f07b68d7c619f0e30a090
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 28 13:32:49 2013 -0400

    Remove usage of old aperture correction code (#2746).
</pre>
<h3><a name="8bf0f4a4"/></a>8bf0f4a4</h3>

<pre>
commit 8bf0f4a44c924259d9eefbd109aadec7d839e0f2
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Apr 23 13:02:27 2015 -0400

    Override default for returnOriginalFootprints in CalibrateTask
    
    CalibrateTask is now the only user of detection that doesn't
    run the deblender and hence wants the original (not-grown)
    Footprints.
</pre>
<h3><a name="c3a3e34a"/></a>c3a3e34a</h3>

<pre>
commit c3a3e34ab9ca596036e89eef88ec4e380367a7de
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Feb 15 18:34:03 2012 -0600

    Tweaks: distortion defaults to "none" and is not optional. I fixed a bug associated with
    psf matching in outlierRejectedCoadd. Removed an outdated doc string from calibrate.
    Improvements to processCcdLsstSim to handle snaps.
</pre>
<h3><a name="d51064f9"/></a>d51064f9</h3>

<pre>
commit d51064f9b63170e887cda272a8f91b8509973cac
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Feb 28 11:49:00 2012 -0500

    processCcd and processCcdLsstSim nominally converted to source tables
</pre>
<h3><a name="e9db5c0d"/></a>e9db5c0d</h3>

<pre>
commit e9db5c0dcdca20e8f7ba71f24f8b797e71699352
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 8 12:10:58 2013 -0400

    calibrate: make astrometry failures non-fatal
    
    In many cases, we can limp along without astrometry succeeding, so
    there's no need to give up completely.  In some cases, we want to
    ensure that we succeed, so added config variable 'requireAstrometry'
    to allow a RumtimeError in astrometry to be fatal.
</pre>
<h3><a name="08a8ec02"/></a>08a8ec02</h3>

<pre>
commit 08a8ec029dd52ac55e47b707a6905df061a40506
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:54:36 2014 +0900

    move CalibrateTask from ProcessImageTask into ProcessCcdTask
    
    CalibrateTask seems to have been included in ProcessImageTask before the
    days of CoaddPsf, when we needed to be able to generate a Psf for a coadd
    using the coadd; this is no longer necessary, and its presence in
    ProcessImageTask stands in the way of further refactoring to support the
    plan for coadd multi-band deblending and measurement.
    
    In order to implement matching between the detected sources and the
    reference catalog, I've added an AstrometryTask to ProcessCoaddTask, since
    it can no longer rely on the one in CalibrateTask.  This change does
    change the config hierarchy, and so will break use of processCcd on
    data repositories with existing data (if not using "--clobber-config").
</pre>
<h3><a name="e269ca47"/></a>e269ca47</h3>

<pre>
commit e269ca47a3789f5864b3dd81ff1bec9fadeaeb65
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Feb 27 19:04:16 2012 -0500

    rewrote calibration tasks with schema/table stuff
</pre>
<h3><a name="01027954"/></a>01027954</h3>

<pre>
commit 01027954d3005bd77e18101b95b875fc5916eb3b
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu May 10 16:58:57 2012 -0400

    make source IDs globally unique when first assigned; only tested with lsstSim, but should work for sdss too
</pre>
<h3><a name="057108dc"/></a>057108dc</h3>

<pre>
commit 057108dcd5810f1e57d21cfa969b02abe0ba497d
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 21 13:27:20 2015 -0400

    CalibrateTask: fix for when curve of growth is disabled
    
    Ensures curveOfGrowth is defined.
</pre>
<h3><a name="758e7f70"/></a>758e7f70</h3>

<pre>
commit 758e7f70e523b1cc8a0f8c467ca0182680897c63
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 1 13:39:47 2015 -0400

    calibrate: move applyCurveOfGrowth into CurveOfGrowth class
    
    The CurveOfGrowth object should know how to apply itself to a catalog,
    so moved the code there (which allows us to re-use it in other contexts).
</pre>
<h3><a name="51ee536b"/></a>51ee536b</h3>

<pre>
commit 51ee536be9a3f8f516ec88ebc0c954408ab94a74
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 1 12:18:07 2012 -0500

    fix typos and incorrect variable names; can now run to completion
</pre>
<h3><a name="f34b6263"/></a>f34b6263</h3>

<pre>
commit f34b62633202eb5c1f49ffb8b0e36e4973414f5f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Jul 24 09:48:37 2014 -0600

    Modify photocal log messages to distinguish between first and second runs
</pre>
<h3><a name="625aa2e6"/></a>625aa2e6</h3>

<pre>
commit 625aa2e6ac993effbd16ba70fdf378e224c7bc59
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Dec 17 00:56:24 2014 -0500

    calibrate: don't use star/galaxy in photocal on the first pass
    
    The first pass has a poor (guess) PSF model and therefore the star/galaxy
    classification is unreliable.
</pre>
<h3><a name="c4bff963"/></a>c4bff963</h3>

<pre>
commit c4bff963a0a1973a4429e8ecfaa2a8a1f5bed724
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jul 27 14:45:43 2012 +0900

    Don't die if you can't photometrically calibrate a field
</pre>
<h3><a name="9a7843e3"/></a>9a7843e3</h3>

<pre>
commit 9a7843e3c9ca4df84a2c6905110c99c9e7b55f83
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Feb 28 11:05:45 2012 -0500

    updated to reflect meas/alg moving of aperture correction apply code
</pre>
<h3><a name="d2d636aa"/></a>d2d636aa</h3>

<pre>
commit d2d636aac3e41151cd6a1e731627206ceafbcb7a
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jan 31 15:20:42 2012 -0500

    Got things working through to PSF determination.
</pre>
<h3><a name="ab6cb9e2"/></a>ab6cb9e2</h3>

<pre>
commit ab6cb9e206d0456dc764c5ef78ac80ece937c610
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Oct 4 10:56:44 2013 -0400

    calibrate: restore original Wcs after initial astrometry solution
    
    We will repeat the astrometry solution later (with better positions
    from the proper PSF), and want to give it every chance to succeed.
    Since it succeeded with the original WCS, we restore that to the
    exposure in expectation that it should allow the astrometry solution
    to succeed again.
</pre>
<h3><a name="c7a9bd68"/></a>c7a9bd68</h3>

<pre>
commit c7a9bd681043a5f607b57846cdf0774ad547ce86
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 31 22:28:23 2012 +0900

    put getting exposure time in a try block for processing coadds
</pre>
<h3><a name="c2d89396"/></a>c2d89396</h3>

<pre>
commit c2d89396923f9d589822c043ed8753647e70f3f6
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 8 12:20:10 2013 -0400

    fixup! calibrate: make astrometry failures non-fatal
</pre>
<h3><a name="cf5724b8"/></a>cf5724b8</h3>

<pre>
commit cf5724b852937cfcef1b71b7a372552011fda670
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:57:59 2014 +0900

    make failure to match sources non-fatal
    
    Allows us to push forward with processing, providing something that might
    be useful.
</pre>
<h3><a name="297747c5"/></a>297747c5</h3>

<pre>
commit 297747c52da730dfb955d2352f8adf3f83fea8b5
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Nov 18 14:20:23 2014 -0500

    Improve info message
</pre>
<h3><a name="52b73463"/></a>52b73463</h3>

<pre>
commit 52b734631fd98361be3676768200154051a1cfda
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Feb 20 21:16:58 2013 +0900

    Don't measure the elliptical aperture fluxes when calibrating
</pre>
<h3><a name="cf14d0ab"/></a>cf14d0ab</h3>

<pre>
commit cf14d0ab8793fa2879854eeb4b78df74b5f5c6ae
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Nov 6 21:34:05 2014 -0500

    calibrate: allow photometric calibration to be required for success
    
    If requirePhotoCal is set, then raise an exception if the photocal
    doesn't succeed; otherwise, it's OK to push on without it.
    This only applies to the second, final photocal.  The initial photocal
    may fail due to, e.g., a guess PSF that's nothing like the actual PSF
    (and therefore star/galaxy separation is garbage), in which case the
    second and final photocal (after having measured with the actual PSF)
    should be successful.  It's the success of the second and final photocal
    that we ultimately care about.
</pre>
<h3><a name="3ffd87c1"/></a>3ffd87c1</h3>

<pre>
commit 3ffd87c196f8be99a9ee9305ce2f4acc4a084221
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 3 19:19:47 2012 -0500

    Initial implementation. Needs testing.
</pre>
<h3><a name="cb80d1d5"/></a>cb80d1d5</h3>

<pre>
commit cb80d1d54a369fe917b16bbbf3a1c75e4bbc6b1a
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Feb 27 12:39:50 2012 -0500

    Add option to fiddle the background for debugging
</pre>
<h3><a name="0494ead9"/></a>0494ead9</h3>

<pre>
commit 0494ead9c5c4fc97f8f48aa1a138cec9ec552bdf
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Aug 27 09:46:59 2014 -0400

    measurePSF: Allow for option to reserve PSF candidates from fitting for cross-validation
    
    To get a unique random seed for each CCD this required adding expId method for processImage
</pre>
<h3><a name="ab6736cd"/></a>ab6736cd</h3>

<pre>
commit ab6736cd7b188e072c6bb20a50499053940c7d2c
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 15 14:58:41 2014 -0400

    Run PhotoCal twice in Calibrate, so we have a valid Calib for CModel
</pre>
<h3><a name="4799fab0"/></a>4799fab0</h3>

<pre>
commit 4799fab0375e0d6588a9edde38069336bfa08481
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Sep 6 01:21:26 2014 +0900

    calibrate: implement doMeasureApCorr switch
    
    This switch was defined but not implemented.  Aperture correction
    measurement should be disabled for coadds, as they already have
    an aperture correction (from the sum of the inputs).
</pre>
<h3><a name="36777f3e"/></a>36777f3e</h3>

<pre>
commit 36777f3e7095db4e2ed0765ad50d4406bc018cc7
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Sep 7 19:59:06 2012 -0400

    Fix up how icSource flags are propagated to Sources, using SchemaMapper more and hard-coding the fields to propagate less.
</pre>
<h3><a name="a75584a8"/></a>a75584a8</h3>

<pre>
commit a75584a8245790f387efc1e7c19beeb844913f8d
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Feb 28 00:22:10 2012 -0500

    eliminated unnecessary and duplicate config defaults, moved them to sub-configs when possible
</pre>
<h3><a name="c120a342"/></a>c120a342</h3>

<pre>
commit c120a342dafaf2788fdb08c12d1757de53eded90
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 1 17:13:24 2015 -0400

    CalibrateTask: only instantiate curveOfGrowth if it's activated
    
    There's no need to put anything in the schema if we're not actually
    going to use it.
</pre>
<h3><a name="bb668ac5"/></a>bb668ac5</h3>

<pre>
commit bb668ac5262d93dc9f3460fbda1f90cd4be57170
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 8 13:24:33 2012 -0500

    Activate astrometry and get it working.
</pre>
<h3><a name="ff920be8"/></a>ff920be8</h3>

<pre>
commit ff920be8bb96b04b1280d7614a81d1db0d4317f3
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jun 25 21:36:37 2012 +0000

    Do astrometry before PSF determination, as we may use the WCS for the PSF determination or star selection.
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="0888abcd"/></a>0888abcd</h3>

<pre>
commit 0888abcdbaa85521876c37f3ddec4ca8dd8463e2
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Apr 24 15:23:45 2013 -0400

    config: Have flux.gaussian use Gaussians from shape.sdss
    
    This results in a significant speed saving, according to RHL.
</pre>
<h3><a name="4ecd18e0"/></a>4ecd18e0</h3>

<pre>
commit 4ecd18e01316b201e60e92b251a31324b8a55f1a
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed May 6 16:49:17 2015 -0400

    calibrate: disable curve of growth correction
    
    The code is not yet ready for prime time, especially on such a small
    scale as a single CCD.
</pre>
<h3><a name="5bae4e5a"/></a>5bae4e5a</h3>

<pre>
commit 5bae4e5a26d3f1932e111e5732a643979f819833
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Thu Apr 25 11:00:59 2013 -0400

    Fix critical typo in configuring algorithms
</pre>
<h3><a name="84190c46"/></a>84190c46</h3>

<pre>
commit 84190c4692bdaf905804e5ad9265e338c935d036
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 15 15:01:38 2012 -0400

    fixed miscellanous problems with last merge conflict resolution; can now run LSST sim data as long as we don't do snapCombine
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="02df497d"/></a>02df497d</h3>

<pre>
commit 02df497d06a29888edaa0cdbaae72b27c16cc7ef
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Aug 20 15:27:41 2014 -0400

    Use measurement subtask to determine tableVersion in CalibrateTask.
    
    Instead of passing the tableVersion from ProcessImageTask to CalibrateTask,
    CalibrateTask now looks at its own measurement task to determine which
    tableVersion to use.  Both tasks now also explicitly require that the tableVersions
    of their measurement subtasks are the same.  I believe this was de-facto required
    before.
</pre>
<h3><a name="e19091f6"/></a>e19091f6</h3>

<pre>
commit e19091f62bb4d844463c8a8f3f3d4dc35360319d
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Sat Jun 28 22:46:21 2014 -0700

    Changed the schema management of calibrate.py to be compatible with astrometry.py
    which needs to run on both intial and measurement pass of the measurement task
</pre>
<h3><a name="696b641f"/></a>696b641f</h3>

<pre>
commit 696b641f20d2bf91283a0d639727e0bb9b1a8607
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Jun 30 18:52:24 2014 -0400

    Worked on CalibrateTask documentation
</pre>
<h3><a name="e0116f17"/></a>e0116f17</h3>

<pre>
commit e0116f179ec95625b82333a1abe45c424b192bef
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Wed Mar 4 02:55:24 2015 -0800

    DM-420 removal of meas_algorithms measurement
    
    Move all measurement tests to meas_base
    Removed field named for version 0 deblender
    Remove use of tableVersion on measurement task and code tasks which used it.
</pre>
<h3><a name="db3e8e3f"/></a>db3e8e3f</h3>

<pre>
commit db3e8e3fa77ee187cd1393c609f8b96bc6727829
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Oct 2 21:58:10 2014 -0700

    Change to package path for SingleFrameMeasurement
</pre>
<h3><a name="f3a6f7f0"/></a>f3a6f7f0</h3>

<pre>
commit f3a6f7f0c69d2d57bd06c90e8b2b5aeb5f512264
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Nov 30 16:09:42 2011 -0800

    Added first cut of some tasks. Each has conversion notes that should be removed once these are fully updated.
    Assumes the pending new policy, but does not try to create the policy object for each task.
</pre>
<h3><a name="b0880d61"/></a>b0880d61</h3>

<pre>
commit b0880d615053c995989f16519267a1ea53f4839a
Merge: c35cb39 3c72440
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Sep 25 16:31:50 2012 -0400

    Merge branch 'tickets/2285'
    
    Conflicts:
    	python/lsst/pipe/tasks/calibrate.py
</pre>
<h3><a name="75be6566"/></a>75be6566</h3>

<pre>
commit 75be6566dab1d895a4e1fdb523898958a9efcd33
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jul 2 15:49:44 2014 -1000

    More work on Task docs
</pre>
<h3><a name="e4b58dbb"/></a>e4b58dbb</h3>

<pre>
commit e4b58dbb4967431937be36b7b908c785617f0b52
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Mar 5 18:10:51 2015 -0800

    Reverted matchList->matches and run signature for astrom and photom
</pre>
<h3><a name="7484a32c"/></a>7484a32c</h3>

<pre>
commit 7484a32c17965aadb73153b72bec0812248314bf
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Jun 26 17:36:07 2014 -0700

    Use schemaMapper to create second of two calibrate catalogs.
</pre>
<h3><a name="3132b1de"/></a>3132b1de</h3>

<pre>
commit 3132b1deec56c5e271c2d0c0efa50c34a8c0dabe
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Tue Jun 24 14:44:56 2014 -0500

    Change calibrate.run to add comments and remove debugging code
</pre>
<h3><a name="da979ae2"/></a>da979ae2</h3>

<pre>
commit da979ae2a02ff05bf4c50520ef84d47a08f56796
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Mon Jun 30 21:35:20 2014 -0400

    minor doxy fixes
</pre>
<h3><a name="b0aa8088"/></a>b0aa8088</h3>

<pre>
commit b0aa8088f7f5d0fc0703a345c6706c41ed2daebd
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Jul 1 16:40:40 2014 -1000

    Don't require a Wcs in the input exposure just to get the pixel scale
</pre>
<h3><a name="b6658aa8"/></a>b6658aa8</h3>

<pre>
commit b6658aa8c7154f16ca6e969041ecbcb272ab1dfb
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 16 13:43:52 2015 -0700

    Modify CalibrateTask to use the older ANet astrometry task by default
</pre>
<h3><a name="e269ca47"/></a>e269ca47</h3>

<pre>
commit e269ca47a3789f5864b3dd81ff1bec9fadeaeb65
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Feb 27 19:04:16 2012 -0500

    rewrote calibration tasks with schema/table stuff
</pre>
<h3><a name="01027954"/></a>01027954</h3>

<pre>
commit 01027954d3005bd77e18101b95b875fc5916eb3b
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu May 10 16:58:57 2012 -0400

    make source IDs globally unique when first assigned; only tested with lsstSim, but should work for sdss too
</pre>
<h3><a name="c21c1dd9"/></a>c21c1dd9</h3>

<pre>
commit c21c1dd97fd87fe96119b18b574b230950174205
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Aug 27 15:29:41 2012 -0400

    Do an initial pass of astrometry before determining the PSF.
</pre>
<h3><a name="f8af68d3"/></a>f8af68d3</h3>

<pre>
commit f8af68d3ee3af11cecc0711b49de3dcbf721d78c
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Aug 27 15:37:33 2012 -0400

    Pass matches to MeasurePsf subtask so it can pass them to Star Selector.
</pre>
<h3><a name="43df1994"/></a>43df1994</h3>

<pre>
commit 43df1994c7dac5ac264585c32f1a2812928d59d5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Apr 9 18:59:59 2013 -0400

    More fixes for ProcessCoadd so it works when there's a valid input PSF.
</pre>
<h3><a name="3e137717"/></a>3e137717</h3>

<pre>
commit 3e137717e46b83936867eab5a1926c0bbea9c313
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Oct 3 15:18:06 2012 -0700

    Response to review, including experimental mixin classes
</pre>
<h3><a name="67e144b3"/></a>67e144b3</h3>

<pre>
commit 67e144b392bd0ee92d2515bc8fdc0ab546a71dbc
Author: Russell Owen <rowen@uw.edu>
Date:   Fri May 22 11:37:02 2015 -0700

    Move PhotoCalTask and Colorterm class here from meas_astrom
    
    In addition to those classes I moved:
    - The one photoCal example
    - The unit tests
    
    I also copied some test data. It's not a lot of data and I feel much more comfortable
    with a local copy that we can rely on, instead of using data from a different package
    that might change without warning.
    
    Remove unused andConfig files and remove a commented-out line from one
</pre>
<h3><a name="5fb621f2"/></a>5fb621f2</h3>

<pre>
commit 5fb621f219eea7f80bd109cecea0dafcdf4a0edb
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Feb 25 16:00:37 2015 -0800

    Initial pass at moving using meas_astrom.AstrometryTask as the default astrometry task
    
    Restore a needed config field in processCoadd
</pre>
<h3><a name="072a7fe8"/></a>072a7fe8</h3>

<pre>
commit 072a7fe83445a432159abf4a0cfd4a4f3d64c3b2
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Fri Oct 3 11:43:59 2014 -0700

    Change to run initialMeasurement and measurement unconditionally, regardless of config.
    
    Add comments
</pre>
<h3><a name="4f2984d1"/></a>4f2984d1</h3>

<pre>
commit 4f2984d1056e419ca5bc14ae7ed351c5b6e9dae6
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Thu Sep 25 03:07:12 2014 -0500

    DM-1071  Change default measurement task to meas_base
</pre>
<h3><a name="7e6427f7"/></a>7e6427f7</h3>

<pre>
commit 7e6427f786afd7ff0ec5f6873d8b50bba9c16ce7
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Mon Aug 18 19:42:15 2014 -0500

    Use the schema object to get/set the tableVersion
</pre>
<h3><a name="e7ea683d"/></a>e7ea683d</h3>

<pre>
commit e7ea683d5c3d957fec4c42be6716bffbd809bd95
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Sep 19 16:31:19 2012 -0400

    switch to newer log syntax in all tasks
</pre>
<h3><a name="c351575f"/></a>c351575f</h3>

<pre>
commit c351575fce98a9302d3a06559a25ce6ceee7d388
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Dec 20 17:17:03 2011 -0800

    Updated more code for prototype Config. More to be done.
</pre>
<h3><a name="79013ddb"/></a>79013ddb</h3>

<pre>
commit 79013ddbdef8baa02cf0f8995811d92cc97266b1
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Tue Jun 24 08:08:38 2014 -0700

    Divided the SourceCatalog for calibrate into two pieces, and reassembled it at the end of run(), so prefix not required for measurement.
</pre>
<h3><a name="51ee536b"/></a>51ee536b</h3>

<pre>
commit 51ee536be9a3f8f516ec88ebc0c954408ab94a74
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 1 12:18:07 2012 -0500

    fix typos and incorrect variable names; can now run to completion
</pre>
<h3><a name="f644224a"/></a>f644224a</h3>

<pre>
commit f644224afa7ddf78da6f21a55e89ea9d386d2dda
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jul 16 13:34:12 2014 -0400

    Follow REO's hints/suggestions
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/assembleCoadd.py"/></a>python/lsst/pipe/tasks/assembleCoadd.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#dd2c2d20">dd2c2d20</a> - #!/usr/bin/env python</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#c87f6fe5">c87f6fe5</a> + from __future__ import division, absolute_import</div>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import numpy
                import lsst.pex.config as pexConfig
                import lsst.afw.geom as afwGeom
                import lsst.afw.image as afwImage
                import lsst.afw.math as afwMath
                import lsst.coadd.utils as coaddUtils
                import lsst.pipe.base as pipeBase
                import lsst.meas.algorithms as measAlg
                from .coaddBase import CoaddBaseTask, SelectDataIdContainer
                from .interpImage import InterpImageTask
                from .matchBackgrounds import MatchBackgroundsTask
                from .scaleZeroPoint import ScaleZeroPointTask
                from .coaddHelpers import groupPatchExposures, getGroupDataRef
                
                __all__ = ["AssembleCoaddTask"]
                
                class AssembleCoaddConfig(CoaddBaseTask.ConfigClass):
                    subregionSize = pexConfig.ListField(
                        dtype = int,
                        doc = "Width, height of stack subregion size; " \
                              "make small enough that a full stack of images will fit into memory at once.",
                        length = 2,
                        default = (2000, 2000),
                    )
                    doSigmaClip = pexConfig.Field(
                        dtype = bool,
                        doc = "Perform sigma clipped outlier rejection? If False then compute a simple mean.",
                        default = True,
                    )
                    sigmaClip = pexConfig.Field(
                        dtype = float,
                        doc = "Sigma for outlier rejection; ignored if doSigmaClip false.",
                        default = 3.0,
                    )
                    clipIter = pexConfig.Field(
                        dtype = int,
                        doc = "Number of iterations of outlier rejection; ignored if doSigmaClip false.",
                        default = 2,
                    )
                    scaleZeroPoint = pexConfig.ConfigurableField(
                        target = ScaleZeroPointTask,
                        doc = "Task to adjust the photometric zero point of the coadd temp exposures",
                    )
                    doInterp = pexConfig.Field(
                        doc = "Interpolate over NaN pixels? Also extrapolate, if necessary, but the results are ugly.",
                        dtype = bool,
                        default = True,
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#6c01b654">6c01b654</a> -     interpFwhm = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#03d0c8d6">03d0c8d6</a> -         doc = "FWHM of PSF used for interpolation (arcsec)",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#6c01b654">6c01b654</a> -         dtype = float,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#6c01b654">6c01b654</a> -         default = 1.5,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#6c01b654">6c01b654</a> -     )</div>
                    interpImage = pexConfig.ConfigurableField(
                        target = InterpImageTask,
                        doc = "Task to interpolate (and extrapolate) over NaN pixels",
                    )
                    matchBackgrounds = pexConfig.ConfigurableField(
                        target = MatchBackgroundsTask,
                        doc = "Task to match backgrounds",
                    )
                    maxMatchResidualRatio = pexConfig.Field(
                        doc = "Maximum ratio of the mean squared error of the background matching model to the variance " \
                        "of the difference in backgrounds",
                        dtype = float,
                        default = 1.1
                    )
                    maxMatchResidualRMS = pexConfig.Field(
                        doc = "Maximum RMS of residuals of the background offset fit in matchBackgrounds.",
                        dtype = float,
                        default = 1.0
                    )
                    doWrite = pexConfig.Field(
                        doc = "Persist coadd?",
                        dtype = bool,
                        default = True,
                    )
                    doMatchBackgrounds = pexConfig.Field(
                        doc = "Match backgrounds of coadd temp exposures before coadding them? " \
                        "If False, the coadd temp expsosures must already have been background subtracted or matched",
                        dtype = bool,
                        default = True,
                    )
                    autoReference = pexConfig.Field(
                        doc = "Automatically select the coadd temp exposure to use as a reference for background matching? " \
                              "Ignored if doMatchBackgrounds false. " \
                              "If False you must specify the reference temp exposure as the data Id",
                        dtype = bool,
                        default = True,
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#7ded3af1">7ded3af1</a> -     maskPropagationThresholds = pexConfig.DictField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#a55e28a9">a55e28a9</a> +     badMaskPlanes = pexConfig.ListField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#7ded3af1">7ded3af1</a> -         keytype = str,</div>
              ?         ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#a55e28a9">a55e28a9</a> +         dtype = str,</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#a55e28a9">a55e28a9</a> +         doc = "Mask planes that, if set, the associated pixel should not be included in the coaddTempExp.",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#a55e28a9">a55e28a9</a> +         default = ("EDGE",),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#7ded3af1">7ded3af1</a> -         itemtype = float,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#7ded3af1">7ded3af1</a> -         doc = ("Threshold (in fractional weight) of rejection at which we propagate a mask plane to "</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#7ded3af1">7ded3af1</a> -                "the coadd; that is, we set the mask bit on the coadd if the fraction the rejected frames "</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#7ded3af1">7ded3af1</a> -                "would have contributed exceeds this value."),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#7ded3af1">7ded3af1</a> -         default = {"SAT": 0.1},</div>
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#0939518e">0939518e</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#2bdda4de">2bdda4de</a> -     def setDefaults(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#2bdda4de">2bdda4de</a> -         super(AssembleCoaddConfig, self).setDefaults()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#2bdda4de">2bdda4de</a> -         self.badMaskPlanes = ["NO_DATA", "BAD", "CR",]</div>
                
                
                class AssembleCoaddTask(CoaddBaseTask):
                    """Assemble a coadd from a set of coaddTempExp
                    """
                    ConfigClass = AssembleCoaddConfig
                    _DefaultName = "assembleCoadd"
                
                    def __init__(self, *args, **kwargs):
                        CoaddBaseTask.__init__(self, *args, **kwargs)
                        self.makeSubtask("interpImage")
                        self.makeSubtask("matchBackgrounds")
                        self.makeSubtask("scaleZeroPoint")
                
                    @pipeBase.timeMethod
                    def run(self, dataRef, selectDataList=[]):
                        """Assemble a coadd from a set of coaddTempExp
                
                        The coadd is computed as a mean with optional outlier rejection.
                
                        assembleCoaddTask only works on the dataset type 'coaddTempExp', which are 'coadd temp exposures'.
                        Each coaddTempExp is the size of a patch and contains data for one run, visit or
                        (for a non-mosaic camera it will contain data for a single exposure).
                
                        coaddTempExps, by default, will have backgrounds in them and will require
                        config.doMatchBackgrounds = True. However, makeCoaddTempExp.py can optionally create background-
                        subtracted coaddTempExps which can be coadded here by setting
                        config.doMatchBackgrounds = False.
                
                        @param dataRef: data reference for a coadd patch (of dataType 'Coadd') OR a data reference
                        for a coadd temp exposure (of dataType 'Coadd_tempExp') which serves as the reference visit
                        if config.doMatchBackgrounds true and config.autoReference false)
                        If supplying a coadd patch: Must include keys "tract", "patch",
                            plus the camera-specific filter key (e.g. "filter")
                        Used to access the following data products (depending on the config):
                        - [in] self.config.coaddName + "Coadd_tempExp"
                        - [out] self.config.coaddName + "Coadd"
                
                        @return: a pipeBase.Struct with fields:
                        - coaddExposure: coadd exposure
                        """
                        skyInfo = self.getSkyInfo(dataRef)
                        calExpRefList = self.selectExposures(dataRef, skyInfo, selectDataList=selectDataList)
                        if len(calExpRefList) == 0:
                            self.log.warn("No exposures to coadd")
                            return
                        self.log.info("Coadding %d exposures" % len(calExpRefList))
                
                        butler = dataRef.getButler()
                        groupData = groupPatchExposures(dataRef, calExpRefList, self.getCoaddDatasetName(),
                                                        self.getTempExpDatasetName())
                        tempExpRefList = [getGroupDataRef(butler, self.getTempExpDatasetName(), g, groupData.keys) for
                                          g in groupData.groups.keys()]
                        inputData = self.prepareInputs(tempExpRefList)
                        tempExpRefList = inputData.tempExpRefList
                        self.log.info("Found %d %s" % (len(inputData.tempExpRefList), self.getTempExpDatasetName()))
                        if len(inputData.tempExpRefList) == 0:
                            self.log.warn("No coadd temporary exposures found")
                            return
                        if self.config.doMatchBackgrounds:
                            refImageScaler = self.getBackgroundReferenceScaler(dataRef)
                            inputData = self.backgroundMatching(inputData, dataRef, refImageScaler)
                            if len(inputData.tempExpRefList) == 0:
                                self.log.warn("No valid background models")
                                return
                
                        coaddExp = self.assemble(skyInfo, inputData.tempExpRefList, inputData.imageScalerList,
                                                 inputData.weightList,
                                                 inputData.backgroundInfoList if self.config.doMatchBackgrounds else None)
                        if self.config.doMatchBackgrounds:
                            self.addBackgroundMatchingMetadata(coaddExp, inputData.tempExpRefList,
                                                               inputData.backgroundInfoList)
                
                        if self.config.doInterp:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#447ecba1">447ecba1</a> -             self.interpImage.interpolateOnePlane(coaddExp.getMaskedImage(), "NO_DATA", psf=coaddExp.getPsf())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#58f5f207">58f5f207</a> +             self.interpImage.interpolateOnePlane(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#58f5f207">58f5f207</a> +                 maskedImage = coaddExp.getMaskedImage(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#58f5f207">58f5f207</a> +                 planeName = "EDGE",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#58f5f207">58f5f207</a> +             )</div>
                
                        if self.config.doWrite:
                            self.writeCoaddOutput(dataRef, coaddExp)
                
                        return pipeBase.Struct(coaddExposure=coaddExp)
                
                
                    def getBackgroundReferenceScaler(self, dataRef):
                        """Construct an image scaler for the background reference frame
                
                        If there is no reference frame ('autoReference'), then this is a no-op
                        and None is returned
                
                        @param dataRef: Data reference for the background reference frame, or None
                        @return image scaler, or None
                        """
                        if self.config.autoReference:
                            return None
                
                        # We've been given the data reference
                        dataset = self.getTempExpDatasetName()
                        if not dataRef.datasetExists(dataset):
                            raise RuntimeError("Could not find reference exposure %s %s." % (dataset, dataRef.dataId))
                
                        refExposure = dataRef.get(self.getTempExpDatasetName(), immediate=True)
                        refImageScaler = self.scaleZeroPoint.computeImageScaler(
                            exposure = refExposure,
                            dataRef = dataRef,
                            )
                        return refImageScaler
                
                
                    def prepareInputs(self, refList):
                        """Prepare the input warps for coaddition
                
                        This involves measuring weights and constructing image scalers
                        for each of the inputs.
                
                        @param refList: List of data references to tempExp
                        @return Struct:
                        - tempExprefList: List of data references to tempExp
                        - weightList: List of weightings
                        - imageScalerList: List of image scalers
                        """
                        statsCtrl = afwMath.StatisticsControl()
                        statsCtrl.setNumSigmaClip(self.config.sigmaClip)
                        statsCtrl.setNumIter(self.config.clipIter)
                        statsCtrl.setAndMask(self.getBadPixelMask())
                        statsCtrl.setNanSafe(True)
                
                        # compute tempExpRefList: a list of tempExpRef that actually exist
                        # and weightList: a list of the weight of the associated coadd tempExp
                        # and imageScalerList: a list of scale factors for the associated coadd tempExp
                        tempExpRefList = []
                        weightList = []
                        imageScalerList = []
                        tempExpName = self.getTempExpDatasetName()
                        for tempExpRef in refList:
                            if not tempExpRef.datasetExists(tempExpName):
                                self.log.warn("Could not find %s %s; skipping it" % (tempExpName, tempExpRef.dataId))
                                continue
                
                            tempExp = tempExpRef.get(tempExpName, immediate=True)
                            maskedImage = tempExp.getMaskedImage()
                            imageScaler = self.scaleZeroPoint.computeImageScaler(
                                exposure = tempExp,
                                dataRef = tempExpRef,
                            )
                            try:
                                imageScaler.scaleMaskedImage(maskedImage)
                            except Exception, e:
                                self.log.warn("Scaling failed for %s (skipping it): %s" % (tempExpRef.dataId, e))
                                continue
                            statObj = afwMath.makeStatistics(maskedImage.getVariance(), maskedImage.getMask(),
                                afwMath.MEANCLIP, statsCtrl)
                            meanVar, meanVarErr = statObj.getResult(afwMath.MEANCLIP);
                            weight = 1.0 / float(meanVar)
                            if not numpy.isfinite(weight):
                                self.log.warn("Non-finite weight for %s: skipping" % (tempExpRef.dataId,))
                                continue
                            self.log.info("Weight of %s %s = %0.3f" % (tempExpName, tempExpRef.dataId, weight))
                
                            del maskedImage
                            del tempExp
                
                            tempExpRefList.append(tempExpRef)
                            weightList.append(weight)
                            imageScalerList.append(imageScaler)
                
                        return pipeBase.Struct(tempExpRefList=tempExpRefList, weightList=weightList,
                                               imageScalerList=imageScalerList)
                
                
                    def backgroundMatching(self, inputData, refExpDataRef=None, refImageScaler=None):
                        """Perform background matching on the prepared inputs
                
                        If no reference is provided, the background matcher will select one.
                
                        This method returns a new inputData Struct that can replace the original.
                
                        @param inputData: Struct from prepareInputs() with tempExpRefList, weightList, imageScalerList
                        @param refExpDataRef: Data reference for background reference tempExp, or None
                        @param refImageScaler: Image scaler for background reference tempExp, or None
                        @return Struct:
                        - tempExprefList: List of data references to tempExp
                        - weightList: List of weightings
                        - imageScalerList: List of image scalers
                        - backgroundInfoList: result from background matching
                        """
                        try:
                            backgroundInfoList = self.matchBackgrounds.run(
                                expRefList = inputData.tempExpRefList,
                                imageScalerList = inputData.imageScalerList,
                                refExpDataRef = refExpDataRef if not self.config.autoReference else None,
                                refImageScaler = refImageScaler,
                                expDatasetType = self.getTempExpDatasetName(),
                            ).backgroundInfoList
                        except Exception, e:
                            self.log.fatal("Cannot match backgrounds: %s" % (e))
                            raise pipeBase.TaskError("Background matching failed.")
                
                        newWeightList = []
                        newTempExpRefList = []
                        newBackgroundStructList = []
                        newScaleList = []
                        # the number of good backgrounds may be < than len(tempExpList)
                        # sync these up and correct the weights
                        for tempExpRef, bgInfo, scaler, weight in zip(inputData.tempExpRefList, backgroundInfoList,
                                                                      inputData.imageScalerList, inputData.weightList):
                            if not bgInfo.isReference:
                                # skip exposure if it has no backgroundModel
                                # or if fit was bad
                                if (bgInfo.backgroundModel is None):
                                    self.log.info("No background offset model available for %s: skipping"%(
                                        tempExpRef.dataId))
                                    continue
                                try:
                                    varianceRatio =  bgInfo.matchedMSE / bgInfo.diffImVar
                                except Exception, e:
                                    self.log.info("MSE/Var ratio not calculable (%s) for %s: skipping" %
                                                  (e, tempExpRef.dataId,))
                                    continue
                                if not numpy.isfinite(varianceRatio):
                                    self.log.info("MSE/Var ratio not finite (%.2f / %.2f) for %s: skipping" %
                                                  (bgInfo.matchedMSE, bgInfo.diffImVar,
                                                   tempExpRef.dataId,))
                                    continue
                                elif (varianceRatio > self.config.maxMatchResidualRatio):
                                    self.log.info("Bad fit. MSE/Var ratio %.2f > %.2f for %s: skipping" % (
                                            varianceRatio, self.config.maxMatchResidualRatio, tempExpRef.dataId,))
                                    continue
                                elif ( bgInfo.fitRMS > self.config.maxMatchResidualRMS):
                                    self.log.info("Bad fit. RMS %.2f > %.2f for %s: skipping" % (
                                            bgInfo.fitRMS, self.config.maxMatchResidualRMS, tempExpRef.dataId,))
                                    continue
                            newWeightList.append(1 / (1 / weight + bgInfo.fitRMS**2))
                            newTempExpRefList.append(tempExpRef)
                            newBackgroundStructList.append(bgInfo)
                            newScaleList.append(scaler)
                
                        return pipeBase.Struct(tempExpRefList=newTempExpRefList, weightList=newWeightList,
                                               imageScalerList=newScaleList, backgroundInfoList=newBackgroundStructList)
                
                    def assemble(self, skyInfo, tempExpRefList, imageScalerList, weightList, bgInfoList=None):
                        """Assemble a coadd from input warps
                
                        The assembly is performed over small areas on the image at a time, to
                        conserve memory usage.
                
                        @param skyInfo: Patch geometry information, from getSkyInfo
                        @param tempExpRefList: List of data references to tempExp
                        @param imageScalerList: List of image scalers
                        @param weightList: List of weights
                        @param bgInfoList: List of background data from background matching
                        @return coadded exposure
                        """
                        tempExpName = self.getTempExpDatasetName()
                        self.log.info("Assembling %s %s" % (len(tempExpRefList), tempExpName))
                
                        statsCtrl = afwMath.StatisticsControl()
                        statsCtrl.setNumSigmaClip(self.config.sigmaClip)
                        statsCtrl.setNumIter(self.config.clipIter)
                        statsCtrl.setAndMask(self.getBadPixelMask())
                        statsCtrl.setNanSafe(True)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#944f495f">944f495f</a> -         statsCtrl.setWeighted(True)</div>
                        statsCtrl.setCalcErrorFromInputVariance(True)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#7ded3af1">7ded3af1</a> -         for plane, threshold in self.config.maskPropagationThresholds.items():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#7ded3af1">7ded3af1</a> -             bit = afwImage.MaskU.getMaskPlane(plane)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#7ded3af1">7ded3af1</a> -             statsCtrl.setMaskPropagationThreshold(bit, threshold)</div>
                
                        if self.config.doSigmaClip:
                            statsFlags = afwMath.MEANCLIP
                        else:
                            statsFlags = afwMath.MEAN
                
                        if bgInfoList is None:
                            bgInfoList = [None]*len(tempExpRefList)
                
                        coaddExposure = afwImage.ExposureF(skyInfo.bbox, skyInfo.wcs)
                        coaddExposure.setCalib(self.scaleZeroPoint.getCalib())
                        coaddExposure.getInfo().setCoaddInputs(self.inputRecorder.makeCoaddInputs())
                        self.assembleMetadata(coaddExposure, tempExpRefList, weightList)
                        coaddMaskedImage = coaddExposure.getMaskedImage()
                        subregionSizeArr = self.config.subregionSize
                        subregionSize = afwGeom.Extent2I(subregionSizeArr[0], subregionSizeArr[1])
                        for subBBox in _subBBoxIter(skyInfo.bbox, subregionSize):
                            try:
                                self.assembleSubregion(coaddExposure, subBBox, tempExpRefList, imageScalerList,
                                                       weightList, bgInfoList, statsFlags, statsCtrl)
                            except Exception, e:
                                self.log.fatal("Cannot compute coadd %s: %s" % (subBBox, e,))
                
                        coaddUtils.setCoaddEdgeBits(coaddMaskedImage.getMask(), coaddMaskedImage.getVariance())
                
                        return coaddExposure
                
                    def assembleMetadata(self, coaddExposure, tempExpRefList, weightList):
                        """Set the metadata for the coadd
                
                        This basic implementation simply sets the filter from the
                        first input.
                
                        @param coaddExposure: The target image for the coadd
                        @param tempExpRefList: List of data references to tempExp
                        @param weightList: List of weights
                        """
                        tempExpName = self.getTempExpDatasetName()
                        # We load a single pixel of each coaddTempExp, because we just want to get at the metadata
                        # (and we need more than just the PropertySet that contains the header).  See #2777.
                        bbox = afwGeom.Box2I(afwGeom.Point2I(0,0), afwGeom.Extent2I(1,1))
                        first = True
                        coaddInputs = coaddExposure.getInfo().getCoaddInputs()
                        for tempExpRef, weight in zip(tempExpRefList, weightList):
                            tempExp = tempExpRef.get(tempExpName + "_sub", bbox=bbox, imageOrigin="LOCAL", immediate=True)
                            if first:
                                coaddExposure.setFilter(tempExp.getFilter())
                                first = False
                            self.inputRecorder.addVisitToCoadd(coaddInputs, tempExp, weight)
                        coaddInputs.visits.sort()
                        if self.config.doPsfMatch:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
440  <a href="#04cda760">04cda760</a> -             psf = self.config.modelPsf.apply(coaddExposure.getWcs())</div>
              ?                                              ----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#c87f6fe5">c87f6fe5</a> +             psf = self.config.modelPsf.apply()</div>
                        else:
                            psf = measAlg.CoaddPsf(coaddInputs.ccds, coaddExposure.getWcs())
                        coaddExposure.setPsf(psf)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
444  <a href="#7656d164">7656d164</a> -         apCorrMap = measAlg.makeCoaddApCorrMap(coaddInputs.ccds, coaddExposure.getBBox(afwImage.PARENT),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
445  <a href="#7656d164">7656d164</a> -                                                coaddExposure.getWcs())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
446  <a href="#7656d164">7656d164</a> -         coaddExposure.getInfo().setApCorrMap(apCorrMap)</div>
                
                    def assembleSubregion(self, coaddExposure, bbox, tempExpRefList, imageScalerList, weightList,
                                          bgInfoList, statsFlags, statsCtrl):
                        """Assemble the coadd for a sub-region
                
                        @param coaddExposure: The target image for the coadd
                        @param bbox: Sub-region to coadd
                        @param tempExpRefList: List of data reference to tempExp
                        @param imageScalerList: List of image scalers
                        @param weightList: List of weights
                        @param bgInfoList: List of background data from background matching
                        @param statsFlags: Statistic for coadd
                        @param statsCtrl: Statistics control object for coadd
                        """
                        self.log.info("Computing coadd over %s" % bbox)
                        tempExpName = self.getTempExpDatasetName()
                        coaddMaskedImage = coaddExposure.getMaskedImage()
                        coaddView = afwImage.MaskedImageF(coaddMaskedImage, bbox, afwImage.PARENT, False)
                        maskedImageList = afwImage.vectorMaskedImageF() # [] is rejected by afwMath.statisticsStack
                        for tempExpRef, imageScaler, bgInfo in zip(tempExpRefList, imageScalerList, bgInfoList):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
467  <a href="#a55e28a9">a55e28a9</a> -             exposure = tempExpRef.get(tempExpName + "_sub", bbox=bbox, imageOrigin="PARENT")</div>
              ?                                                                      ----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
451  <a href="#35e3701f">35e3701f</a> +             exposure = tempExpRef.get(tempExpName + "_sub", bbox=bbox)</div>
                            maskedImage = exposure.getMaskedImage()
                            imageScaler.scaleMaskedImage(maskedImage)
                
                            if self.config.doMatchBackgrounds and not bgInfo.isReference:
                                backgroundModel = bgInfo.backgroundModel
                                backgroundImage = backgroundModel.getImage() if \
                                    self.matchBackgrounds.config.usePolynomial else \
                                    backgroundModel.getImageF()
                                backgroundImage.setXY0(coaddMaskedImage.getXY0())
                                maskedImage += backgroundImage.Factory(backgroundImage, bbox, afwImage.PARENT, False)
                                var = maskedImage.getVariance()
                                var += (bgInfo.fitRMS)**2
                
                            maskedImageList.append(maskedImage)
                
                        with self.timer("stack"):
                            coaddSubregion = afwMath.statisticsStack(
                                maskedImageList, statsFlags, statsCtrl, weightList)
                
                        coaddView <<= coaddSubregion
                
                
                    def addBackgroundMatchingMetadata(self, coaddExposure, tempExpRefList, backgroundInfoList):
                        """Add metadata from the background matching to the coadd
                
                        @param coaddExposure: Coadd
                        @param backgroundInfoList: List of background info, results from background matching
                        """
                        self.log.info("Adding exposure information to metadata")
                        metadata = coaddExposure.getMetadata()
                        metadata.addString("CTExp_SDQA1_DESCRIPTION",
                                           "Background matching: Ratio of matchedMSE / diffImVar")
                        for ind, (tempExpRef, backgroundInfo) in enumerate(zip(tempExpRefList, backgroundInfoList)):
                            tempExpStr = '&'.join('%s=%s' % (k,v) for k,v in tempExpRef.dataId.items())
                            if backgroundInfo.isReference:
                                metadata.addString("ReferenceExp_ID", tempExpStr)
                            else:
                                metadata.addString("CTExp_ID_%d" % (ind), tempExpStr)
                                metadata.addDouble("CTExp_SDQA1_%d" % (ind),
                                                   backgroundInfo.matchedMSE/backgroundInfo.diffImVar)
                                metadata.addDouble("CTExp_SDQA2_%d" % (ind),
                                                   backgroundInfo.fitRMS)
                    @classmethod
                    def _makeArgumentParser(cls):
                        """Create an argument parser
                        """
                        parser = pipeBase.ArgumentParser(name=cls._DefaultName)
                        parser.add_id_argument("--id", cls.ConfigClass().coaddName + "Coadd_tempExp",
                                               help="data ID, e.g. --id tract=12345 patch=1,2",
                                               ContainerClass=AssembleCoaddDataIdContainer)
                        parser.add_id_argument("--selectId", "calexp", help="data ID, e.g. --selectId visit=6789 ccd=0..9",
                                               ContainerClass=SelectDataIdContainer)
                        return parser
                
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
507  <a href="#a55e28a9">a55e28a9</a> + </div>
                def _subBBoxIter(bbox, subregionSize):
                    """Iterate over subregions of a bbox
                
                    @param[in] bbox: bounding box over which to iterate: afwGeom.Box2I
                    @param[in] subregionSize: size of sub-bboxes
                
                    @return subBBox: next sub-bounding box of size subregionSize or smaller;
                        each subBBox is contained within bbox, so it may be smaller than subregionSize at the edges of bbox,
                        but it will never be empty
                    """
                    if bbox.isEmpty():
                        raise RuntimeError("bbox %s is empty" % (bbox,))
                    if subregionSize[0] < 1 or subregionSize[1] < 1:
                        raise RuntimeError("subregionSize %s must be nonzero" % (subregionSize,))
                
                    for rowShift in range(0, bbox.getHeight(), subregionSize[1]):
                        for colShift in range(0, bbox.getWidth(), subregionSize[0]):
                            subBBox = afwGeom.Box2I(bbox.getMin() + afwGeom.Extent2I(colShift, rowShift), subregionSize)
                            subBBox.clip(bbox)
                            if subBBox.isEmpty():
                                raise RuntimeError("Bug: empty bbox! bbox=%s, subregionSize=%s, colShift=%s, rowShift=%s" % \
                                    (bbox, subregionSize, colShift, rowShift))
                            yield subBBox
                
                
                
                class AssembleCoaddDataIdContainer(pipeBase.DataIdContainer):
                    """A version of lsst.pipe.base.DataIdContainer specialized for assembleCoadd.
                    """
                    def makeDataRefList(self, namespace):
                        """Make self.refList from self.idList.
                
                           Interpret the config.doMatchBackgrounds, config.autoReference,
                           and whether a visit/run supplied.
                           If a visit/run is supplied, config.autoReference is automatically set to False.
                           if config.doMatchBackgrounds == false, then a visit/run will be ignored if accidentally supplied.
                
                        """
                        keysCoadd = namespace.butler.getKeys(datasetType=namespace.config.coaddName + "Coadd",
                                                             level=self.level)
                        keysCoaddTempExp = namespace.butler.getKeys(datasetType=namespace.config.coaddName + "Coadd_tempExp",
                                                                    level=self.level)
                
                        if namespace.config.doMatchBackgrounds:
                            if namespace.config.autoReference: #matcher will pick it's own reference image
                                datasetType = namespace.config.coaddName + "Coadd"
                                validKeys = keysCoadd
                            else:
                                datasetType = namespace.config.coaddName + "Coadd_tempExp"
                                validKeys = keysCoaddTempExp
                        else: #bkg subtracted coadd
                            datasetType = namespace.config.coaddName + "Coadd"
                            validKeys = keysCoadd
                
                        for dataId in self.idList:
                            # tract and patch are required
                            for key in validKeys:
                                if key not in dataId:
                                    raise RuntimeError("--id must include " + key)
                
                            for key in dataId: # check if users supplied visit/run
                                if (key not in keysCoadd) and (key in keysCoaddTempExp):  #user supplied a visit/run
                                    if namespace.config.autoReference:
                                        # user probably meant: autoReference = False
                                        namespace.config.autoReference = False
                                        datasetType = namespace.config.coaddName + "Coadd_tempExp"
                                        print "Switching config.autoReference to False; applies only to background Matching."
                                        break
                
                            dataRef = namespace.butler.dataRef(
                                datasetType = datasetType,
                                dataId = dataId,
                            )
                            self.refList.append(dataRef)
                
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="dd2c2d20"/></a>dd2c2d20</h3>

<pre>
commit dd2c2d20ab69790ec70b0b26ddfbfcd3796aa0bf
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Sep 25 16:50:54 2012 -0700

    First cut
</pre>
<h3><a name="944f495f"/></a>944f495f</h3>

<pre>
commit 944f495fd6b7b7f34edb1ae37d87b817c36de581
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Thu Feb 26 11:46:08 2015 +0900

    Fix a weighting bug in assembleCoadd.py.
</pre>
<h3><a name="7ded3af1"/></a>7ded3af1</h3>

<pre>
commit 7ded3af1a523c20f5c097dba3594e29f66dad31e
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu May 1 12:59:19 2014 -0400

    Propagate mask bits to coadd when rejection exceeds a configurable threshold.
</pre>
<h3><a name="6c01b654"/></a>6c01b654</h3>

<pre>
commit 6c01b654e2b428a5a1068c6e8270038acda8d71e
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Oct 4 14:41:13 2012 -0500

    Fix bugs in the new coadd tasks.
</pre>
<h3><a name="0939518e"/></a>0939518e</h3>

<pre>
commit 0939518eb8152dcef1b9256243c1d5bf4ab99291
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Oct 25 14:26:53 2012 -0500

    big commit. Changed arg parser to taje ref visit, matchBackgrounds output
</pre>
<h3><a name="04cda760"/></a>04cda760</h3>

<pre>
commit 04cda7606884f75e34fa5a864bf7782b31d5cd31
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Mar 29 17:41:35 2013 -0400

    Install PSFs in final coadd Exposure.
</pre>
<h3><a name="03d0c8d6"/></a>03d0c8d6</h3>

<pre>
commit 03d0c8d675bc036a5d40156143555cad1429e27f
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Mar 27 17:28:05 2013 -0400

    Clean up config member docs.
    
    Minor changes in response to review of #2590.
</pre>
<h3><a name="447ecba1"/></a>447ecba1</h3>

<pre>
commit 447ecba1879723e25c1a4922a629599088f45f61
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Aug 4 16:14:08 2014 -0600

    Fix failing test by adapting to new interpolateImage kwarg name
</pre>
<h3><a name="2bdda4de"/></a>2bdda4de</h3>

<pre>
commit 2bdda4de55564724aeb5d179ddaed1b2fc1b6ebd
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Jun 6 16:56:00 2014 -0400

    assembleCoadd: set good defaults for badMaskPlanes
    
    Also, badMaskPlanes is provided by the parent class (also used
    by makeCoaddTempExp), so we just need to setDefaults().
</pre>
<h3><a name="7656d164"/></a>7656d164</h3>

<pre>
commit 7656d164d29e9e50b7ec87c343a33e97337e133a
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Jul 25 15:14:57 2014 -0400

    assembleCoadd: set coadd aperture correction
    
    Using new makeCoaddApCorrMap function.
</pre>
<h3><a name="a55e28a9"/></a>a55e28a9</h3>

<pre>
commit a55e28a9cdfa2163b60c6b46935fa5bb86f65781
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 20 17:46:33 2013 +0900

    Extensive refactoring of coadd tasks (#2590)
    
    Long methods were divided into smaller parts for ease of subclass+override.
    Common code was consolidated.  Database-specific code was labeled as such.
    Some parts that might be generally useful (coaddHelpers) were pulled out into
    their own package.
    
    Tested bin scripts of coadd.py, makeCoaddTempExp.py and assembleCoadd.py on
    Suprime-Cam data.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="c87f6fe5"/></a>c87f6fe5</h3>

<pre>
commit c87f6fe514160e604e1c64c97b4160bfa743b11c
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 29 11:21:47 2014 -0700

    Cleaned up the code based on final decisions on units (pixels) and FWHM vs sigma (FWHM).
</pre>
<h3><a name="a55e28a9"/></a>a55e28a9</h3>

<pre>
commit a55e28a9cdfa2163b60c6b46935fa5bb86f65781
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 20 17:46:33 2013 +0900

    Extensive refactoring of coadd tasks (#2590)
    
    Long methods were divided into smaller parts for ease of subclass+override.
    Common code was consolidated.  Database-specific code was labeled as such.
    Some parts that might be generally useful (coaddHelpers) were pulled out into
    their own package.
    
    Tested bin scripts of coadd.py, makeCoaddTempExp.py and assembleCoadd.py on
    Suprime-Cam data.
</pre>
<h3><a name="58f5f207"/></a>58f5f207</h3>

<pre>
commit 58f5f207d61b72d4f3a2788072502b84abe087a9
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Feb 20 18:01:32 2014 -0800

    Use analyticPsfRegistry in some existing code.
</pre>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/mocks/mockCoadd.py"/></a>python/lsst/pipe/tasks/mocks/mockCoadd.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import lsst.afw.image
                import lsst.afw.geom
                import lsst.pex.config
                import lsst.afw.table
                import lsst.pipe.base
                from lsst.pipe.tasks.makeSkyMap import MakeSkyMapTask
                from lsst.pipe.tasks.makeCoaddTempExp import MakeCoaddTempExpTask
                from lsst.pipe.tasks.assembleCoadd import AssembleCoaddTask
                from .mockObject import MockObjectTask
                from .mockObservation import MockObservationTask
                from .mockSelect import MockSelectImagesTask
                
                class MockCoaddConfig(lsst.pex.config.Config):
                    makeSkyMap = lsst.pex.config.ConfigurableField(
                        doc = "SkyMap builder subtask",
                        target = MakeSkyMapTask
                        )
                    mockObject = lsst.pex.config.ConfigurableField(
                        doc = "Subtask that generates and draws the objects/sources in the mock images",
                        target = MockObjectTask
                        )
                    mockObservation = lsst.pex.config.ConfigurableField(
                        doc = "Subtask that generates the Wcs, Psf, Calib, etc. of mock images",
                        target = MockObservationTask
                        )
                    coaddName = lsst.pex.config.Field(
                        doc = "Coadd name used as a prefix for other datasets",
                        dtype = str, 
                        optional = False,
                        default = "deep"
                        )
                    nObservations = lsst.pex.config.Field(
                        doc = "Number of mock observations to generate.",
                        dtype = int,
                        optional = False,
                        default = 12
                        )
                    edgeBuffer = lsst.pex.config.Field(
                        doc = ("Number of pixels by which to grow object bounding boxes when determining whether they land "
                               " completely on a generated image"),
                        dtype = int,
                        optional = False,
                        default = 5
                        )
                
                    def setupSkyMapPatches(self, nPatches=2, patchSize=400, pixelScale = 0.2*lsst.afw.geom.arcseconds):
                        """
                        Set the nested [discrete] skymap config parameters such that the full tract
                        has nPatches x nPatches patches of the given size and pixel scale.
                        """
                        self.makeSkyMap.skyMap['discrete'].patchInnerDimensions = [patchSize, patchSize]
                        self.makeSkyMap.skyMap['discrete'].pixelScale = pixelScale.asArcseconds()
                        # multiply by 0.5 because we want a half-width; subtract 0.49 to ensure that we get the right
                        # number after skyMap.TractInfo rounds up.
                        radius = (0.5 * nPatches - 0.49) * patchSize * pixelScale.asDegrees()
                        self.makeSkyMap.skyMap['discrete'].radiusList = [radius]
                
                    def setDefaults(self):
                        self.makeSkyMap.skyMap.name = 'discrete'
                        self.makeSkyMap.skyMap['discrete'].raList = [90.0]
                        self.makeSkyMap.skyMap['discrete'].decList = [0.0]
                        self.makeSkyMap.skyMap['discrete'].patchBorder = 10
                        self.makeSkyMap.skyMap['discrete'].projection = "TAN"
                        self.makeSkyMap.skyMap['discrete'].tractOverlap = 0.0
                        self.setupSkyMapPatches()
                
                class MockCoaddTask(lsst.pipe.base.CmdLineTask):
                    """MockCoaddTask is a driver task for creating mock coadds.  As opposed to more realistic
                    simulations, MockCoadd generates and uses extremely simple "toy" data that can be used to more
                    rigorously test the behavior of high-level task code because the expected results are
                    more easily predicted.  In particular, calexps are generated directly from the truth catalog,
                    and contain only zero-noise stars that are created using the same Psf, Calib, and Wcs that will
                    be attached to the mock calexp.
                
                    In addition to creating the mock calexps and truth catalogs, MockCoadd also contains driver
                    code to run the MakeSkyMap, MakeCoaddTempExp, and AssembleCoadd tasks on the mock calexps,
                    and code to directly create a mock coadd image using CoaddPsf, which can be compared to the
                    output of the regular coadd tasks to check that the coadd code and CoaddPsf are consistent.
                
                    Note that aside from MakeSkyMapTask, the coadd tasks are *not* subtasks of MockCoaddTasks,
                    and their configs are not part of MockCoaddConfig; these are created locally within
                    MockCoaddTask methods when needed, as not all coadd task config options are appropriate
                    for the mock data generated by MockCoadd.
                    """
                
                    ConfigClass = MockCoaddConfig
                
                    _DefaultName = "MockCoadd"
                
                    def __init__(self, **kwds):
                        """Construct a MockCoaddTask and the subtasks used for generating skymaps, objects,
                        and observations (i.e. calexp parameters).
                        """
                        lsst.pipe.base.CmdLineTask.__init__(self, **kwds)
                        self.makeSubtask("makeSkyMap")
                        self.makeSubtask("mockObject")
                        self.makeSubtask("mockObservation")
                        self.schema = lsst.afw.table.SimpleTable.makeMinimalSchema()
                        self.objectIdKey = self.schema.addField("objectId", type=long, doc="foreign key to truth catalog")
                        self.exposureIdKey = self.schema.addField("exposureId", type=long,
                                                                  doc="foreign key to observation catalog")
                        self.centroidInBBoxKey = self.schema.addField(
                            "centroidInBBox", type="Flag",
                            doc="set if this source's center position is inside the generated image's bbox"
                            )
                        self.partialOverlapKey = self.schema.addField(
                            "partialOverlap", type="Flag",
                            doc="set if this source was not completely inside the generated image"
                            )
                
                    def buildSkyMap(self, butler):
                        """Build the skymap for the mock dataset."""
                        return self.makeSkyMap.run(butler.dataRef(self.config.coaddName + "Coadd_skyMap")).skyMap
                
                    def buildTruthCatalog(self, butler=None, skyMap=None, tract=0):
                        """Create and save (if butler is not None) a truth catalog containing all the mock objects.
                        
                        Must be run after buildSkyMap.
                
                        Most of the work is delegated to the mockObject subtask.
                        """
                        if skyMap is None:
                            skyMap = butler.get(self.config.coaddName + "Coadd_skyMap")
                        catalog = self.mockObject.run(tractInfo=skyMap[tract])
                        if butler is not None:
                            butler.put(catalog, "truth", tract=tract)
                        return catalog
                
                    def buildObservationCatalog(self, butler=None, skyMap=None, tract=0, camera=None):
                        """Create and save (if butler is not None) an ExposureCatalog of simulated observations,
                        containing the Psfs, Wcss, Calibs, etc. of the calexps to be simulated.
                
                        Must be run after buildSkyMap.
                
                        Most of the work is delegated to the mockObservation subtask.
                        """
                        if skyMap is None:
                            skyMap = butler.get(self.config.coaddName + "Coadd_skyMap")
                        if camera is None:
                            camera = butler.get("camera")
                        catalog = self.mockObservation.run(butler=butler,
                                                           n=self.config.nObservations, camera=camera,
                                                           tractInfo=skyMap[tract])
                        if butler is not None:
                            butler.put(catalog, "observations", tract=tract)
                        return catalog
                
                    def buildInputImages(self, butler, obsCatalog=None, truthCatalog=None, tract=0):
                        """Use the truth catalog and observation catalog to create and save (if butler is not None)
                        mock calexps and an ExposureCatalog ('simsrc') that contains information about which objects
                        appear partially or fully in each exposure.
                
                        Must be run after buildTruthCatalog and buildObservationCatalog.
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#94df22ea">94df22ea</a> -         skyMap = butler.get(self.config.coaddName + "Coadd_skyMap")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#94df22ea">94df22ea</a> -         tractInfo = skyMap[tract]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#94df22ea">94df22ea</a> -         tractWcs = tractInfo.getWcs()</div>
                        if obsCatalog is None:
                            obsCatalog = butler.get("observations", tract=tract)
                        if truthCatalog is None:
                            truthCatalog = butler.get("truth", tract=tract)
                        ccdKey = obsCatalog.getSchema().find("ccd").key
                        visitKey = obsCatalog.getSchema().find("visit").key
                        simSrcCatalog = lsst.afw.table.SimpleCatalog(self.schema)
                        for obsRecord in obsCatalog:
                            ccd = obsRecord.getI(ccdKey)
                            visit = obsRecord.getI(visitKey)
                            self.log.info("Generating image for visit={visit}, ccd={ccd}".format(ccd=ccd, visit=visit))
                            exposure = lsst.afw.image.ExposureF(obsRecord.getBBox())
                            exposure.setCalib(obsRecord.getCalib())
                            exposure.setWcs(obsRecord.getWcs())
                            exposure.setPsf(obsRecord.getPsf())
                            for truthRecord in truthCatalog:
                                status = self.mockObject.drawSource(truthRecord, exposure, buffer=self.config.edgeBuffer)
                                if status:
                                    simSrcRecord = simSrcCatalog.addNew()
                                    simSrcRecord.setCoord(truthRecord.getCoord())
                                    simSrcRecord.setL(self.objectIdKey, truthRecord.getId())
                                    simSrcRecord.setL(self.exposureIdKey, obsRecord.getId())
                                    simSrcRecord.setFlag(self.centroidInBBoxKey, obsRecord.contains(truthRecord.getCoord()))
                                    simSrcRecord.setFlag(self.partialOverlapKey, status == 1)
                                    self.log.info("  added object {id}".format(id=truthRecord.getId()))
                            exposure.getMaskedImage().getVariance().set(1.0)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#54640552">54640552</a> -             #</div>
                            if butler is not None:
                                butler.put(exposure, "calexp", ccd=ccd, visit=visit)
                        if butler is not None:
                            butler.put(simSrcCatalog, "simsrc", tract=tract)
                        return simSrcCatalog
                
                    def buildAllInputs(self, butler):
                        """Convenience function that calls buildSkyMap, buildObservationCatalog, buildTruthCatalog,
                        and buildInputImages.
                        """
                        skyMap = self.buildSkyMap(butler)
                        observations = self.buildObservationCatalog(butler, skyMap=skyMap)
                        truth = self.buildTruthCatalog(butler, skyMap=skyMap)
                        simSrcCatalog = self.buildInputImages(butler, obsCatalog=observations, truthCatalog=truth)
                
                    def makeCoaddTask(self, cls):
                        """Helper function to create a Coadd task with configuration appropriate for the simulations.
                
                        MockCoaddTask does not include MakeCoaddTempExpTask or AssembleCoaddTask as subtasks, because
                        we want explicit control over their configs, rather than leaving this up to the user.
                        However, we have to install our own SelectImages task for both of these, so it made sense
                        to have a single method that would create one of these two tasks, set the config values we
                        want, and install the custom SelectImagesTask.
                        """
                        config = cls.ConfigClass()
                        config.coaddName = self.config.coaddName
                        config.select.retarget(MockSelectImagesTask)
                        if cls == MakeCoaddTempExpTask:
                            config.bgSubtracted = True
                            config.doPsfMatch = False
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#10d5b0da">10d5b0da</a> -             config.doApplyUberCal = False</div>
                        elif cls == AssembleCoaddTask:
                            config.doMatchBackgrounds = False
                        return cls(config)
                
                    def iterPatchRefs(self, butler, tractInfo):
                        """Generator that iterates over the patches in a tract, yielding dataRefs.
                        """
                        nPatchX, nPatchY = tractInfo.getNumPatches()
                        for iPatchX in range(nPatchX):
                            for iPatchY in range(nPatchY):
                                patchRef = butler.dataRef(self.config.coaddName + "Coadd",
                                                          tract=tractInfo.getId(), patch="%d,%d" % (iPatchX,iPatchY),
                                                          filter='r')
                                yield patchRef
                
                    def buildCoadd(self, butler, skyMap=None, tract=0):
                        """Run the coadd tasks (MakeCoaddTempExp and AssembleCoadd) on the mock data.
                
                        Must be run after buildInputImages.
                        """
                        if skyMap is None:
                            skyMap = butler.get(self.config.coaddName + "Coadd_skyMap")
                        tractInfo = skyMap[tract]
                        makeCoaddTempExpTask = self.makeCoaddTask(MakeCoaddTempExpTask)
                        assembleCoaddTask = self.makeCoaddTask(AssembleCoaddTask)
                        for patchRef in self.iterPatchRefs(butler, tractInfo):
                            makeCoaddTempExpTask.run(patchRef)
                        for patchRef in self.iterPatchRefs(butler, tractInfo):
                            assembleCoaddTask.run(patchRef)
                
                    def buildMockCoadd(self, butler, truthCatalog=None, skyMap=None, tract=0):
                        """Directly create a simulation of the coadd, using the CoaddPsf of the coadd exposure
                        and the truth catalog.
                
                        Must be run after buildCoadd.
                        """
                        if truthCatalog is None:
                            truthCatalog = butler.get("truth", tract=tract)
                        if skyMap is None:
                            skyMap = butler.get(self.config.coaddName + "Coadd_skyMap")
                        tractInfo = skyMap[tract]
                        tractWcs = tractInfo.getWcs()
                        for patchRef in self.iterPatchRefs(butler, tractInfo):
                            exposure = patchRef.get(self.config.coaddName + "Coadd")
                            exposure.getMaskedImage().getImage().set(0.0)
                            coaddPsf = lsst.meas.algorithms.CoaddPsf(
                                exposure.getInfo().getCoaddInputs().ccds, exposure.getWcs()
                                )
                            exposure.setPsf(coaddPsf)
                            for truthRecord in truthCatalog:
                                self.mockObject.drawSource(truthRecord, exposure, buffer=0)
                            patchRef.put(exposure, self.config.coaddName + "Coadd_mock")
                
                def run(root):
                    """Convenience function to create and run MockCoaddTask with default settings.
                    """
                    from .simpleMapper import makeDataRepo
                    butler = makeDataRepo(root=root)
                    task = MockCoaddTask()
                    task.buildAllInputs(butler)
                    task.buildCoadd(butler)
                    task.buildMockCoadd(butler)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="54640552"/></a>54640552</h3>

<pre>
commit 54640552cc6c1270650c56dddad173e3dd1bd775
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 13 09:42:18 2014 -0700

    Cleanup interpolation tasks and implement useFallbackValueAtEdge (DM-756)
</pre>
<h3><a name="10d5b0da"/></a>10d5b0da</h3>

<pre>
commit 10d5b0dad42a326a9bf24d59809021909e77681d
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Apr 19 11:24:10 2013 -0400

    tests/mocks: turn off ubercal application
    
    testCoaddInputs.py was failing because makeCoaddTempExp was failing.
    We're not running meas_mosaic as part of this test, so we need to turn
    the application of the ubercal off, or it causes makeCoaddTempExp to
    fail.
</pre>
<h3><a name="94df22ea"/></a>94df22ea</h3>

<pre>
commit 94df22eaad3077ba3a8999fa074cf010e1e17c00
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Jan 14 15:58:16 2013 -0500

    Add mapper and tasks for generating extremely simple mock data.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/makeDiscreteSkyMap.py"/></a>python/lsst/pipe/tasks/makeDiscreteSkyMap.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#0be19cb0">0be19cb0</a> - # Copyright 2008, 2009, 2010 LSST Corporation.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#3cf09ecc">3cf09ecc</a> + # Copyright 2008-2015 AURA/LSST.</div>
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#0be19cb0">0be19cb0</a> - # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the</div>
              ?                                                         --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
16   <a href="#3cf09ecc">3cf09ecc</a> + # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</div>
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
21   <a href="#0be19cb0">0be19cb0</a> - # see <http://www.lsstcorp.org/LegalNotices/>.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
21   <a href="#3cf09ecc">3cf09ecc</a> + # see <https://www.lsstcorp.org/LegalNotices/>.</div>
              ?            +
                #
                import sys
                import traceback
                import lsst.geom
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#0be19cb0">0be19cb0</a> - import lsst.afw.coord as afwCoord</div>
                import lsst.afw.image as afwImage
                import lsst.afw.geom as afwGeom
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                from lsst.skymap import DiscreteSkyMap, BaseSkyMap
                
                class MakeDiscreteSkyMapConfig(pexConfig.Config):
                    """Config for MakeDiscreteSkyMapTask
                    """
                    coaddName = pexConfig.Field(
                        doc = "coadd name, e.g. deep, goodSeeing, chiSquared",
                        dtype = str,
                        default = "deep",
                    )
                    skyMap = pexConfig.ConfigField(
                        dtype = BaseSkyMap.ConfigClass,
                        doc = "SkyMap configuration parameters, excluding position and radius"
                    )
                    borderSize = pexConfig.Field(
                        doc = "additional border added to the bounding box of the calexps, in degrees",
                        dtype = float,
                        default = 0.0
                    )
                    doAppend = pexConfig.Field(
                        doc = "append another tract to an existing DiscreteSkyMap on disk, if present?",
                        dtype = bool,
                        default = False
                    )
                    doWrite = pexConfig.Field(
                        doc = "persist the skyMap?",
                        dtype = bool,
                        default = True,
                    )
                
                    def setDefaults(self):
                        self.skyMap.tractOverlap = 0.0
                
                class MakeDiscreteSkyMapRunner(pipeBase.TaskRunner):
                    """Want to run on all the dataRefs at once, not one at a time."""
                    @staticmethod
                    def getTargetList(parsedCmd):
                        return [(parsedCmd.butler, parsedCmd.id.refList)]
                
                    def precall(self, parsedCmd):
                        # We overload to disable writing/checking of schemas and configs.
                        # There's only one SkyMap per rerun anyway, so the config is redundant,
                        # and checking it means we can't overwrite or append to one once we've
                        # written it.
                        return True
                
                    def __call__(self, args):
                        butler, dataRefList = args
                        task = self.TaskClass(config=self.config, log=self.log)
                        if self.doRaise:
                            result = task.run(butler, dataRefList)
                        else:
                            try:
                                result = task.run(butler, dataRefList)
                            except Exception, e:
                                task.log.fatal("Failed: %s" % e)
                                if not isinstance(e, pipeBase.TaskError):
                                    traceback.print_exc(file=sys.stderr)
                        task.writeMetadata(butler)
                        if self.doReturnResults:
                            return results
                
                class MakeDiscreteSkyMapTask(pipeBase.CmdLineTask):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#0be19cb0">0be19cb0</a> -     """Make a DiscreteSkyMap in a repository, using the bounding box of a set calexps.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#3cf09ecc">3cf09ecc</a> +     """!Make a DiscreteSkyMap in a repository, using the bounding box of a set of calexps.</div>
              ?        +                                                                      +++
                
                    The command-line and run signatures and config are sufficiently different from MakeSkyMapTask
                    that we don't inherit from it, but it is a replacement, so we use the same config/metadata names.
                    """
                    ConfigClass = MakeDiscreteSkyMapConfig
                    _DefaultName = "makeDiscreteSkyMap"
                    RunnerClass = MakeDiscreteSkyMapRunner
                
                    def __init__(self, **kwargs):
                        pipeBase.CmdLineTask.__init__(self, **kwargs)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#0be19cb0">0be19cb0</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#3cf09ecc">3cf09ecc</a> + </div>
                    @pipeBase.timeMethod
                    def run(self, butler, dataRefList):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#0be19cb0">0be19cb0</a> -         """Make a skymap from the bounds of the given set of calexps.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#3cf09ecc">3cf09ecc</a> +         """!Make a skymap from the bounds of the given set of calexps.</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#0be19cb0">0be19cb0</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#3cf09ecc">3cf09ecc</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#0be19cb0">0be19cb0</a> -         @param butler: data butler used to save the SkyMap</div>
              ?                      ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#3cf09ecc">3cf09ecc</a> +         @param[in]  butler        data butler used to save the SkyMap</div>
              ?               +++++       ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#0be19cb0">0be19cb0</a> -         @param dataRefList: dataRefs of calexps used to determine the size and pointing of the SkyMap</div>
              ?                           ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#3cf09ecc">3cf09ecc</a> +         @param[in]  dataRefList   dataRefs of calexps used to determine the size and pointing of the SkyMap</div>
              ?               +++++            ^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#0be19cb0">0be19cb0</a> -         @return a pipeBase Struct containing:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#3cf09ecc">3cf09ecc</a> +         @return     a pipeBase Struct containing:</div>
              ?                 ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#0be19cb0">0be19cb0</a> -         - skyMap: the constructed SkyMap</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#3cf09ecc">3cf09ecc</a> +                     - skyMap: the constructed SkyMap</div>
              ? ++++++++++++
                        """
                        self.log.info("Extracting bounding boxes of %d images" % len(dataRefList))
                        points = []
                        for dataRef in dataRefList:
                            if not dataRef.datasetExists("calexp"):
                                self.log.warn("CalExp for %s does not exist: ignoring" % (dataRef.dataId,))
                                continue
                            md = dataRef.get("calexp_md", immediate=True)
                            wcs = afwImage.makeWcs(md)
                            # nb: don't need to worry about xy0 because Exposure saves Wcs with CRPIX shifted by (-x0, -y0).
                            boxI = afwGeom.Box2I(afwGeom.Point2I(0,0), afwGeom.Extent2I(md.get("NAXIS1"), md.get("NAXIS2")))
                            boxD = afwGeom.Box2D(boxI)
                            points.extend(tuple(wcs.pixelToSky(corner).getVector()) for corner in boxD.getCorners())
                        if len(points) == 0:
                            raise RuntimeError("No data found from which to compute convex hull")
                        self.log.info("Computing spherical convex hull")
                        polygon = lsst.geom.convexHull(points)
                        if polygon is None:
                            raise RuntimeError(
                                "Failed to compute convex hull of the vertices of all calexp bounding boxes; "
                                "they may not be hemispherical."
                                )
                        circle = polygon.getBoundingCircle()
                
                        datasetName = self.config.coaddName + "Coadd_skyMap"
                
                        skyMapConfig = DiscreteSkyMap.ConfigClass()
                        if self.config.doAppend and butler.datasetExists(datasetName):
                            oldSkyMap = butler.get(datasetName, immediate=True)
                            if not isinstance(oldSkyMap.config, DiscreteSkyMap.ConfigClass):
                                raise TypeError("Cannot append to existing non-discrete skymap")
                            compareLog = []
                            if not self.config.skyMap.compare(oldSkyMap.config, output=compareLog.append):
                                raise ValueError("Cannot append to existing skymap - configurations differ:", *compareLog)
                            skyMapConfig.raList.extend(oldSkyMap.config.raList)
                            skyMapConfig.decList.extend(oldSkyMap.config.decList)
                            skyMapConfig.radiusList.extend(oldSkyMap.config.radiusList)
                        skyMapConfig.update(**self.config.skyMap.toDict())
                        skyMapConfig.raList.append(circle.center[0])
                        skyMapConfig.decList.append(circle.center[1])
                        skyMapConfig.radiusList.append(circle.radius + self.config.borderSize)
                        skyMap = DiscreteSkyMap(skyMapConfig)
                
                        for tractInfo in skyMap:
                            wcs = tractInfo.getWcs()
                            posBox = afwGeom.Box2D(tractInfo.getBBox())
                            pixelPosList = (
                                posBox.getMin(),
                                afwGeom.Point2D(posBox.getMaxX(), posBox.getMinY()),
                                posBox.getMax(),
                                afwGeom.Point2D(posBox.getMinX(), posBox.getMaxY()),
                            )
                            skyPosList = [wcs.pixelToSky(pos).getPosition(afwGeom.degrees) for pos in pixelPosList]
                            posStrList = ["(%0.3f, %0.3f)" % tuple(skyPos) for skyPos in skyPosList]
                            self.log.info("tract %s has corners %s (RA, Dec deg) and %s x %s patches" % \
                                (tractInfo.getId(), ", ".join(posStrList), \
                                tractInfo.getNumPatches()[0], tractInfo.getNumPatches()[1]))
                        if self.config.doWrite:
                            butler.put(skyMap, datasetName)
                        return pipeBase.Struct(
                            skyMap = skyMap
                        )
                
                    def _getConfigName(self):
                        """Return the name of the config dataset
                        """
                        return "%s_makeDiscreteSkyMap_config" % (self.config.coaddName,)
                
                    def _getMetadataName(self):
                        """Return the name of the metadata dataset
                        """
                        return "%s_makeDiscreteSkyMap_metadata" % (self.config.coaddName,)
                
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="0be19cb0"/></a>0be19cb0</h3>

<pre>
commit 0be19cb016bb5f84db73e81dde6fc2feddd06e7e
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Feb 27 18:49:12 2013 +0900

    Add task, bin script to build a DiscreteSkyMap from the bounds of a set of calexps (#2702).
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="3cf09ecc"/></a>3cf09ecc</h3>

<pre>
commit 3cf09ecc19e1d9f2d57f0aed4b07a277dbad0d72
Author: Lauren MacArthur <lauren@astro.princeton.edu>
Date:   Tue May 12 14:12:57 2015 -0400

    Remove whitespace, fix copyright year, and minor formatting
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/makeCoaddTempExp.py"/></a>python/lsst/pipe/tasks/makeCoaddTempExp.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#dd2c2d20">dd2c2d20</a> - #!/usr/bin/env python</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#c87f6fe5">c87f6fe5</a> + from __future__ import division, absolute_import</div>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import numpy
                
                import lsst.pex.config as pexConfig
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#dd2c2d20">dd2c2d20</a> - import lsst.afw.geom as afwGeom</div>
                import lsst.afw.image as afwImage
                import lsst.coadd.utils as coaddUtils
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#0e68a056">0e68a056</a> - from lsst.meas.algorithms import CoaddPsf</div>
                from .coaddBase import CoaddBaseTask
                from .warpAndPsfMatch import WarpAndPsfMatchTask
                from .coaddHelpers import groupPatchExposures, getGroupDataRef
                
                __all__ = ["MakeCoaddTempExpTask"]
                
                class MakeCoaddTempExpConfig(CoaddBaseTask.ConfigClass):
                    """Config for MakeCoaddTempExpTask
                    """
                    warpAndPsfMatch = pexConfig.ConfigurableField(
                        target = WarpAndPsfMatchTask,
                        doc = "Task to warp and PSF-match calexp",
                    )
                    doWrite = pexConfig.Field(
                        doc = "persist <coaddName>Coadd_tempExp",
                        dtype = bool,
                        default = True,
                    )
                    doOverwrite = pexConfig.Field(
                        doc = "overwrite <coaddName>Coadd_tempExp; If False, continue if the file exists on disk",
                        dtype = bool,
                        default = True,
                    )
                    bgSubtracted = pexConfig.Field(
                        doc = "Work with a background subtracted calexp?",
                        dtype = bool,
                        default = False,
                    )
                
                
                class MakeCoaddTempExpTask(CoaddBaseTask):
                    """Task to produce <coaddName>Coadd_tempExp images
                    """
                    ConfigClass = MakeCoaddTempExpConfig
                    _DefaultName = "makeCoaddTempExp"
                    
                    def __init__(self, *args, **kwargs):
                        CoaddBaseTask.__init__(self, *args, **kwargs)
                        self.makeSubtask("warpAndPsfMatch")
                
                    @pipeBase.timeMethod
                    def run(self, patchRef, selectDataList=[]):
                        """Produce <coaddName>Coadd_tempExp images
                        
                        <coaddName>Coadd_tempExp are produced by PSF-matching (optional) and warping.
                        
                        @param[in] patchRef: data reference for sky map patch. Must include keys "tract", "patch",
                            plus the camera-specific filter key (e.g. "filter" or "band")
                        @return: dataRefList: a list of data references for the new <coaddName>Coadd_tempExp
                
                        @warning: this task assumes that all exposures in a coaddTempExp have the same filter.
                        
                        @warning: this task sets the Calib of the coaddTempExp to the Calib of the first calexp
                        with any good pixels in the patch. For a mosaic camera the resulting Calib should be ignored
                        (assembleCoadd should determine zeropoint scaling without referring to it).
                        """
                        skyInfo = self.getSkyInfo(patchRef)
                
                        calExpRefList = self.selectExposures(patchRef, skyInfo, selectDataList=selectDataList)
                        if len(calExpRefList) == 0:
                            self.log.warn("No exposures to coadd for patch %s" % patchRef.dataId)
                            return None
                        self.log.info("Selected %d calexps for patch %s" % (len(calExpRefList), patchRef.dataId))
                        calExpRefList = [calExpRef for calExpRef in calExpRefList if calExpRef.datasetExists("calexp")]
                        self.log.info("Processing %d existing calexps for patch %s" % (len(calExpRefList), patchRef.dataId))
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#05688276">05688276</a> -         tempExpName = self.getTempExpDatasetName()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#05688276">05688276</a> -         groupData = groupPatchExposures(patchRef, calExpRefList, self.getCoaddDatasetName(), tempExpName)</div>
              ?                                                                                             -------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#83aec2ec">83aec2ec</a> +         groupData = groupPatchExposures(patchRef, calExpRefList, self.getCoaddDatasetName(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#83aec2ec">83aec2ec</a> +                                         self.getTempExpDatasetName())</div>
                        self.log.info("Processing %d tempExps for patch %s" % (len(groupData.groups), patchRef.dataId))
                
                        dataRefList = []
                        for i, (tempExpTuple, calexpRefList) in enumerate(groupData.groups.iteritems()):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#05688276">05688276</a> -             tempExpRef = getGroupDataRef(patchRef.getButler(), tempExpName, tempExpTuple, groupData.keys)</div>
              ?                                                                            ------------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#83aec2ec">83aec2ec</a> +             tempExpRef = getGroupDataRef(patchRef.getButler(), self.getTempExpDatasetName(),</div>
              ?                                                                +++++++ +      +++++++    ++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#a55e28a9">a55e28a9</a> +                                          tempExpTuple, groupData.keys)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#6f8e3bac">6f8e3bac</a> -             if not self.config.doOverwrite and tempExpRef.datasetExists(datasetType=tempExpName):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#4b7989eb">4b7989eb</a> +             if not self.config.doOverwrite and tempExpRef.datasetExists(datasetType=self.getTempExpDatasetName()):</div>
              ?                                                                                     +++++++ +      +++++++    ++
                                self.log.info("tempCoaddExp %s exists; skipping" % (tempExpRef.dataId,))
                                dataRefList.append(tempExpRef)
                                continue
                            self.log.info("Processing tempExp %d/%d: id=%s" % (i, len(groupData.groups), tempExpRef.dataId))
                
                            # TODO: mappers should define a way to go from the "grouping keys" to a numeric ID (#2776).
                            # For now, we try to get a long integer "visit" key, and if we can't, we just use the index
                            # of the visit in the list.
                            try:
                                visitId = long(tempExpRef.dataId["visit"])
                            except (KeyError, ValueError):
                                visitId = i
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#f19cb686">f19cb686</a> +             inputRecorder = self.inputRecorder.makeCoaddTempExpRecorder(visitId)</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#0d1128e9">0d1128e9</a> -             exp = self.createTempExp(calexpRefList, skyInfo, visitId)</div>
              ?                                                              - ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#f19cb686">f19cb686</a> +             exp = self.createTempExp(calexpRefList, skyInfo, inputRecorder)</div>
              ?                                                               ^^^ ^^^^^ ++
                            if exp is not None:
                                dataRefList.append(tempExpRef)
                                if self.config.doWrite:
                                    self.writeCoaddOutput(tempExpRef, exp, "tempExp")
                            else:
                                self.log.warn("tempExp %s could not be created" % (tempExpRef.dataId,))
                        return dataRefList
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#0d1128e9">0d1128e9</a> -     def createTempExp(self, calexpRefList, skyInfo, visitId=0):</div>
              ?                                                     - ^^ ^ ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#f19cb686">f19cb686</a> +     def createTempExp(self, calexpRefList, skyInfo, inputRecorder):</div>
              ?                                                      ^^^ ^^^^^ ^^
                        """Create a tempExp from inputs
                
                        We iterate over the multiple calexps in a single exposure to construct
                        the warp ("tempExp") of that exposure to the supplied tract/patch.
                
                        Pixels that receive no pixels are set to NAN; this is not correct
                        (violates LSST algorithms group policy), but will be fixed up by
                        interpolating after the coaddition.
                
                        @param calexpRefList: List of data references for calexps that (may)
                            overlap the patch of interest
                        @param skyInfo: Struct from CoaddBaseTask.getSkyInfo() with geometric
                            information about the patch
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#0d1128e9">0d1128e9</a> -         @param visitId: integer identifier for visit, for the table that will</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#0d1128e9">0d1128e9</a> -             produce the CoaddPsf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#f19cb686">f19cb686</a> +         @param inputRecorder: CoaddTempExpInputRecorder that builds a catalog</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#f19cb686">f19cb686</a> +             of calexps that went into this tempExp.</div>
                        @return warped exposure, or None if no pixels overlap
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#0d1128e9">0d1128e9</a> -         inputRecorder = self.inputRecorder.makeCoaddTempExpRecorder(visitId)</div>
                        coaddTempExp = afwImage.ExposureF(skyInfo.bbox, skyInfo.wcs)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#8c76c6d8">8c76c6d8</a> -         coaddTempExp.getMaskedImage().set(numpy.nan, afwImage.MaskU.getPlaneBitMask("NO_DATA"), numpy.inf)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#a55e28a9">a55e28a9</a> +         edgeMask = afwImage.MaskU.getPlaneBitMask("EDGE")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#a55e28a9">a55e28a9</a> +         coaddTempExp.getMaskedImage().set(numpy.nan, edgeMask, numpy.inf) # XXX these are the wrong values!</div>
                        totGoodPix = 0
                        didSetMetadata = False
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#4192696c">4192696c</a> -         modelPsf = self.config.modelPsf.apply(skyInfo.wcs) if self.config.doPsfMatch else None</div>
              ?                                               -----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#c87f6fe5">c87f6fe5</a> +         modelPsf = self.config.modelPsf.apply() if self.config.doPsfMatch else None</div>
                        for calExpInd, calExpRef in enumerate(calexpRefList):
                            self.log.info("Processing calexp %d of %d for this tempExp: id=%s" %
                                          (calExpInd+1, len(calexpRefList), calExpRef.dataId))
                            try:
                                ccdId = calExpRef.get("ccdExposureId", immediate=True)
                            except Exception:
                                ccdId = calExpInd
                            numGoodPix = 0
                            try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#509420bb">509420bb</a> -                 # We augment the dataRef here with the tract, which is harmless for loading things</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#509420bb">509420bb</a> -                 # like calexps that don't need the tract, and necessary for meas_mosaic outputs,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#509420bb">509420bb</a> -                 # which do.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#509420bb">509420bb</a> -                 calExpRef = calExpRef.butlerSubset.butler.dataRef("wcs", dataId=calExpRef.dataId,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#509420bb">509420bb</a> -                                                                   tract=skyInfo.tractInfo.getId())</div>
                                calExp = self.getCalExp(calExpRef, bgSubtracted=self.config.bgSubtracted)
                                exposure = self.warpAndPsfMatch.run(calExp, modelPsf=modelPsf, wcs=skyInfo.wcs,
                                                                    maxBBox=skyInfo.bbox).exposure
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#2a62faf1">2a62faf1</a> -                 if didSetMetadata:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#2a62faf1">2a62faf1</a> -                     mimg = exposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#2a62faf1">2a62faf1</a> -                     mimg *= (coaddTempExp.getCalib().getFluxMag0()[0] / exposure.getCalib().getFluxMag0()[0])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#2a62faf1">2a62faf1</a> -                     del mimg</div>
                                numGoodPix = coaddUtils.copyGoodPixels(
                                    coaddTempExp.getMaskedImage(), exposure.getMaskedImage(), self.getBadPixelMask())
                                totGoodPix += numGoodPix
                                self.log.logdebug("Calexp %s has %d good pixels in this patch (%.1f%%)" %
                                                  (calExpRef.dataId, numGoodPix, 100.0*numGoodPix/skyInfo.bbox.getArea()))
                                if numGoodPix > 0 and not didSetMetadata:
                                    coaddTempExp.setCalib(exposure.getCalib())
                                    coaddTempExp.setFilter(exposure.getFilter())
                                    didSetMetadata = True
                            except Exception, e:
                                self.log.warn("Error processing calexp %s; skipping it: %s" % (calExpRef.dataId, e))
                                continue
                            inputRecorder.addCalExp(calExp, ccdId, numGoodPix)
                
                        inputRecorder.finish(coaddTempExp, totGoodPix)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#0e68a056">0e68a056</a> -         if totGoodPix > 0 and didSetMetadata:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#0e68a056">0e68a056</a> -             coaddTempExp.setPsf(modelPsf if self.config.doPsfMatch else</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#0e68a056">0e68a056</a> -                                 CoaddPsf(inputRecorder.coaddInputs.ccds, skyInfo.wcs))</div>
                
                        self.log.info("coaddTempExp has %d good pixels (%.1f%%)" %
                                      (totGoodPix, 100.0*totGoodPix/skyInfo.bbox.getArea()))
                        return coaddTempExp if totGoodPix > 0 and didSetMetadata else None
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="dd2c2d20"/></a>dd2c2d20</h3>

<pre>
commit dd2c2d20ab69790ec70b0b26ddfbfcd3796aa0bf
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Sep 25 16:50:54 2012 -0700

    First cut
</pre>
<h3><a name="4192696c"/></a>4192696c</h3>

<pre>
commit 4192696c95be5ef4067836bbfe1f8e89cc54a4a7
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat Mar 30 14:53:40 2013 -0400

    Move PSF-matching config options into CoaddBase.
    
    AssembleCoadd will need access to these options so it can install the
    correct PSF into the final Exposure.
    
    Also moved the CoaddBase.makeModelPsf function to an apply() method
    on the config itself; in the future we'll probably want to make a registry for
    model PSFs, and this is a step towards that (#2781).
</pre>
<h3><a name="0d1128e9"/></a>0d1128e9</h3>

<pre>
commit 0d1128e9f055473fb5255ec5b2ddc04f87d352ec
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Nov 7 18:25:51 2013 -0500

    makeCoaddTempExp: move inputRecorder into createTempExp
    
    It serves no purpose in the run method, except to be passed into
    createTempExp.  This also saves users of createTempExp from having
    to create an inputRecorder.
</pre>
<h3><a name="509420bb"/></a>509420bb</h3>

<pre>
commit 509420bb8938bf9919d4c869de56fe8583527e53
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Apr 2 19:32:32 2014 -0400

    Adapt to inclusion of tract in meas_mosaic outputs
</pre>
<h3><a name="05688276"/></a>05688276</h3>

<pre>
commit 056882761533e21a244380b682329935fe4ef61d
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jun 25 17:54:27 2013 -0400

    makeCoaddTempExp: fix undefined variable
</pre>
<h3><a name="6f8e3bac"/></a>6f8e3bac</h3>

<pre>
commit 6f8e3bacd51046795dab6a43cad175ab367036bc
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Fri Nov 9 19:07:54 2012 -0600

    Added a flag that allows makeCoaddTempExp.py to skip making a coaddTempExp if it exists in the input repository.
</pre>
<h3><a name="2a62faf1"/></a>2a62faf1</h3>

<pre>
commit 2a62faf1bffc36c6ac931d68ee81a6a256d9c0b1
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Mon Jun 2 11:24:44 2014 +0900

    Scale counts to reflect the CCD specific zeropoints.
</pre>
<h3><a name="0e68a056"/></a>0e68a056</h3>

<pre>
commit 0e68a0560305c42a4ba358fb6b50965fc5989012
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Jan 7 14:43:13 2015 -0500

    makeCoaddTempExp: set PSF for warped exposure
</pre>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="c87f6fe5"/></a>c87f6fe5</h3>

<pre>
commit c87f6fe514160e604e1c64c97b4160bfa743b11c
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 29 11:21:47 2014 -0700

    Cleaned up the code based on final decisions on units (pixels) and FWHM vs sigma (FWHM).
</pre>
<h3><a name="a55e28a9"/></a>a55e28a9</h3>

<pre>
commit a55e28a9cdfa2163b60c6b46935fa5bb86f65781
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 20 17:46:33 2013 +0900

    Extensive refactoring of coadd tasks (#2590)
    
    Long methods were divided into smaller parts for ease of subclass+override.
    Common code was consolidated.  Database-specific code was labeled as such.
    Some parts that might be generally useful (coaddHelpers) were pulled out into
    their own package.
    
    Tested bin scripts of coadd.py, makeCoaddTempExp.py and assembleCoadd.py on
    Suprime-Cam data.
</pre>
<h3><a name="4b7989eb"/></a>4b7989eb</h3>

<pre>
commit 4b7989eb3e05cabdb928256ef0ba39fdec44151b
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 3 15:10:55 2013 -0500

    change ref to tempExpName to self.getTempExpDatasetName()
</pre>
<h3><a name="83aec2ec"/></a>83aec2ec</h3>

<pre>
commit 83aec2ecd40e6d0711e0336ed7c85a8e28dbad84
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 22 13:29:19 2013 -0400

    Update names for getCoaddDataset and getCoaddTempExpDataset
    
    Adding "Name" to the end of these makes their function so clear the
    docstring is irrelevant.
</pre>
<h3><a name="f19cb686"/></a>f19cb686</h3>

<pre>
commit f19cb68618003f45c2559ee4832faec713ab7a2f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Mar 29 17:42:58 2013 -0400

    Rewrite coadd tasks to use CoaddInputRecorderTask.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/imageDifference.py"/></a>python/lsst/pipe/tasks/imageDifference.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import math
                import random
                import numpy
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#f85ae88a">f85ae88a</a> - import lsst.afw.display.ds9 as ds9</div>
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                import lsst.daf.base as dafBase
                import lsst.afw.geom as afwGeom
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#17714837">17714837</a> - import lsst.afw.detection as afwDetect</div>
                import lsst.afw.image as afwImage
                import lsst.afw.math as afwMath
                import lsst.afw.table as afwTable
                import lsst.meas.astrom as measAstrom
                from lsst.pipe.tasks.registerImage import RegisterTask
                from lsst.meas.algorithms import SourceDetectionTask, SourceMeasurementTask, \
                    starSelectorRegistry, PsfAttributes, SingleGaussianPsf
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#5eb58011">5eb58011</a> - from lsst.meas.deblender import SourceDeblendTask</div>
                from lsst.ip.diffim import ImagePsfMatchTask, DipoleMeasurementTask, DipoleAnalysis, \
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#4604772d">4604772d</a> -     SourceFlagChecker, KernelCandidateF, cast_KernelCandidateF, makeKernelBasisList</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#e4814d06">e4814d06</a> +     SourceFlagChecker, KernelCandidateF, cast_KernelCandidateF, makeKernelBasisList, \</div>
              ?                                                                                    +++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#ab120908">ab120908</a> - import lsst.ip.diffim.utils as diUtils</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#701d94b2">701d94b2</a> +     KernelCandidateQa, DiaCatalogSourceSelector, DiaCatalogSourceSelectorConfig</div>
                import lsst.ip.diffim.diffimTools as diffimTools
                
                FwhmPerSigma = 2 * math.sqrt(2 * math.log(2))
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#0319fd30">0319fd30</a> + IqrToSigma = 0.741</div>
                
                class ImageDifferenceConfig(pexConfig.Config):
                    """Config for ImageDifferenceTask
                    """
                    doAddCalexpBackground = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#c0cd0c03">c0cd0c03</a> -         doc = "Add background to calexp before processing it.  Useful as ipDiffim does background matching.")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Add background to calexp before processing it.  Useful as ipDiffim does background matching.")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#716fba30">716fba30</a> -     doUseRegister = pexConfig.Field(dtype=bool, default=True, </div>
              ?                                                              -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#7a13b5d4">7a13b5d4</a> +     doUseRegister = pexConfig.Field(dtype=bool, default=True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#716fba30">716fba30</a> -         doc = "Use image-to-image registration to align template with science image")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Use image-to-image registration to align template with science image")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#73de3261">73de3261</a> -     doDebugRegister = pexConfig.Field(dtype=bool, default=False, </div>
              ?                                                                 -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#7a13b5d4">7a13b5d4</a> +     doDebugRegister = pexConfig.Field(dtype=bool, default=False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#b11382d9">b11382d9</a> -         doc = "Writing debugging data for doUseRegister")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Writing debugging data for doUseRegister")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#adba3dc0">adba3dc0</a> -     doSelectSources = pexConfig.Field(dtype=bool, default=True, </div>
              ?                                                                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#7a13b5d4">7a13b5d4</a> +     doSelectSources = pexConfig.Field(dtype=bool, default=True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#adba3dc0">adba3dc0</a> -         doc = "Select stars to use for kernel fitting")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Select stars to use for kernel fitting")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#701d94b2">701d94b2</a> +     doSelectDcrCatalog = pexConfig.Field(dtype=bool, default=False,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#701d94b2">701d94b2</a> +         doc="Select stars of extreme color as part of the control sample") </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#701d94b2">701d94b2</a> +     doSelectVariableCatalog = pexConfig.Field(dtype=bool, default=False,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#701d94b2">701d94b2</a> +         doc="Select stars that are variable to be part of the control sample") </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#e6833521">e6833521</a> -     doSubtract = pexConfig.Field(dtype=bool, default=True, doc = "Compute subtracted exposure?")</div>
              ?                                                               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#7a13b5d4">7a13b5d4</a> +     doSubtract = pexConfig.Field(dtype=bool, default=True, doc="Compute subtracted exposure?")</div>
                    doPreConvolve = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#17714837">17714837</a> -         doc = "Convolve science image by its PSF before PSF-matching?")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Convolve science image by its PSF before PSF-matching?")</div>
                    useGaussianForPreConvolution = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#c8209386">c8209386</a> -         doc = "Use a simple gaussian PSF model for pre-convolution (else use fit PSF)? "</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Use a simple gaussian PSF model for pre-convolution (else use fit PSF)? "</div>
                            "Ignored if doPreConvolve false.")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#e6833521">e6833521</a> -     doDetection = pexConfig.Field(dtype=bool, default=True, doc = "Detect sources?")</div>
              ?                                                                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#7a13b5d4">7a13b5d4</a> +     doDetection = pexConfig.Field(dtype=bool, default=True, doc="Detect sources?")</div>
                    doMerge = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#81f450d2">81f450d2</a> -         doc = "Merge positive and negative diaSources with grow radius set by growFootprint")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Merge positive and negative diaSources with grow radius set by growFootprint")</div>
                    doMatchSources = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#a182cf15">a182cf15</a> -         doc = "Match diaSources with input calexp sources and ref catalog sources")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Match diaSources with input calexp sources and ref catalog sources")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#d79e20c1">d79e20c1</a> -     doMeasurement = pexConfig.Field(dtype=bool, default=True, doc = "Measure diaSources?")</div>
              ?                                                                  - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#7a13b5d4">7a13b5d4</a> +     doMeasurement = pexConfig.Field(dtype=bool, default=True, doc="Measure diaSources?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#ddeafd2e">ddeafd2e</a> -     doWriteSubtractedExp = pexConfig.Field(dtype=bool, default=True, doc = "Write difference exposure?")</div>
              ?                                                                         - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#7a13b5d4">7a13b5d4</a> +     doWriteSubtractedExp = pexConfig.Field(dtype=bool, default=True, doc="Write difference exposure?")</div>
                    doWriteMatchedExp = pexConfig.Field(dtype=bool, default=False,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#ddeafd2e">ddeafd2e</a> -         doc = "Write warped and PSF-matched template coadd exposure?")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Write warped and PSF-matched template coadd exposure?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#e6833521">e6833521</a> -     doWriteSources = pexConfig.Field(dtype=bool, default=True, doc = "Write sources?")</div>
              ?                                                                   - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#7a13b5d4">7a13b5d4</a> +     doWriteSources = pexConfig.Field(dtype=bool, default=True, doc="Write sources?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#e6833521">e6833521</a> -     doWriteHeavyFootprintsInSources = pexConfig.Field(dtype=bool, default=False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#e6833521">e6833521</a> -         doc = "Include HeavyFootprint data in source table?")</div>
                    doAddMetrics = pexConfig.Field(dtype=bool, default=True,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#ab120908">ab120908</a> -         doc = "Add columns to the source table to hold analysis metrics.")</div>
              ?            - -                                                         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Add columns to the source table to hold analysis metrics?")</div>
              ?                                                                      ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#e6833521">e6833521</a> -                                                       </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#7a13b5d4">7a13b5d4</a> + </div>
                    coaddName = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#e6833521">e6833521</a> -         doc = "coadd name: typically one of deep or goodSeeing",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#7a13b5d4">7a13b5d4</a> +         doc="coadd name: typically one of deep or goodSeeing",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#e6833521">e6833521</a> -         dtype = str,</div>
              ?              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#7a13b5d4">7a13b5d4</a> +         dtype=str,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#e6833521">e6833521</a> -         default = "deep",</div>
              ?                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#7a13b5d4">7a13b5d4</a> +         default="deep",</div>
                    )
                    convolveTemplate = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#b48024fd">b48024fd</a> -         doc = "Which image gets convolved (default = template)",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Which image gets convolved (default = template)",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#6bd10594">6bd10594</a> -         dtype = bool,</div>
              ?              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#7a13b5d4">7a13b5d4</a> +         dtype=bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#b48024fd">b48024fd</a> -         default = True</div>
              ?                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#7a13b5d4">7a13b5d4</a> +         default=True</div>
                    )
                    sourceSelector = starSelectorRegistry.makeField("Source selection algorithm", default="diacatalog")
                    subtract = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#e6833521">e6833521</a> -         target = ImagePsfMatchTask,</div>
              ?               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#7a13b5d4">7a13b5d4</a> +         target=ImagePsfMatchTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#e6833521">e6833521</a> -         doc = "Warp and PSF match template to exposure, then subtract",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Warp and PSF match template to exposure, then subtract",</div>
                    )
                    detection = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#e6833521">e6833521</a> -         target = SourceDetectionTask,</div>
              ?               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#7a13b5d4">7a13b5d4</a> +         target=SourceDetectionTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#e6833521">e6833521</a> -         doc = "Low-threshold detection for final measurement",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#7a13b5d4">7a13b5d4</a> +         doc="Low-threshold detection for final measurement",</div>
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#84d3e49c">84d3e49c</a> -     dipolemeasurement = pexConfig.ConfigurableField(</div>
              ?           ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#7a13b5d4">7a13b5d4</a> +     dipoleMeasurement = pexConfig.ConfigurableField(</div>
              ?           ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#465e431a">465e431a</a> -         target = DipoleMeasurementTask,</div>
              ?               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#7a13b5d4">7a13b5d4</a> +         target=DipoleMeasurementTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#465e431a">465e431a</a> -         doc = "Final source measurement on low-threshold detections; dipole fitting enabled",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Final source measurement on low-threshold detections; dipole fitting enabled.",</div>
              ?                                                                                          +
                    )
                    measurement = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#e6833521">e6833521</a> -         target = SourceMeasurementTask,</div>
              ?               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#7a13b5d4">7a13b5d4</a> +         target=SourceMeasurementTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#84d3e49c">84d3e49c</a> -         doc = "Final source measurement on low-threshold detections; dipole fitting NOT enabled",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Final source measurement on low-threshold detections; dipole fitting NOT enabled",</div>
                    )
                    controlStepSize = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#adba3dc0">adba3dc0</a> -         doc = "What step size (every Nth one) to select a control sample from the kernelSources",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#7a13b5d4">7a13b5d4</a> +         doc="What step size (every Nth one) to select a control sample from the kernelSources",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#adba3dc0">adba3dc0</a> -         dtype = int,</div>
              ?              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#7a13b5d4">7a13b5d4</a> +         dtype=int,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#adba3dc0">adba3dc0</a> -         default = 5</div>
              ?                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#7a13b5d4">7a13b5d4</a> +         default=5</div>
                    )
                    controlRandomSeed = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#adba3dc0">adba3dc0</a> -         doc = "Random seed for shuffing the control sample",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Random seed for shuffing the control sample",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#adba3dc0">adba3dc0</a> -         dtype = int,</div>
              ?              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#7a13b5d4">7a13b5d4</a> +         dtype=int,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#adba3dc0">adba3dc0</a> -         default = 10</div>
              ?                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#7a13b5d4">7a13b5d4</a> +         default=10</div>
                    )
                    register = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#716fba30">716fba30</a> -         target = RegisterTask,</div>
              ?               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#7a13b5d4">7a13b5d4</a> +         target=RegisterTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#716fba30">716fba30</a> -         doc = "Task to enable image-to-image image registration (warping)",</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Task to enable image-to-image image registration (warping)",</div>
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#07e52f2e">07e52f2e</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#34fb80a7">34fb80a7</a> -     templateBgBinSize = pexConfig.Field(dtype=int, default=2048,</div>
              ?              ^^^^                                          ^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#7a13b5d4">7a13b5d4</a> +     templateBorderSize = pexConfig.Field(dtype=int, default=10,</div>
              ?              ^^^^^                                          ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#34fb80a7">34fb80a7</a> -         doc = "Binsize for template background determination")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Number of pixels to grow the requested template image to account for warping")</div>
                
                    templateSipOrder = pexConfig.Field(dtype=int, default=2,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#34fb80a7">34fb80a7</a> -         doc = "Sip Order for fitting the Template Wcs (default is too high, overfitting)")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Sip Order for fitting the Template Wcs (default is too high, overfitting)")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#34fb80a7">34fb80a7</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                    growFootprint = pexConfig.Field(dtype=int, default=2,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#81f450d2">81f450d2</a> -         doc = "Grow positive and negative footprints by this amount before merging")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Grow positive and negative footprints by this amount before merging")</div>
                
                    diaSourceMatchRadius = pexConfig.Field(dtype=float, default=0.5,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#a182cf15">a182cf15</a> -         doc = "Match radius (in arcseconds) for DiaSource to Source association")</div>
              ?            - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Match radius (in arcseconds) for DiaSource to Source association")</div>
                
                    maxDiaSourcesToMeasure = pexConfig.Field(dtype=int, default=200,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#84d3e49c">84d3e49c</a> -         doc = "Do not measure more than this many sources with dipolemeasurement, use measurement") </div>
              ?            - -                                                       ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Do not measure more than this many sources with dipoleMeasurement, use measurement") </div>
              ?                                                                    ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#84d3e49c">84d3e49c</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#b2f59945">b2f59945</a> -     useWinter2013Hacks = pexConfig.Field(dtype=bool, default=False,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#34a693b4">34a693b4</a> -         doc = "Use all manner of nefarious workarounds specific to late Winter 2013 production") </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#34a693b4">34a693b4</a> -     winter2013templateId = pexConfig.Field(dtype=int, default=88868666,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#34a693b4">34a693b4</a> -         doc = "88868666 for sparse data; 22222200 (g) and 11111100 (i) for dense data") </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#8a73f41e">8a73f41e</a> -     winter2013borderMask = pexConfig.Field(dtype=int, default=0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#e264215e">e264215e</a> -         doc = "Mask the outer N pixels during fitting, as they are rife with false positives")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#5c6662a2">5c6662a2</a> -     winter2013WcsShift = pexConfig.Field(dtype=float, default=0.0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#5c6662a2">5c6662a2</a> -         doc = "Shift stars going into RegisterTask by this amount")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#5c6662a2">5c6662a2</a> -     winter2013WcsRms = pexConfig.Field(dtype=float, default=0.0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#5c6662a2">5c6662a2</a> -         doc = "Perturb stars going into RegisterTask by this amount")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#e264215e">e264215e</a> - </div>
                
                    def setDefaults(self):
                        # Set default source selector and configure defaults for that one and some common alternatives
                        self.sourceSelector.name = "diacatalog"
                        self.sourceSelector["secondMoment"].clumpNSigma = 2.0
                        # defaults are OK for catalog and diacatalog
                
                        # DiaSource Detection
                        self.detection.thresholdPolarity = "both"
                        self.detection.reEstimateBackground = False
                        self.detection.thresholdType = "pixel_stdev"
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#bec03b84">bec03b84</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        # Add filtered flux measurement, the correct measurement for pre-convolved images.
                        # Enable all measurements, regardless of doPreConvolved, as it makes data harvesting easier.
                        # To change that you must modify algorithms.names in the task's applyOverrides method,
                        # after the user has set doPreConvolved.
                        self.measurement.algorithms.names.add("flux.peakLikelihood")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#b83e97a1">b83e97a1</a> -         self.dipolemeasurement.algorithms.names.add("flux.peakLikelihood")</div>
              ?                    ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#7a13b5d4">7a13b5d4</a> +         self.dipoleMeasurement.algorithms.names.add("flux.peakLikelihood")</div>
              ?                    ^
                
                        # For shuffling the control sample
                        random.seed(self.controlRandomSeed)
                
                    def validate(self):
                        pexConfig.Config.validate(self)
                        if self.doMeasurement and not self.doDetection:
                            raise ValueError("Cannot run source measurement without source detection.")
                        if self.doMerge and not self.doDetection:
                            raise ValueError("Cannot run source merging without source detection.")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#e6833521">e6833521</a> -         if self.doWriteHeavyFootprintsInSources and not self.doWriteSources:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#f2250479">f2250479</a> -             raise ValueError("Cannot write HeavyFootprints without doWriteSources")</div>
                
                class ImageDifferenceTask(pipeBase.CmdLineTask):
                    """Subtract an image from a template coadd and measure the result
                    """
                    ConfigClass = ImageDifferenceConfig
                    _DefaultName = "imageDifference"
                
                    def __init__(self, **kwargs):
                        pipeBase.CmdLineTask.__init__(self, **kwargs)
                        self.makeSubtask("subtract")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#716fba30">716fba30</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        if self.config.doUseRegister:
                            self.makeSubtask("register")
                
                        if self.config.doSelectSources:
                            self.sourceSelector = self.config.sourceSelector.apply()
                        self.schema = afwTable.SourceTable.makeMinimalSchema()
                        self.algMetadata = dafBase.PropertyList()
                        if self.config.doDetection:
                            self.makeSubtask("detection", schema=self.schema)
                        if self.config.doMeasurement:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#84d3e49c">84d3e49c</a> -             self.makeSubtask("dipolemeasurement", schema=self.schema, algMetadata=self.algMetadata)</div>
              ?                                     ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#7a13b5d4">7a13b5d4</a> +             self.makeSubtask("dipoleMeasurement", schema=self.schema, algMetadata=self.algMetadata)</div>
              ?                                     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#84d3e49c">84d3e49c</a> -             self.makeSubtask("measurement", schema=afwTable.SourceTable.makeMinimalSchema(), </div>
              ?                                                                                             -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#7a13b5d4">7a13b5d4</a> +             self.makeSubtask("measurement", schema=afwTable.SourceTable.makeMinimalSchema(),</div>
                                             algMetadata=self.algMetadata)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#7a13b5d4">7a13b5d4</a> +             self.schema.addField(self.dipoleMeasurement._ClassificationFlag, "F",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#7a13b5d4">7a13b5d4</a> +                                  "probability of being a dipole")</div>
                
                        if self.config.doMatchSources:
                            self.schema.addField("refMatchId", "L", "unique id of reference catalog match")
                            self.schema.addField("srcMatchId", "L", "unique id of source match")
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#d79e20c1">d79e20c1</a> -         if self.config.doMeasurement:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#84d3e49c">84d3e49c</a> -             self.schema.addField(self.dipolemeasurement._ClassificationFlag, "F", </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#465e431a">465e431a</a> -                                  "probability of being a dipole")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#e6833521">e6833521</a> - </div>
                    @pipeBase.timeMethod
                    def run(self, sensorRef):
                        """Subtract an image from a template coadd and measure the result
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#0e9740e7">0e9740e7</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        Steps include:
                        - warp template coadd to match WCS of image
                        - PSF match image to warped template
                        - subtract image from PSF-matched, warped template
                        - persist difference image
                        - detect sources
                        - measure sources
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#e6833521">e6833521</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        @param sensorRef: sensor-level butler data reference, used for the following data products:
                        Input only:
                        - calexp
                        - psf
                        - ccdExposureId
                        - ccdExposureId_bits
                        - self.config.coaddName + "Coadd_skyMap"
                        - self.config.coaddName + "Coadd"
                        Input or output, depending on config:
                        - self.config.coaddName + "Diff_subtractedExp"
                        Output, depending on config:
                        - self.config.coaddName + "Diff_matchedExp"
                        - self.config.coaddName + "Diff_src"
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#0e9740e7">0e9740e7</a> -             </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        @return pipe_base Struct containing these fields:
                        - subtractedExposure: exposure after subtracting template;
                            the unpersisted version if subtraction not run but detection run
                            None if neither subtraction nor detection run (i.e. nothing useful done)
                        - subtractRes: results of subtraction task; None if subtraction not run
                        - sources: detected and possibly measured sources; None if detection not run
                        """
                        self.log.info("Processing %s" % (sensorRef.dataId))
                
                        # initialize outputs and some intermediate products
                        subtractedExposure = None
                        subtractRes = None
                        selectSources = None
                        kernelSources = None
                        controlSources = None
                        diaSources = None
                
                        # We make one IdFactory that will be used by both icSrc and src datasets;
                        # I don't know if this is the way we ultimately want to do things, but at least
                        # this ensures the source IDs are fully unique.
                        expBits = sensorRef.get("ccdExposureId_bits")
                        expId = long(sensorRef.get("ccdExposureId"))
                        idFactory = afwTable.IdFactory.makeSource(expId, 64 - expBits)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#e6833521">e6833521</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        # Retrieve the science image we wish to analyze
                        exposure = sensorRef.get("calexp", immediate=True)
                        if self.config.doAddCalexpBackground:
                            mi = exposure.getMaskedImage()
                            mi += sensorRef.get("calexpBackground").getImage()
                        if not exposure.hasPsf():
                            raise pipeBase.TaskError("Exposure has no psf")
                        sciencePsf = exposure.getPsf()
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#e264215e">e264215e</a> -         if self.config.useWinter2013Hacks and self.config.winter2013borderMask > 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#e264215e">e264215e</a> -             self.log.warn("USING WINTER2013 HACK: MASKING BORDER PIXELS")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#e264215e">e264215e</a> -             bbox = exposure.getBBox(afwImage.PARENT)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#e264215e">e264215e</a> -             bbox.grow(-self.config.winter2013borderMask)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#e264215e">e264215e</a> -             self.setEdgeBits(exposure.getMaskedImage(), bbox, </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#8c76c6d8">8c76c6d8</a> -                              exposure.getMaskedImage().getMask().getPlaneBitMask("NO_DATA"))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#e264215e">e264215e</a> -             </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#d5fec3a3">d5fec3a3</a> -         # compute scienceSigmaOrig: sigma of PSF of science image before pre-convolution</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#2fda2bb7">2fda2bb7</a> -         ctr = afwGeom.Box2D(exposure.getBBox(afwImage.PARENT)).getCenter()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#2fda2bb7">2fda2bb7</a> -         psfAttr = PsfAttributes(sciencePsf, afwGeom.Point2I(ctr))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#8d8cadc4">8d8cadc4</a> -         scienceSigmaOrig = psfAttr.computeGaussianWidth(psfAttr.ADAPTIVE_MOMENT)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#c8209386">c8209386</a> -         </div>
                        subtractedExposureName = self.config.coaddName + "Diff_differenceExp"
                        templateExposure = None  # Stitched coadd exposure
                        templateSources = None   # Sources on the template image
                        if self.config.doSubtract:
                            templateExposure, templateSources = self.getTemplate(exposure, sensorRef)
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#7a13b5d4">7a13b5d4</a> +             # compute scienceSigmaOrig: sigma of PSF of science image before pre-convolution</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#35e3701f">35e3701f</a> +             ctr = afwGeom.Box2D(exposure.getBBox()).getCenter()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#7a13b5d4">7a13b5d4</a> +             psfAttr = PsfAttributes(sciencePsf, afwGeom.Point2I(ctr))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#7a13b5d4">7a13b5d4</a> +             scienceSigmaOrig = psfAttr.computeGaussianWidth(psfAttr.ADAPTIVE_MOMENT)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                            # sigma of PSF of template image before warping
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#2fda2bb7">2fda2bb7</a> -             ctr = afwGeom.Box2D(templateExposure.getBBox(afwImage.PARENT)).getCenter()</div>
              ?                                                          ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#35e3701f">35e3701f</a> +             ctr = afwGeom.Box2D(templateExposure.getBBox()).getCenter()</div>
                            psfAttr = PsfAttributes(templateExposure.getPsf(), afwGeom.Point2I(ctr))
                            templateSigma = psfAttr.computeGaussianWidth(psfAttr.ADAPTIVE_MOMENT)
                
                            # if requested, convolve the science exposure with its PSF
                            # (properly, this should be a cross-correlation, but our code does not yet support that)
                            # compute scienceSigmaPost: sigma of science exposure with pre-convolution, if done,
                            # else sigma of original science exposure
                            if self.config.doPreConvolve:
                                convControl = afwMath.ConvolutionControl()
                                # cannot convolve in place, so make a new MI to receive convolved image
                                srcMI = exposure.getMaskedImage()
                                destMI = srcMI.Factory(srcMI.getDimensions())
                                srcPsf = sciencePsf
                                if self.config.useGaussianForPreConvolution:
                                    # convolve with a simplified PSF model: a double Gaussian
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
305  <a href="#85d19b0a">85d19b0a</a> -                     kWidth, kHeight = sciencePsf.getKernel().getDimensions()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#e4814d06">e4814d06</a> +                     kWidth, kHeight = sciencePsf.getLocalKernel().getDimensions()</div>
              ?                                                     +++++
                                    preConvPsf = SingleGaussianPsf(kWidth, kHeight, scienceSigmaOrig)
                                else:
                                    # convolve with science exposure's PSF model
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
309  <a href="#17714837">17714837</a> -                     preConvPsf = psf</div>
              ?                                  ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#35e3701f">35e3701f</a> +                     preConvPsf = srcPsf</div>
              ?                                  ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#17714837">17714837</a> -                 afwMath.convolve(destMI, srcMI, preConvPsf.getKernel(), convControl)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
287  <a href="#e4814d06">e4814d06</a> +                 afwMath.convolve(destMI, srcMI, preConvPsf.getLocalKernel(), convControl)</div>
              ?                                                               +++++
                                exposure.setMaskedImage(destMI)
                                scienceSigmaPost = scienceSigmaOrig * math.sqrt(2)
                            else:
                                scienceSigmaPost = scienceSigmaOrig
                
                            # If requested, find sources in the image
                            if self.config.doSelectSources:
                                if not sensorRef.datasetExists("src"):
                                    self.log.warn("Src product does not exist; running detection, measurement, selection")
                                    # Run own detection and measurement; necessary in nightly processing
                                    selectSources = self.subtract.getSelectSources(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#fd4350aa">fd4350aa</a> -                         exposure, </div>
              ?                                  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#7a13b5d4">7a13b5d4</a> +                         exposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#fd4350aa">fd4350aa</a> -                         sigma = scienceSigmaPost, </div>
              ?                                                  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
300  <a href="#7a13b5d4">7a13b5d4</a> +                         sigma = scienceSigmaPost,</div>
                                        doSmooth = not self.doPreConvolve,
                                        idFactory = idFactory,
                                    )
                                else:
                                    self.log.info("Source selection via src product")
                                    # Sources already exist; for data release processing
                                    selectSources = sensorRef.get("src")
                
                                # Number of basis functions
                                nparam = len(makeKernelBasisList(self.subtract.config.kernel.active,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#5ef667ac">5ef667ac</a> -                                                  referenceFwhmPix = scienceSigmaPost * FwhmPerSigma,</div>
              ?                                                                  - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#7a13b5d4">7a13b5d4</a> +                                                  referenceFwhmPix=scienceSigmaPost * FwhmPerSigma,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#5ef667ac">5ef667ac</a> -                                                  targetFwhmPix = templateSigma * FwhmPerSigma))</div>
              ?                                                               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#7a13b5d4">7a13b5d4</a> +                                                  targetFwhmPix=templateSigma * FwhmPerSigma))</div>
                
                                if self.config.doAddMetrics:
                                    # Modify the schema of all Sources
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#3de30b63">3de30b63</a> -                     self.kcQa = diUtils.KernelCandidateQa(nparam, self.log)</div>
              ?                     -----       --------                        ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#e4814d06">e4814d06</a> +                     kcQa = KernelCandidateQa(nparam)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#adba3dc0">adba3dc0</a> -                     selectSources = self.kcQa.addToSchema(selectSources)</div>
              ?                                     -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#7a13b5d4">7a13b5d4</a> +                     selectSources = kcQa.addToSchema(selectSources)</div>
                
                                astrometer = measAstrom.Astrometry(measAstrom.MeasAstromConfig())
                                astromRet = astrometer.useKnownWcs(selectSources, exposure=exposure)
                                matches = astromRet.matches
                                kernelSources = self.sourceSelector.selectSources(exposure, selectSources, matches=matches)
                                random.shuffle(kernelSources, random.random)
                                controlSources = kernelSources[::self.config.controlStepSize]
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#adba3dc0">adba3dc0</a> -                 [kernelSources.remove(x) for x in controlSources]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#b1a6c9f1">b1a6c9f1</a> +                 kernelSources = [k for i,k in enumerate(kernelSources) if i % self.config.controlStepSize]</div>
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#701d94b2">701d94b2</a> +                 if self.config.doSelectDcrCatalog:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#0319fd30">0319fd30</a> +                     redSelector  = DiaCatalogSourceSelector(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#0319fd30">0319fd30</a> +                         DiaCatalogSourceSelectorConfig(grMin=self.sourceSelector.config.grMax, grMax=99.999))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#701d94b2">701d94b2</a> +                     redSources   = redSelector.selectSources(exposure, selectSources, matches=matches)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#701d94b2">701d94b2</a> +                     controlSources.extend(redSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#701d94b2">701d94b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#0319fd30">0319fd30</a> +                     blueSelector = DiaCatalogSourceSelector(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#0319fd30">0319fd30</a> +                         DiaCatalogSourceSelectorConfig(grMin=-99.999, grMax=self.sourceSelector.config.grMin))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#701d94b2">701d94b2</a> +                     blueSources  = blueSelector.selectSources(exposure, selectSources, matches=matches)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
336  <a href="#701d94b2">701d94b2</a> +                     controlSources.extend(blueSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#701d94b2">701d94b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#701d94b2">701d94b2</a> +                 if self.config.doSelectVariableCatalog:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#0319fd30">0319fd30</a> +                     varSelector = DiaCatalogSourceSelector(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#0319fd30">0319fd30</a> +                         DiaCatalogSourceSelectorConfig(includeVariable=True))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#701d94b2">701d94b2</a> +                     varSources  = varSelector.selectSources(exposure, selectSources, matches=matches)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#701d94b2">701d94b2</a> +                     controlSources.extend(varSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#701d94b2">701d94b2</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#adba3dc0">adba3dc0</a> -                 self.log.info("Selected %d / %d sources for Psf matching (%d for control sample)" \</div>
              ?                                                                                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#7a13b5d4">7a13b5d4</a> +                 self.log.info("Selected %d / %d sources for Psf matching (%d for control sample)" </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#adba3dc0">adba3dc0</a> -                                   % (len(kernelSources), len(selectSources), len(controlSources)))</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#7a13b5d4">7a13b5d4</a> +                               % (len(kernelSources), len(selectSources), len(controlSources)))</div>
                            allresids = {}
                            if self.config.doUseRegister:
                                self.log.info("Registering images")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#716fba30">716fba30</a> -                 </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                                if templateSources is None:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#7a13b5d4">7a13b5d4</a> +                     # Run detection on the template, which is</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#34a693b4">34a693b4</a> -                     # First step: we need to subtract the background out</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#34a693b4">34a693b4</a> -                     # for detection and measurement.  Use large binsize</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#34a693b4">34a693b4</a> -                     # for the background estimation.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#34a693b4">34a693b4</a> -                     binsize = self.config.templateBgBinSize</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#34a693b4">34a693b4</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#34a693b4">34a693b4</a> -                     # Second step: we need to run detection on the</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#34a693b4">34a693b4</a> -                     # background-subtracted template</div>
              ?                                            ---------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#7a13b5d4">7a13b5d4</a> +                     # temporarily background-subtracted</div>
              ?                      ++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#34a693b4">34a693b4</a> -                     #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#34a693b4">34a693b4</a> -                     # Estimate FWHM for detection</div>
                                    templateSources = self.subtract.getSelectSources(
                                        templateExposure,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#34a693b4">34a693b4</a> -                         sigma = templateSigma,</div>
              ?                              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#7a13b5d4">7a13b5d4</a> +                         sigma=templateSigma,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#34a693b4">34a693b4</a> -                         doSmooth = True,</div>
              ?                                 - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#7a13b5d4">7a13b5d4</a> +                         doSmooth=True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#34a693b4">34a693b4</a> -                         idFactory = idFactory,</div>
              ?                                  - -         -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#7a13b5d4">7a13b5d4</a> +                         idFactory=idFactory</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#34a693b4">34a693b4</a> -                         binsize = binsize,</div>
                                    )
                
                                # Third step: we need to fit the relative astrometry.
                                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#716fba30">716fba30</a> -                 # One problem is that the SIP fits are w.r.t. CRPIX,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#716fba30">716fba30</a> -                 # and these coadd patches have the CRPIX of the entire</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#716fba30">716fba30</a> -                 # tract, i.e. off the image.  This causes</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#716fba30">716fba30</a> -                 # register.fitWcs to fail.  A workaround for now is to</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#716fba30">716fba30</a> -                 # re-fit the Wcs which returns with a CRPIX that is on</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#716fba30">716fba30</a> -                 # the image, and *then* to fit for the relative Wcs.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#34fb80a7">34fb80a7</a> -                 #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
383  <a href="#34fb80a7">34fb80a7</a> -                 # Requires low Sip order to avoid overfitting</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#34a693b4">34a693b4</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#34a693b4">34a693b4</a> -                 # useWinter2013Hacks includes us using the deep calexp</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#34a693b4">34a693b4</a> -                 # as the template.  In this case we don't need to</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#34a693b4">34a693b4</a> -                 # refit the Wcs.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#b2f59945">b2f59945</a> -                 if not self.config.useWinter2013Hacks:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#34a693b4">34a693b4</a> -                     sipOrder = self.config.templateSipOrder</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#34a693b4">34a693b4</a> -                     astrometer = measAstrom.Astrometry(measAstrom.MeasAstromConfig(sipOrder=sipOrder))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#34a693b4">34a693b4</a> -                     newWcs = astrometer.determineWcs(templateSources, templateExposure).getWcs()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#34a693b4">34a693b4</a> -                     results = self.register.run(templateSources, newWcs, </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#34a693b4">34a693b4</a> -                                                 templateExposure.getBBox(afwImage.PARENT), selectSources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#34a693b4">34a693b4</a> -                 else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#5c6662a2">5c6662a2</a> -                     if self.config.winter2013WcsShift > 0.0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#4aabcaa3">4aabcaa3</a> -                         offset = afwGeom.Extent2D(self.config.winter2013WcsShift, </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#4aabcaa3">4aabcaa3</a> -                                                   self.config.winter2013WcsShift)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#5c6662a2">5c6662a2</a> -                         cKey = templateSources[0].getTable().getCentroidKey()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#5c6662a2">5c6662a2</a> -                         for source in templateSources:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#5c6662a2">5c6662a2</a> -                             centroid = source.get(cKey)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#5c6662a2">5c6662a2</a> -                             source.set(cKey, centroid+offset)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#5c6662a2">5c6662a2</a> -                     elif self.config.winter2013WcsRms > 0.0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#5c6662a2">5c6662a2</a> -                         cKey = templateSources[0].getTable().getCentroidKey()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#5c6662a2">5c6662a2</a> -                         for source in templateSources:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#25699f48">25699f48</a> -                             offset = afwGeom.Extent2D(self.config.winter2013WcsRms*numpy.random.normal(), </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#25699f48">25699f48</a> -                                                       self.config.winter2013WcsRms*numpy.random.normal())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
407  <a href="#5c6662a2">5c6662a2</a> -                             centroid = source.get(cKey)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
408  <a href="#5c6662a2">5c6662a2</a> -                             source.set(cKey, centroid+offset)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
409  <a href="#5c6662a2">5c6662a2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
410  <a href="#34a693b4">34a693b4</a> -                     results = self.register.run(templateSources, templateExposure.getWcs(),</div>
              ?                 ^^^^^              ^^^     ^^^^                                  ^^  ^  - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#7a13b5d4">7a13b5d4</a> +                 wcsResults = self.fitAstrometry(templateSources, templateExposure, selectSources)</div>
              ?                 ^^^^              ^ ++  +++ + ^                                  ^^^ +++ ^^^^ +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
411  <a href="#34a693b4">34a693b4</a> -                                                 templateExposure.getBBox(afwImage.PARENT), selectSources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
412  <a href="#f85ae88a">f85ae88a</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
413  <a href="#f2250479">f2250479</a> -                 warpedExp = self.register.warpExposure(templateExposure, results.wcs, </div>
              ?                                                                          ^           -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#7a13b5d4">7a13b5d4</a> +                 warpedExp = self.register.warpExposure(templateExposure, wcsResults.wcs,</div>
              ?                                                                          ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
414  <a href="#f85ae88a">f85ae88a</a> -                                             exposure.getWcs(), exposure.getBBox(afwImage.PARENT))</div>
              ?                                                                                 ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#35e3701f">35e3701f</a> +                                             exposure.getWcs(), exposure.getBBox())</div>
                                templateExposure = warpedExp
                
                                # Create debugging outputs on the astrometric
                                # residuals as a function of position.  Persistence
                                # not yet implemented; expected on (I believe) #2636.
                                if self.config.doDebugRegister:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#8fa7cece">8fa7cece</a> +                     # Grab matches to reference catalog</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#8fa7cece">8fa7cece</a> +                     srcToMatch = {x.second.getId() : x.first for x in matches}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#8fa7cece">8fa7cece</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
421  <a href="#b11382d9">b11382d9</a> -                     refCoordKey = results.matches[0].first.getTable().getCoordKey()</div>
              ?                                   ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#7a13b5d4">7a13b5d4</a> +                     refCoordKey = wcsResults.matches[0].first.getTable().getCoordKey()</div>
              ?                                   ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
422  <a href="#b11382d9">b11382d9</a> -                     inCentroidKey = results.matches[0].second.getTable().getCentroidKey()</div>
              ?                                     ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#7a13b5d4">7a13b5d4</a> +                     inCentroidKey = wcsResults.matches[0].second.getTable().getCentroidKey()</div>
              ?                                     ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
423  <a href="#b11382d9">b11382d9</a> -                     sids      = [m.first.getId() for m in results.matches]</div>
              ?                                                           ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#7a13b5d4">7a13b5d4</a> +                     sids      = [m.first.getId() for m in wcsResults.matches]</div>
              ?                                                           ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
424  <a href="#b11382d9">b11382d9</a> -                     positions = [m.first.get(refCoordKey) for m in results.matches]</div>
              ?                                                                    ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#7a13b5d4">7a13b5d4</a> +                     positions = [m.first.get(refCoordKey) for m in wcsResults.matches]</div>
              ?                                                                    ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#b11382d9">b11382d9</a> -                     residuals = [m.first.get(refCoordKey).getOffsetFrom(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#0319fd30">0319fd30</a> +                     residuals = [m.first.get(refCoordKey).getOffsetFrom(wcsResults.wcs.pixelToSky(</div>
              ?                                                                         ++++++++++++++++++++++++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#0319fd30">0319fd30</a> +                                 m.second.get(inCentroidKey))) for m in wcsResults.matches]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#f85ae88a">f85ae88a</a> -                                    results.wcs.pixelToSky(m.second.get(inCentroidKey))) for</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#b11382d9">b11382d9</a> -                                  m in results.matches]</div>
                                    allresids = dict(zip(sids, zip(positions, residuals)))
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#b11382d9">b11382d9</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#8fa7cece">8fa7cece</a> +                     cresiduals = [m.first.get(refCoordKey).getTangentPlaneOffset(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
383  <a href="#0319fd30">0319fd30</a> +                             wcsResults.wcs.pixelToSky(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#0319fd30">0319fd30</a> +                                 m.second.get(inCentroidKey))) for m in wcsResults.matches]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#0319fd30">0319fd30</a> +                     colors    = numpy.array([-2.5*numpy.log10(srcToMatch[x].get("g"))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#0319fd30">0319fd30</a> +                                               + 2.5*numpy.log10(srcToMatch[x].get("r")) </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#0319fd30">0319fd30</a> +                                               for x in sids if x in srcToMatch.keys()])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#0319fd30">0319fd30</a> +                     dlong     = numpy.array([r[0].asArcseconds() for s,r in zip(sids, cresiduals) </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#0319fd30">0319fd30</a> +                                              if s in srcToMatch.keys()])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#0319fd30">0319fd30</a> +                     dlat      = numpy.array([r[1].asArcseconds() for s,r in zip(sids, cresiduals) </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#0319fd30">0319fd30</a> +                                              if s in srcToMatch.keys()])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#0319fd30">0319fd30</a> +                     idx1      = numpy.where(colors<self.sourceSelector.config.grMin)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#0319fd30">0319fd30</a> +                     idx2      = numpy.where((colors>=self.sourceSelector.config.grMin)&</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#0319fd30">0319fd30</a> +                                             (colors<=self.sourceSelector.config.grMax))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#0319fd30">0319fd30</a> +                     idx3      = numpy.where(colors>self.sourceSelector.config.grMax)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#0319fd30">0319fd30</a> +                     rms1Long  = IqrToSigma*(numpy.percentile(dlong[idx1],75)-numpy.percentile(dlong[idx1],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#0319fd30">0319fd30</a> +                     rms1Lat   = IqrToSigma*(numpy.percentile(dlat[idx1],75)-numpy.percentile(dlat[idx1],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#0319fd30">0319fd30</a> +                     rms2Long  = IqrToSigma*(numpy.percentile(dlong[idx2],75)-numpy.percentile(dlong[idx2],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#0319fd30">0319fd30</a> +                     rms2Lat   = IqrToSigma*(numpy.percentile(dlat[idx2],75)-numpy.percentile(dlat[idx2],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#0319fd30">0319fd30</a> +                     rms3Long  = IqrToSigma*(numpy.percentile(dlong[idx3],75)-numpy.percentile(dlong[idx3],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#0319fd30">0319fd30</a> +                     rms3Lat   = IqrToSigma*(numpy.percentile(dlat[idx3],75)-numpy.percentile(dlat[idx3],25))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#0319fd30">0319fd30</a> +                     self.log.info("Blue star offsets'': %.3f %.3f, %.3f %.3f"  % (numpy.median(dlong[idx1]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#0319fd30">0319fd30</a> +                                                                                   rms1Long,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#0319fd30">0319fd30</a> +                                                                                   numpy.median(dlat[idx1]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#0319fd30">0319fd30</a> +                                                                                   rms1Lat))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#0319fd30">0319fd30</a> +                     self.log.info("Green star offsets'': %.3f %.3f, %.3f %.3f"  % (numpy.median(dlong[idx2]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
407  <a href="#0319fd30">0319fd30</a> +                                                                                    rms2Long,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
408  <a href="#0319fd30">0319fd30</a> +                                                                                    numpy.median(dlat[idx2]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
409  <a href="#0319fd30">0319fd30</a> +                                                                                    rms2Lat))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
410  <a href="#0319fd30">0319fd30</a> +                     self.log.info("Red star offsets'': %.3f %.3f, %.3f %.3f"  % (numpy.median(dlong[idx3]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
411  <a href="#0319fd30">0319fd30</a> +                                                                                  rms3Long,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
412  <a href="#0319fd30">0319fd30</a> +                                                                                  numpy.median(dlat[idx3]), </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
413  <a href="#0319fd30">0319fd30</a> +                                                                                  rms3Lat))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
414  <a href="#0319fd30">0319fd30</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
415  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterBlueLongOffsetMedian", numpy.median(dlong[idx1]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
416  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterGreenLongOffsetMedian", numpy.median(dlong[idx2]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterRedLongOffsetMedian", numpy.median(dlong[idx3]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
418  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterBlueLongOffsetStd", rms1Long)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
419  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterGreenLongOffsetStd", rms2Long)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
420  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterRedLongOffsetStd", rms3Long)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
421  <a href="#8fa7cece">8fa7cece</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
422  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterBlueLatOffsetMedian", numpy.median(dlat[idx1]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
423  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterGreenLatOffsetMedian", numpy.median(dlat[idx2]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
424  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterRedLatOffsetMedian", numpy.median(dlat[idx3]))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterBlueLatOffsetStd", rms1Lat)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterGreenLatOffsetStd", rms2Lat)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#8fa7cece">8fa7cece</a> +                     self.metadata.add("RegisterRedLatOffsetStd", rms3Lat)</div>
                
                            # warp template exposure to match exposure,
                            # PSF match template exposure to exposure,
                            # then return the difference
                
                            #Return warped template...  Construct sourceKernelCand list after subtract
                            self.log.info("Subtracting images")
                            subtractRes = self.subtract.subtractExposures(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#3396bf11">3396bf11</a> -                 templateExposure = templateExposure,</div>
              ?                                 - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
436  <a href="#7a13b5d4">7a13b5d4</a> +                 templateExposure=templateExposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
438  <a href="#3396bf11">3396bf11</a> -                 scienceExposure = exposure,</div>
              ?                                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#7a13b5d4">7a13b5d4</a> +                 scienceExposure=exposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
439  <a href="#8d8cadc4">8d8cadc4</a> -                 scienceFwhmPix = scienceSigmaPost * FwhmPerSigma,</div>
              ?                               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
438  <a href="#7a13b5d4">7a13b5d4</a> +                 scienceFwhmPix=scienceSigmaPost * FwhmPerSigma,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
440  <a href="#d5fec3a3">d5fec3a3</a> -                 templateFwhmPix = templateSigma * FwhmPerSigma,</div>
              ?                                - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
439  <a href="#7a13b5d4">7a13b5d4</a> +                 templateFwhmPix=templateSigma * FwhmPerSigma,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
441  <a href="#7135baaf">7135baaf</a> -                 candidateList = kernelSources,</div>
              ?                              - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
440  <a href="#7a13b5d4">7a13b5d4</a> +                 candidateList=kernelSources,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
442  <a href="#716fba30">716fba30</a> -                 convolveTemplate = self.config.convolveTemplate,</div>
              ?                                 - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
441  <a href="#7a13b5d4">7a13b5d4</a> +                 convolveTemplate=self.config.convolveTemplate,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
443  <a href="#716fba30">716fba30</a> -                 doWarping = not self.config.doUseRegister</div>
              ?                          - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
442  <a href="#7a13b5d4">7a13b5d4</a> +                 doWarping=not self.config.doUseRegister</div>
                            )
                            subtractedExposure = subtractRes.subtractedExposure
                
                            if self.config.doWriteMatchedExp:
                                sensorRef.put(subtractRes.matchedExposure, self.config.coaddName + "Diff_matchedExp")
                
                        if self.config.doDetection:
                            self.log.info("Running diaSource detection")
                            if subtractedExposure is None:
                                subtractedExposure = sensorRef.get(subtractedExposureName)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
454  <a href="#08351e79">08351e79</a> -             </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
453  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                            # Get Psf from the appropriate input image if it doesn't exist
                            if not subtractedExposure.hasPsf():
                                if self.config.convolveTemplate:
                                    subtractedExposure.setPsf(exposure.getPsf())
                                else:
                                    if templateExposure is None:
                                        templateExposure, templateSources = self.getTemplate(exposure, sensorRef)
                                    subtractedExposure.setPsf(templateExposure.getPsf())
                
                            # Erase existing detection mask planes
                            mask  = subtractedExposure.getMaskedImage().getMask()
                            mask &= ~(mask.getPlaneBitMask("DETECTED") | mask.getPlaneBitMask("DETECTED_NEGATIVE"))
                
                            table = afwTable.SourceTable.make(self.schema, idFactory)
                            table.setMetadata(self.algMetadata)
                            results = self.detection.makeSourceCatalog(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
471  <a href="#c8209386">c8209386</a> -                 table = table,</div>
              ?                      - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
470  <a href="#7a13b5d4">7a13b5d4</a> +                 table=table,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
472  <a href="#c8209386">c8209386</a> -                 exposure = subtractedExposure,</div>
              ?                         - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
471  <a href="#7a13b5d4">7a13b5d4</a> +                 exposure=subtractedExposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
473  <a href="#81f450d2">81f450d2</a> -                 doSmooth = not self.config.doPreConvolve</div>
              ?                         - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
472  <a href="#7a13b5d4">7a13b5d4</a> +                 doSmooth=not self.config.doPreConvolve</div>
                                )
                
                            if self.config.doMerge:
                                fpSet = results.fpSets.positive
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
478  <a href="#87c7b8d9">87c7b8d9</a> -                 fpSet.merge(results.fpSets.negative, self.config.growFootprint, </div>
              ?                                                                                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
477  <a href="#7a13b5d4">7a13b5d4</a> +                 fpSet.merge(results.fpSets.negative, self.config.growFootprint,</div>
                                            self.config.growFootprint, False)
                                diaSources = afwTable.SourceCatalog(table)
                                fpSet.makeSources(diaSources)
                                self.log.info("Merging detections into %d sources" % (len(diaSources)))
                            else:
                                diaSources = results.sources
                
                            if self.config.doMeasurement:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#06a7e932">06a7e932</a> -                 self.log.info("Running diaSource measurement")</div>
                                if len(diaSources) < self.config.maxDiaSourcesToMeasure:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#8fa7cece">8fa7cece</a> +                     self.log.info("Running diaSource dipole measurement")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
489  <a href="#25699f48">25699f48</a> -                     self.dipolemeasurement.run(subtractedExposure, diaSources)</div>
              ?                                ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
488  <a href="#7a13b5d4">7a13b5d4</a> +                     self.dipoleMeasurement.run(subtractedExposure, diaSources)</div>
              ?                                ^
                                else:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
490  <a href="#8fa7cece">8fa7cece</a> +                     self.log.info("Running diaSource measurement")</div>
                                    self.measurement.run(subtractedExposure, diaSources)
                
                            # Match with the calexp sources if possible
                            if self.config.doMatchSources:
                                if sensorRef.datasetExists("src"):
                                    # Create key,val pair where key=diaSourceId and val=sourceId
                                    matchRadAsec = self.config.diaSourceMatchRadius
                                    matchRadPixel = matchRadAsec / exposure.getWcs().pixelScale().asArcseconds()
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
500  <a href="#40313e54">40313e54</a> -                     # This does not do what I expect so I cobbled together a brute force method in python </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
501  <a href="#786ae9e2">786ae9e2</a> -                     srcMatches = afwTable.matchXy(sensorRef.get("src"), diaSources, matchRadPixel, True) </div>
              ?                                                                                                         -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
500  <a href="#7a13b5d4">7a13b5d4</a> +                     srcMatches = afwTable.matchXy(sensorRef.get("src"), diaSources, matchRadPixel, True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
502  <a href="#786ae9e2">786ae9e2</a> -                     srcMatchDict = dict([(srcMatch.second.getId(), srcMatch.first.getId()) for \</div>
              ?                                                                                                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
501  <a href="#7a13b5d4">7a13b5d4</a> +                     srcMatchDict = dict([(srcMatch.second.getId(), srcMatch.first.getId()) for </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
503  <a href="#786ae9e2">786ae9e2</a> -                                              srcMatch in srcMatches])</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
502  <a href="#7a13b5d4">7a13b5d4</a> +                                          srcMatch in srcMatches])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
504  <a href="#4aabcaa3">4aabcaa3</a> -                     self.log.info("Matched %d / %d diaSources to sources" % (len(srcMatchDict), </div>
              ?                                                                                                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
503  <a href="#7a13b5d4">7a13b5d4</a> +                     self.log.info("Matched %d / %d diaSources to sources" % (len(srcMatchDict),</div>
                                                                                             len(diaSources)))
                                else:
                                    self.log.warn("Src product does not exist; cannot match with diaSources")
                                    srcMatchDict = {}
                
                                # Create key,val pair where key=diaSourceId and val=refId
                                astrometer = measAstrom.Astrometry(measAstrom.MeasAstromConfig(catalogMatchDist=matchRadAsec))
                                astromRet = astrometer.useKnownWcs(diaSources, exposure=exposure)
                                refMatches = astromRet.matches
                                if refMatches is None:
                                    self.log.warn("No diaSource matches with reference catalog")
                                    refMatchDict = {}
                                else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
518  <a href="#4aabcaa3">4aabcaa3</a> -                     self.log.info("Matched %d / %d diaSources to reference catalog" % (len(refMatches), </div>
              ?                                                                                                        -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
517  <a href="#7a13b5d4">7a13b5d4</a> +                     self.log.info("Matched %d / %d diaSources to reference catalog" % (len(refMatches),</div>
                                                                                                       len(diaSources)))
                                    refMatchDict = dict([(refMatch.second.getId(), refMatch.first.getId()) for \
                                                             refMatch in refMatches])
                
                                # Assign source Ids
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
524  <a href="#a9d7eedf">a9d7eedf</a> -                 for diaSource in diaSources:                    </div>
              ?                                             --------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
523  <a href="#7a13b5d4">7a13b5d4</a> +                 for diaSource in diaSources:</div>
                                    sid = diaSource.getId()
                                    if srcMatchDict.has_key(sid):
                                        diaSource.set("srcMatchId", srcMatchDict[sid])
                                    if refMatchDict.has_key(sid):
                                        diaSource.set("refMatchId", refMatchDict[sid])
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
530  <a href="#a9d7eedf">a9d7eedf</a> -                         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
529  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                            if diaSources is not None and self.config.doWriteSources:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
532  <a href="#c1eda085">c1eda085</a> -                 sourceWriteFlags = (0 if self.config.doWriteHeavyFootprintsInSources</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
533  <a href="#c1eda085">c1eda085</a> -                                     else afwTable.SOURCE_IO_NO_HEAVY_FOOTPRINTS)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
534  <a href="#c1eda085">c1eda085</a> -                 sensorRef.put(diaSources, self.config.coaddName + "Diff_diaSrc", flags=sourceWriteFlags)</div>
              ?                                                                                ------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
531  <a href="#e4814d06">e4814d06</a> +                 sensorRef.put(diaSources, self.config.coaddName + "Diff_diaSrc")</div>
                
                            if self.config.doAddMetrics and self.config.doSelectSources:
                                self.log.info("Evaluating metrics and control sample")
                
                                kernelCandList = []
                                for cell in subtractRes.kernelCellSet.getCellList():
                                    for cand in cell.begin(False): # include bad candidates
                                        kernelCandList.append(cast_KernelCandidateF(cand))
                
                                # Get basis list to build control sample kernels
                                basisList = afwMath.cast_LinearCombinationKernel(
                                    kernelCandList[0].getKernel(KernelCandidateF.ORIG)).getKernelList()
                
                                controlCandList = \
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
549  <a href="#b99d7f26">b99d7f26</a> -                     diffimTools.sourceTableToCandList(controlSources, subtractRes.warpedExposure, exposure, </div>
              ?                                                                       --------------------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
546  <a href="#7a13b5d4">7a13b5d4</a> +                     diffimTools.sourceTableToCandidateList(controlSources, </div>
              ?                                                  +++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
547  <a href="#7a13b5d4">7a13b5d4</a> +                                                            subtractRes.warpedExposure, exposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
550  <a href="#b99d7f26">b99d7f26</a> -                                                       self.config.subtract.kernel.active, </div>
              ?                                                                                          -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
548  <a href="#7a13b5d4">7a13b5d4</a> +                                                            self.config.subtract.kernel.active,</div>
              ? +++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
551  <a href="#b99d7f26">b99d7f26</a> -                                                       self.config.subtract.kernel.active.detectionConfig, </div>
              ?                                                                                                          -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
549  <a href="#7a13b5d4">7a13b5d4</a> +                                                            self.config.subtract.kernel.active.detectionConfig,</div>
              ? +++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
552  <a href="#4604772d">4604772d</a> -                                                       self.log, dobuild=True, basisList=basisList)</div>
              ?                                                                   ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
550  <a href="#e4814d06">e4814d06</a> +                                                            self.log, doBuild=True, basisList=basisList)</div>
              ? +++++                                                                  ^
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
554  <a href="#d5fec3a3">d5fec3a3</a> -                 self.kcQa.apply(kernelCandList, subtractRes.psfMatchingKernel, subtractRes.backgroundModel, </div>
              ?                 -----                                                                                      -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
552  <a href="#7a13b5d4">7a13b5d4</a> +                 kcQa.apply(kernelCandList, subtractRes.psfMatchingKernel, subtractRes.backgroundModel,</div>
                                                dof=nparam)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
556  <a href="#b99d7f26">b99d7f26</a> -                 self.kcQa.apply(controlCandList, subtractRes.psfMatchingKernel, subtractRes.backgroundModel)</div>
              ?                 -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
554  <a href="#7a13b5d4">7a13b5d4</a> +                 kcQa.apply(controlCandList, subtractRes.psfMatchingKernel, subtractRes.backgroundModel)</div>
                
                                if self.config.doDetection:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
559  <a href="#b99d7f26">b99d7f26</a> -                     self.kcQa.aggregate(selectSources, self.metadata, allresids, diaSources)</div>
              ?                     -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
557  <a href="#7a13b5d4">7a13b5d4</a> +                     kcQa.aggregate(selectSources, self.metadata, allresids, diaSources)</div>
                                else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
561  <a href="#b99d7f26">b99d7f26</a> -                     self.kcQa.aggregate(selectSources, self.metadata, allresids)</div>
              ?                     -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
559  <a href="#7a13b5d4">7a13b5d4</a> +                     kcQa.aggregate(selectSources, self.metadata, allresids)</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
563  <a href="#b99d7f26">b99d7f26</a> -                 #Persist using butler</div>
                                sensorRef.put(selectSources, self.config.coaddName + "Diff_kernelSrc")
                
                        if self.config.doWriteSubtractedExp:
                            sensorRef.put(subtractedExposure, subtractedExposureName)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
568  <a href="#cca2ffb1">cca2ffb1</a> -  </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
565  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        self.runDebug(exposure, subtractRes, selectSources, kernelSources, diaSources)
                        return pipeBase.Struct(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
571  <a href="#e6833521">e6833521</a> -             subtractedExposure = subtractedExposure,</div>
              ?                               - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
568  <a href="#7a13b5d4">7a13b5d4</a> +             subtractedExposure=subtractedExposure,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
572  <a href="#e6833521">e6833521</a> -             subtractRes = subtractRes,</div>
              ?                        - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
569  <a href="#7a13b5d4">7a13b5d4</a> +             subtractRes=subtractRes,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
573  <a href="#a182cf15">a182cf15</a> -             sources = diaSources,</div>
              ?                    - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
570  <a href="#7a13b5d4">7a13b5d4</a> +             sources=diaSources,</div>
                        )
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
572  <a href="#7135baaf">7135baaf</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
573  <a href="#7a13b5d4">7a13b5d4</a> +     # One problem is that the SIP fits are w.r.t. CRPIX,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
574  <a href="#7a13b5d4">7a13b5d4</a> +     # and these coadd patches have the CRPIX of the entire</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
575  <a href="#7a13b5d4">7a13b5d4</a> +     # tract, i.e. off the image.  This causes</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
576  <a href="#7a13b5d4">7a13b5d4</a> +     # register.fitWcs to fail.  A workaround for now is to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
577  <a href="#7a13b5d4">7a13b5d4</a> +     # re-fit the Wcs which returns with a CRPIX that is on</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
578  <a href="#7a13b5d4">7a13b5d4</a> +     # the image, and *then* to fit for the relative Wcs.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
579  <a href="#7a13b5d4">7a13b5d4</a> +     #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
580  <a href="#7a13b5d4">7a13b5d4</a> +     def fitAstrometry(self, templateSources, templateExposure, selectSources):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
581  <a href="#7a13b5d4">7a13b5d4</a> +         """Fit the relative astrometry between templateSources and selectSources"""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
582  <a href="#7a13b5d4">7a13b5d4</a> +         sipOrder = self.config.templateSipOrder</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
583  <a href="#7a13b5d4">7a13b5d4</a> +         astrometer = measAstrom.Astrometry(measAstrom.MeasAstromConfig(sipOrder=sipOrder))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
584  <a href="#7a13b5d4">7a13b5d4</a> +         newWcs = astrometer.determineWcs(templateSources, templateExposure).getWcs()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
585  <a href="#7a13b5d4">7a13b5d4</a> +         results = self.register.run(templateSources, newWcs,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
586  <a href="#35e3701f">35e3701f</a> +                                     templateExposure.getBBox(), selectSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
587  <a href="#7a13b5d4">7a13b5d4</a> +         return results</div>
                
                    def runDebug(self, exposure, subtractRes, selectSources, kernelSources, diaSources):
                        import lsstDebug
                        import lsst.afw.display.ds9 as ds9
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
579  <a href="#7135baaf">7135baaf</a> -         display = lsstDebug.Info(__name__).display </div>
              ?                                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
592  <a href="#7a13b5d4">7a13b5d4</a> +         display = lsstDebug.Info(__name__).display</div>
                        showSubtracted = lsstDebug.Info(__name__).showSubtracted
                        showPixelResiduals = lsstDebug.Info(__name__).showPixelResiduals
                        showDiaSources = lsstDebug.Info(__name__).showDiaSources
                        showDipoles = lsstDebug.Info(__name__).showDipoles
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
584  <a href="#08351e79">08351e79</a> -         maskTransparency = lsstDebug.Info(__name__).maskTransparency   </div>
              ?                                                                     ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
597  <a href="#7a13b5d4">7a13b5d4</a> +         maskTransparency = lsstDebug.Info(__name__).maskTransparency</div>
                        if not maskTransparency:
                            maskTransparency = 0
                        ds9.setMaskTransparency(maskTransparency)
                
                        if display and showSubtracted:
                            ds9.mtv(subtractRes.subtractedExposure, frame=lsstDebug.frame, title="Subtracted image")
                            mi = subtractRes.subtractedExposure.getMaskedImage()
                            x0, y0 = mi.getX0(), mi.getY0()
                            with ds9.Buffering():
                                for s in diaSources:
                                    x, y = s.getX() - x0, s.getY() - y0
                                    ctype = "red" if s.get("flags.negative") else "yellow"
                                    if (s.get("flags.pixel.interpolated.center") or s.get("flags.pixel.saturated.center") or
                                        s.get("flags.pixel.cr.center")):
                                        ptype = "x"
                                    elif (s.get("flags.pixel.interpolated.any") or s.get("flags.pixel.saturated.any") or
                                          s.get("flags.pixel.cr.any")):
                                        ptype = "+"
                                    else:
                                        ptype = "o"
                                    ds9.dot(ptype, x, y, size=4, frame=lsstDebug.frame, ctype=ctype)
                            lsstDebug.frame += 1
                
                        if display and showPixelResiduals and selectSources:
                            import lsst.ip.diffim.utils as diUtils
                            nonKernelSources = []
                            for source in selectSources:
                                if not source in kernelSources:
                                    nonKernelSources.append(source)
                
                            diUtils.plotPixelResiduals(exposure,
                                                       subtractRes.warpedExposure,
                                                       subtractRes.subtractedExposure,
                                                       subtractRes.kernelCellSet,
                                                       subtractRes.psfMatchingKernel,
                                                       subtractRes.backgroundModel,
                                                       nonKernelSources,
                                                       self.subtract.config.kernel.active.detectionConfig,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
623  <a href="#7135baaf">7135baaf</a> -                                        origVariance = False)</div>
              ?                                                    - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
636  <a href="#7a13b5d4">7a13b5d4</a> +                                        origVariance=False)</div>
                            diUtils.plotPixelResiduals(exposure,
                                                       subtractRes.warpedExposure,
                                                       subtractRes.subtractedExposure,
                                                       subtractRes.kernelCellSet,
                                                       subtractRes.psfMatchingKernel,
                                                       subtractRes.backgroundModel,
                                                       nonKernelSources,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
631  <a href="#7135baaf">7135baaf</a> -                                        self.subtract.config.kernel.active.detectionConfig, </div>
              ?                                                                                           -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
644  <a href="#7a13b5d4">7a13b5d4</a> +                                        self.subtract.config.kernel.active.detectionConfig,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
632  <a href="#7135baaf">7135baaf</a> -                                        origVariance = True)</div>
              ?                                                    - -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
645  <a href="#7a13b5d4">7a13b5d4</a> +                                        origVariance=True)</div>
                        if display and showDiaSources:
                            import lsst.ip.diffim.utils as diUtils
                            flagChecker   = SourceFlagChecker(diaSources)
                            isFlagged     = [flagChecker(x) for x in diaSources]
                            isDipole      = [x.get("classification.dipole") for x in diaSources]
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
638  <a href="#87c7b8d9">87c7b8d9</a> -             diUtils.showDiaSources(diaSources, subtractRes.subtractedExposure, isFlagged, isDipole, </div>
              ?                                                                                                    -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
651  <a href="#7a13b5d4">7a13b5d4</a> +             diUtils.showDiaSources(diaSources, subtractRes.subtractedExposure, isFlagged, isDipole,</div>
                                                   frame=lsstDebug.frame)
                            lsstDebug.frame += 1
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
641  <a href="#7135baaf">7135baaf</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
654  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        if display and showDipoles:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
643  <a href="#87c7b8d9">87c7b8d9</a> -             DipoleAnalysis().displayDipoles(subtractRes.subtractedExposure, diaSources, </div>
              ?                                                                                        -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
656  <a href="#7a13b5d4">7a13b5d4</a> +             DipoleAnalysis().displayDipoles(subtractRes.subtractedExposure, diaSources,</div>
                                                            frame=lsstDebug.frame)
                            lsstDebug.frame += 1
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
647  <a href="#e264215e">e264215e</a> -     # Stolen from detection.py</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
648  <a href="#e264215e">e264215e</a> -     def setEdgeBits(self, maskedImage, goodBBox, edgeBitmask):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
649  <a href="#e264215e">e264215e</a> -         """Set the edgeBitmask bits for all of maskedImage outside goodBBox"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
650  <a href="#e264215e">e264215e</a> -         msk = maskedImage.getMask()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
651  <a href="#e264215e">e264215e</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
652  <a href="#e264215e">e264215e</a> -         mx0, my0 = maskedImage.getXY0()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
653  <a href="#e264215e">e264215e</a> -         for x0, y0, w, h in ([0, 0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
654  <a href="#e264215e">e264215e</a> -                               msk.getWidth(), goodBBox.getBeginY() - my0],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
655  <a href="#e264215e">e264215e</a> -                              [0, goodBBox.getEndY() - my0, msk.getWidth(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
656  <a href="#e264215e">e264215e</a> -                               maskedImage.getHeight() - (goodBBox.getEndY() - my0)],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
657  <a href="#e264215e">e264215e</a> -                              [0, 0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
658  <a href="#e264215e">e264215e</a> -                               goodBBox.getBeginX() - mx0, msk.getHeight()],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
659  <a href="#e264215e">e264215e</a> -                              [goodBBox.getEndX() - mx0, 0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
660  <a href="#e264215e">e264215e</a> -                               maskedImage.getWidth() - (goodBBox.getEndX() - mx0), msk.getHeight()],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
661  <a href="#e264215e">e264215e</a> -                              ):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
662  <a href="#e264215e">e264215e</a> -             edgeMask = msk.Factory(msk, afwGeom.BoxI(afwGeom.PointI(x0, y0),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
663  <a href="#e264215e">e264215e</a> -                                                      afwGeom.ExtentI(w, h)), afwImage.LOCAL)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
664  <a href="#e264215e">e264215e</a> -             edgeMask |= edgeBitmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
665  <a href="#e264215e">e264215e</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
666  <a href="#eb739dcd">eb739dcd</a> -             </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
667  <a href="#eb739dcd">eb739dcd</a> -            </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
668  <a href="#bb3464a0">bb3464a0</a> -     def getTemplate(self, exposure, sensorRef, border=10):</div>
              ?                                              -----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
660  <a href="#7a13b5d4">7a13b5d4</a> +     def getTemplate(self, exposure, sensorRef):</div>
                        """Return a template coadd exposure that overlaps the exposure
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
670  <a href="#e6833521">e6833521</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
662  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        @param[in] exposure: exposure
                        @param[in] sensorRef: a Butler data reference that can be used to obtain coadd data
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
673  <a href="#bb3464a0">bb3464a0</a> -         @param[in] border: number of pixels to grow border (e.g. margin for warping)</div>
                
                        @return coaddExposure: a template coadd exposure assembled out of patches
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
677  <a href="#34a693b4">34a693b4</a> -         if self.config.useWinter2013Hacks:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
678  <a href="#b2f59945">b2f59945</a> -             self.log.warn("USING WINTER2013 HACK: DEEP CALEXP AS TEMPLATE")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
679  <a href="#34a693b4">34a693b4</a> -             templateId = type(sensorRef.dataId)(sensorRef.dataId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
680  <a href="#34a693b4">34a693b4</a> -             templateId["visit"] = self.config.winter2013templateId</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
681  <a href="#34a693b4">34a693b4</a> -             template = sensorRef.getButler().get(datasetType="calexp", dataId = templateId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
682  <a href="#25d24daf">25d24daf</a> -             if self.config.doAddCalexpBackground:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
683  <a href="#25d24daf">25d24daf</a> -                 templateBg = sensorRef.getButler().get(datasetType="calexpBackground", dataId = templateId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
684  <a href="#25d24daf">25d24daf</a> -                 mi = template.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
685  <a href="#25d24daf">25d24daf</a> -                 mi += templateBg</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
686  <a href="#34a693b4">34a693b4</a> -             templatePsf = sensorRef.getButler().get(datasetType="psf", dataId = templateId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
687  <a href="#34a693b4">34a693b4</a> -             template.setPsf(templatePsf)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
688  <a href="#34a693b4">34a693b4</a> -             templateSources = sensorRef.getButler().get(datasetType="src", dataId = templateId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
689  <a href="#25699f48">25699f48</a> -             return template, templateSources</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
690  <a href="#34a693b4">34a693b4</a> - </div>
                        skyMap = sensorRef.get(datasetType=self.config.coaddName + "Coadd_skyMap")
                        expWcs = exposure.getWcs()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
693  <a href="#e6833521">e6833521</a> -         expBoxD = afwGeom.Box2D(exposure.getBBox(afwImage.PARENT))</div>
              ?                                                  ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
670  <a href="#35e3701f">35e3701f</a> +         expBoxD = afwGeom.Box2D(exposure.getBBox())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
694  <a href="#bb3464a0">bb3464a0</a> -         expBoxD.grow(border)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
671  <a href="#7a13b5d4">7a13b5d4</a> +         expBoxD.grow(self.config.templateBorderSize)</div>
                        ctrSkyPos = expWcs.pixelToSky(expBoxD.getCenter())
                        tractInfo = skyMap.findTract(ctrSkyPos)
                        self.log.info("Using skyMap tract %s" % (tractInfo.getId(),))
                        skyCorners = [expWcs.pixelToSky(pixPos) for pixPos in expBoxD.getCorners()]
                        patchList = tractInfo.findPatchList(skyCorners)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
700  <a href="#bb3464a0">bb3464a0</a> -             </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
677  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        if not patchList:
                            raise RuntimeError("No suitable tract found")
                        self.log.info("Assembling %s coadd patches" % (len(patchList),))
                
                        # compute coadd bbox
                        coaddWcs = tractInfo.getWcs()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
707  <a href="#bb3464a0">bb3464a0</a> -         coaddBBoxD = afwGeom.Box2D()</div>
              ?                  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
684  <a href="#7a13b5d4">7a13b5d4</a> +         coaddBBox = afwGeom.Box2D()</div>
                        for skyPos in skyCorners:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
709  <a href="#bb3464a0">bb3464a0</a> -             coaddBBoxD.include(coaddWcs.skyToPixel(skyPos))</div>
              ?                      -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
686  <a href="#7a13b5d4">7a13b5d4</a> +             coaddBBox.include(coaddWcs.skyToPixel(skyPos))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
710  <a href="#bb3464a0">bb3464a0</a> -         coaddBBox = afwGeom.Box2I(coaddBBoxD)</div>
              ?                                            -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
687  <a href="#7a13b5d4">7a13b5d4</a> +         coaddBBox = afwGeom.Box2I(coaddBBox)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
711  <a href="#bb3464a0">bb3464a0</a> -         del coaddBBoxD # no longer needed and could be confused with coaddBBox</div>
                        self.log.info("exposure dimensions=%s; coadd dimensions=%s" % \
                            (exposure.getDimensions(), coaddBBox.getDimensions()))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
714  <a href="#e6833521">e6833521</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
690  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        # assemble coadd exposure from subregions of patches
                        coaddExposure = afwImage.ExposureF(coaddBBox, coaddWcs)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
693  <a href="#c893f6c4">c893f6c4</a> +         edgeMask = afwImage.MaskU.getPlaneBitMask("EDGE")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
717  <a href="#8c76c6d8">8c76c6d8</a> -         coaddExposure.getMaskedImage().set(numpy.nan, afwImage.MaskU.getPlaneBitMask("NO_DATA"), numpy.nan)</div>
              ?                                                       ^^^^^^  -    ----------------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
694  <a href="#8d8cadc4">8d8cadc4</a> +         coaddExposure.getMaskedImage().set(numpy.nan, edgeMask, numpy.nan)</div>
              ?                                                       ^^
                        nPatchesFound = 0
                        coaddFilter = None
                        coaddPsf = None
                        coaddSources = None
                        for patchInfo in patchList:
                            patchSubBBox = patchInfo.getOuterBBox()
                            patchSubBBox.clip(coaddBBox)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
702  <a href="#c2bcddad">c2bcddad</a> +             patchArgDict = dict(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
703  <a href="#7a13b5d4">7a13b5d4</a> +                 datasetType=self.config.coaddName + "Coadd_sub",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
704  <a href="#7a13b5d4">7a13b5d4</a> +                 bbox=patchSubBBox,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
705  <a href="#7a13b5d4">7a13b5d4</a> +                 tract=tractInfo.getId(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
706  <a href="#7a13b5d4">7a13b5d4</a> +                 patch="%s,%s" % (patchInfo.getIndex()[0], patchInfo.getIndex()[1]),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
707  <a href="#e6833521">e6833521</a> +             )</div>
                            if patchSubBBox.isEmpty():
                                self.log.info("skip tract=%(tract)s; no overlapping pixels" % patchArgDict)
                                continue
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
728  <a href="#c2bcddad">c2bcddad</a> -             patchArgDict = dict(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
729  <a href="#bb3464a0">bb3464a0</a> -                 datasetType = self.config.coaddName + "Coadd_sub",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
730  <a href="#bb3464a0">bb3464a0</a> -                 bbox = patchSubBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
731  <a href="#d2997843">d2997843</a> -                 imageOrigin = "PARENT",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
732  <a href="#e6833521">e6833521</a> -                 tract = tractInfo.getId(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
733  <a href="#e6833521">e6833521</a> -                 patch = "%s,%s" % (patchInfo.getIndex()[0], patchInfo.getIndex()[1]),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
734  <a href="#e6833521">e6833521</a> -             )</div>
                            if not sensorRef.datasetExists(**patchArgDict):
                                self.log.warn("%(datasetType)s, tract=%(tract)s, patch=%(patch)s does not exist" \
                                                  % patchArgDict)
                                continue
                
                            nPatchesFound += 1
                            self.log.info("Reading patch %s" % patchArgDict)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
742  <a href="#8c78fd0c">8c78fd0c</a> -             coaddPatch = sensorRef.get(immediate=True, **patchArgDict)</div>
              ?                                                      ----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
718  <a href="#e4814d06">e4814d06</a> +             coaddPatch = sensorRef.get(patchArgDict, immediate=True)</div>
              ?                                        ++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
743  <a href="#e6833521">e6833521</a> -             coaddView = afwImage.MaskedImageF(coaddExposure.getMaskedImage(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
719  <a href="#35e3701f">35e3701f</a> +             coaddView = afwImage.MaskedImageF(coaddExposure.getMaskedImage(), coaddPatch.getBBox())</div>
              ?                                                                              ++++++++++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
744  <a href="#bb3464a0">bb3464a0</a> -                 coaddPatch.getBBox(afwImage.PARENT), afwImage.PARENT)</div>
                            coaddView <<= coaddPatch.getMaskedImage()
                            if coaddFilter is None:
                                coaddFilter = coaddPatch.getFilter()
                
                            # Retrieve the PSF for this coadd tract, if not already retrieved
                            if coaddPsf is None and coaddPatch.hasPsf():
                                coaddPsf = coaddPatch.getPsf()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
752  <a href="#e6833521">e6833521</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
727  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                        if nPatchesFound == 0:
                            raise RuntimeError("No patches found!")
                
                        if coaddPsf is None:
                            raise RuntimeError("No coadd Psf found!")
                
                        coaddExposure.setPsf(coaddPsf)
                        coaddExposure.setFilter(coaddFilter)
                        return coaddExposure, coaddSources
                
                    def _getConfigName(self):
                        """Return the name of the config dataset
                        """
                        return "%sDiff_config" % (self.config.coaddName,)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
767  <a href="#c2bcddad">c2bcddad</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
742  <a href="#7a13b5d4">7a13b5d4</a> + </div>
                    def _getMetadataName(self):
                        """Return the name of the metadata dataset
                        """
                        return "%sDiff_metadata" % (self.config.coaddName,)
                
                    def getSchemaCatalogs(self):
                        """Return a dict of empty catalogs for each catalog dataset produced by this task."""
                        diaSrc = afwTable.SourceCatalog(self.schema)
                        diaSrc.getTable().setMetadata(self.algMetadata)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
777  <a href="#43a7016f">43a7016f</a> -         return {self.config.coaddName + "Diff_diaSrc_shema": diaSrc}</div>
              ?                                                     ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
752  <a href="#e4814d06">e4814d06</a> +         return {self.config.coaddName + "Diff_diaSrc": diaSrc}</div>
                
                    @classmethod
                    def _makeArgumentParser(cls):
                        """Create an argument parser
                        """
                        parser = pipeBase.ArgumentParser(name=cls._DefaultName)
                        parser.add_id_argument("--id", "calexp", help="data ID, e.g. --id visit=12345 ccd=1,2")
                        return parser
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
761  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
762  <a href="#7a13b5d4">7a13b5d4</a> + class Winter2013ImageDifferenceConfig(ImageDifferenceConfig):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
763  <a href="#7a13b5d4">7a13b5d4</a> +     winter2013TemplateId = pexConfig.Field(dtype=int, default=88868666,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
764  <a href="#7a13b5d4">7a13b5d4</a> +         doc="88868666 for sparse data; 22222200 (g) and 11111100 (i) for dense data") </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
765  <a href="#7a13b5d4">7a13b5d4</a> +     winter2013WcsShift = pexConfig.Field(dtype=float, default=0.0,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
766  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Shift stars going into RegisterTask by this amount")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
767  <a href="#7a13b5d4">7a13b5d4</a> +     winter2013WcsRms = pexConfig.Field(dtype=float, default=0.0,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
768  <a href="#7a13b5d4">7a13b5d4</a> +         doc="Perturb stars going into RegisterTask by this amount")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
769  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
770  <a href="#7a13b5d4">7a13b5d4</a> + class Winter2013ImageDifferenceTask(ImageDifferenceTask):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
771  <a href="#7a13b5d4">7a13b5d4</a> +     ConfigClass = Winter2013ImageDifferenceConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
772  <a href="#7a13b5d4">7a13b5d4</a> +     _DefaultName = "winter2013ImageDifference"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
773  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
774  <a href="#7a13b5d4">7a13b5d4</a> +     def __init__(self, **kwargs):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
775  <a href="#7a13b5d4">7a13b5d4</a> +           ImageDifferenceTask.__init__(self, **kwargs)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
776  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
777  <a href="#7a13b5d4">7a13b5d4</a> +     def getTemplate(self, exposure, sensorRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
778  <a href="#7a13b5d4">7a13b5d4</a> +         """Return a template coadd exposure that overlaps the exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
779  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
780  <a href="#7a13b5d4">7a13b5d4</a> +         @param[in] exposure: exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
781  <a href="#7a13b5d4">7a13b5d4</a> +         @param[in] sensorRef: a Butler data reference that can be used to obtain coadd data</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
782  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
783  <a href="#7a13b5d4">7a13b5d4</a> +         @return coaddExposure: a template coadd exposure assembled out of patches</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
784  <a href="#7a13b5d4">7a13b5d4</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
785  <a href="#7a13b5d4">7a13b5d4</a> +         # Using a deep simulated calexp instead of a coadd</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
786  <a href="#7a13b5d4">7a13b5d4</a> +         self.log.warn("USING WINTER2013 : DEEP CALEXP AS TEMPLATE")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
787  <a href="#7a13b5d4">7a13b5d4</a> +         templateId = type(sensorRef.dataId)(sensorRef.dataId)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
788  <a href="#7a13b5d4">7a13b5d4</a> +         templateId["visit"] = self.config.winter2013TemplateId</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
789  <a href="#7a13b5d4">7a13b5d4</a> +         template = sensorRef.getButler().get(datasetType="calexp", dataId=templateId)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
790  <a href="#7a13b5d4">7a13b5d4</a> +         if self.config.doAddCalexpBackground:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
791  <a href="#7a13b5d4">7a13b5d4</a> +             templateBg = sensorRef.getButler().get(datasetType="calexpBackground", dataId=templateId)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
792  <a href="#7a13b5d4">7a13b5d4</a> +             mi = template.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
793  <a href="#7a13b5d4">7a13b5d4</a> +             mi += templateBg</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
794  <a href="#e4814d06">e4814d06</a> +         if not template.hasPsf():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
795  <a href="#e4814d06">e4814d06</a> +             raise pipeBase.TaskError("Template has no psf")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
796  <a href="#7a13b5d4">7a13b5d4</a> +         templateSources = sensorRef.getButler().get(datasetType="src", dataId=templateId)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
797  <a href="#7a13b5d4">7a13b5d4</a> +         return template, templateSources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
798  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
799  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
800  <a href="#7a13b5d4">7a13b5d4</a> +     def fitAstrometry(self, templateSources, templateExposure, selectSources):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
801  <a href="#7a13b5d4">7a13b5d4</a> +         """Fit the relative astrometry between templateSources and selectSources"""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
802  <a href="#7a13b5d4">7a13b5d4</a> +         if self.config.winter2013WcsShift > 0.0:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
803  <a href="#7a13b5d4">7a13b5d4</a> +             offset = afwGeom.Extent2D(self.config.winter2013WcsShift,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
804  <a href="#7a13b5d4">7a13b5d4</a> +                                       self.config.winter2013WcsShift)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
805  <a href="#7a13b5d4">7a13b5d4</a> +             cKey = templateSources[0].getTable().getCentroidKey()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
806  <a href="#7a13b5d4">7a13b5d4</a> +             for source in templateSources:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
807  <a href="#7a13b5d4">7a13b5d4</a> +                 centroid = source.get(cKey)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
808  <a href="#7a13b5d4">7a13b5d4</a> +                 source.set(cKey, centroid+offset)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
809  <a href="#7a13b5d4">7a13b5d4</a> +         elif self.config.winter2013WcsRms > 0.0:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
810  <a href="#7a13b5d4">7a13b5d4</a> +             cKey = templateSources[0].getTable().getCentroidKey()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
811  <a href="#7a13b5d4">7a13b5d4</a> +             for source in templateSources:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
812  <a href="#7a13b5d4">7a13b5d4</a> +                 offset = afwGeom.Extent2D(self.config.winter2013WcsRms*numpy.random.normal(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
813  <a href="#7a13b5d4">7a13b5d4</a> +                                           self.config.winter2013WcsRms*numpy.random.normal())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
814  <a href="#7a13b5d4">7a13b5d4</a> +                 centroid = source.get(cKey)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
815  <a href="#7a13b5d4">7a13b5d4</a> +                 source.set(cKey, centroid+offset)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
816  <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
817  <a href="#7a13b5d4">7a13b5d4</a> +         results = self.register.run(templateSources, templateExposure.getWcs(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
818  <a href="#35e3701f">35e3701f</a> +                                     templateExposure.getBBox(), selectSources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
819  <a href="#7a13b5d4">7a13b5d4</a> +         return results</div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="adba3dc0"/></a>adba3dc0</h3>

<pre>
commit adba3dc0211bbddb4871359b39d86552e2091e9a
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Feb 13 16:19:04 2013 -0800

    Modified imageDifference.py to use a control sample, controllable by 2 config paramters, and to use the diUtils class KernelCandidateQa.  #2636
</pre>
<h3><a name="17714837"/></a>17714837</h3>

<pre>
commit 177148372b8e70643e9eef3f6b500d0f1750dc2d
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Jan 24 08:07:31 2013 -0800

    Partial implementation
</pre>
<h3><a name="d5fec3a3"/></a>d5fec3a3</h3>

<pre>
commit d5fec3a333e3129c3f446ee211d5575c88464b9c
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 19 10:55:44 2013 -0800

    Adding in template FWHM calculation.  #2636
</pre>
<h3><a name="a9d7eedf"/></a>a9d7eedf</h3>

<pre>
commit a9d7eedff50a13fe813830e4b6a3876cc9e1ac07
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 26 20:41:42 2013 -0600

    additional logging into
</pre>
<h3><a name="bb3464a0"/></a>bb3464a0</h3>

<pre>
commit bb3464a07726996caecad9d2f3d4ab03b9c137b1
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Feb 21 08:31:27 2013 -0800

    Fix computation of patch sub bbox
</pre>
<h3><a name="b83e97a1"/></a>b83e97a1</h3>

<pre>
commit b83e97a18ce509388ccaed1ef1ef2ee9e648cb26
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 11 17:01:02 2013 -0700

    Change name of filtered flux measurement to match final name (flux.peakLikelihood).
</pre>
<h3><a name="06a7e932"/></a>06a7e932</h3>

<pre>
commit 06a7e932365817fc38232d1248266e19ffe372a3
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Feb 20 10:05:04 2013 -0800

    Removing option to optionally measure dipoles.  Added debugging info.  #2636
</pre>
<h3><a name="0e9740e7"/></a>0e9740e7</h3>

<pre>
commit 0e9740e787b26d2efb1f1c8e8ebd52092378a4e8
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Oct 16 15:51:31 2012 -0700

    Partial response to review
</pre>
<h3><a name="2fda2bb7"/></a>2fda2bb7</h3>

<pre>
commit 2fda2bb72033f2d4c902b902a407470919a4b705
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 26 12:59:57 2013 -0600

    Fixed use of PsfAttr
</pre>
<h3><a name="eb739dcd"/></a>eb739dcd</h3>

<pre>
commit eb739dcd510efccf131b40209afa4439324387fe
Author: Andy Becker <acbecker@gmail.com>
Date:   Fri Feb 8 11:06:53 2013 -0800

    Retooled the task to use DipoleMeasurementTask instead of SourceMeasurementTask.
    Also, changing the default detection thresholdType  to "pixel_stdev" but this is slightly premature optimization.  It is probably the correct solution though.  #2595
</pre>
<h3><a name="81f450d2"/></a>81f450d2</h3>

<pre>
commit 81f450d22e1f0c171c1e41ad6d502591daca328c
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Feb 4 15:07:02 2013 -0800

    Removed unnecessary deblending config, replaced with functionality to merge the positive and negative footprints with a grow option.  #2595
</pre>
<h3><a name="ddeafd2e"/></a>ddeafd2e</h3>

<pre>
commit ddeafd2edaffb85f2e92d5c46091e0bb2641c3a6
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 14 18:04:27 2012 -0500

    Persist the matched exposure (requires ip_diffIm tickets/2317).
    Call ImagePsfMatchTask.subtractExposures instead of .run
</pre>
<h3><a name="3396bf11"/></a>3396bf11</h3>

<pre>
commit 3396bf118b36c873f5e406ab92da880dadb6cac1
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Jan 8 14:46:27 2013 -0800

    Responding to variable name change in ip_diffim.
</pre>
<h3><a name="6bd10594"/></a>6bd10594</h3>

<pre>
commit 6bd1059499cb1ef89e957f8d0503356defe62fac
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Sep 18 15:09:16 2012 -0500

    Add command line option for Psf FWHM, and swapping which image gets convolved (deconvolution)
</pre>
<h3><a name="b11382d9"/></a>b11382d9</h3>

<pre>
commit b11382d94d165576daad542adc7ecd742aa02b92
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 12 12:28:52 2013 -0800

    Creationn of output debugging metric of astrometric residuals.  Persistence will wait for Simon.  #2650
</pre>
<h3><a name="5c6662a2"/></a>5c6662a2</h3>

<pre>
commit 5c6662a26c17445c5392748b9ce6db55abeadd20
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Mar 12 17:22:29 2013 -0500

    Added option to tweak centroids going into Wcs.  #2636
</pre>
<h3><a name="7135baaf"/></a>7135baaf</h3>

<pre>
commit 7135baafc0a1558df2f9ea540dec1fcf98731f40
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 3 13:51:59 2012 -0500

    debugging hooks for ip_diffim.
</pre>
<h3><a name="b48024fd"/></a>b48024fd</h3>

<pre>
commit b48024fd94b7e4caa2b3eb274cb168a21d9f4c68
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Jan 7 15:02:59 2013 -0800

    Rename swapImageToConvolve to convolveTemplate
</pre>
<h3><a name="4aabcaa3"/></a>4aabcaa3</h3>

<pre>
commit 4aabcaa31690c65e1b2aec2ce4325c0b952d2523
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Apr 4 11:27:05 2013 -0700

    Line length modifications.
</pre>
<h3><a name="d2997843"/></a>d2997843</h3>

<pre>
commit d2997843ddb07272f90a04687c50cdb24b1d6de7
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Feb 21 14:29:07 2013 -0600

    Fix a bug in getTemplate; it now seems to work
</pre>
<h3><a name="25d24daf"/></a>25d24daf</h3>

<pre>
commit 25d24dafef84add5838dddffd4fb9844be77a4c5
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Mar 6 18:23:01 2013 -0600

    If not self.config.doAddCalexpBackground, don't add BG back into template either.  #2636
</pre>
<h3><a name="b99d7f26"/></a>b99d7f26</h3>

<pre>
commit b99d7f262adf2b57f1636f2068b156f7e8796e19
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 19 08:07:28 2013 -0800

    Added persistence of WCS residuals
</pre>
<h3><a name="c0cd0c03"/></a>c0cd0c03</h3>

<pre>
commit c0cd0c03f0daf758dbb8b7042c03ee7a1bc21bc6
Merge: 87c7b8d 7c9b38d
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Feb 13 10:04:43 2013 -0800

    Merge branch 'master' into tickets/2595.  Resolved minor conflit.
    Fixed doc string of doAddCalexpBackground.
    
    Conflicts:
    	python/lsst/pipe/tasks/imageDifference.py
</pre>
<h3><a name="8d8cadc4"/></a>8d8cadc4</h3>

<pre>
commit 8d8cadc455f263683ac525ce5267c5fd31226731
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jan 25 19:15:29 2013 -0600

    Pass expanded science sigma to image subtraction subtask
</pre>
<h3><a name="e6833521"/></a>e6833521</h3>

<pre>
commit e6833521e2ccf38d1053cb0cb69095cabf8f3c73
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Sep 13 16:28:21 2012 -0700

    First cut.
</pre>
<h3><a name="e264215e"/></a>e264215e</h3>

<pre>
commit e264215e326a6fca2567dc189d0f73e582fb5bb3
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Mar 6 19:54:57 2013 -0600

    Allow the user to ignore border pixels in the fitting.  #2636
</pre>
<h3><a name="3de30b63"/></a>3de30b63</h3>

<pre>
commit 3de30b63898e1bdc3c60c70406385e802047e307
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Fri Feb 15 09:12:27 2013 -0800

    Added log to the stats class
</pre>
<h3><a name="40313e54"/></a>40313e54</h3>

<pre>
commit 40313e54d4da988879255d9f739649e71ad3b544
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 26 18:36:17 2013 -0800

    Modified to use brute for source catalog matching
</pre>
<h3><a name="5eb58011"/></a>5eb58011</h3>

<pre>
commit 5eb580119b3c296ddc210196542ef9ccb5b26617
Author: Dustin Lang <dstndstn@gmail.com>
Date:   Mon Jun 10 11:34:11 2013 -0400

    SourceDeblendTask moved to meas_deblender
</pre>
<h3><a name="c2bcddad"/></a>c2bcddad</h3>

<pre>
commit c2bcddad774e3dd9d12e0240039984e073f90bfb
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 14 14:53:46 2012 -0500

    Bug fixes to imageDifference.py and updates for enhanced mapper.
</pre>
<h3><a name="d79e20c1"/></a>d79e20c1</h3>

<pre>
commit d79e20c15709006962ce99ca432dc92b2a1cf878
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 19 13:47:15 2013 -0800

    If measurement is turned off, do not modify measurment attribute of task.  #2636
</pre>
<h3><a name="786ae9e2"/></a>786ae9e2</h3>

<pre>
commit 786ae9e268e7f5ab84a2bcdc1cf75b623d737da3
Author: Andy Becker <acbecker@gmail.com>
Date:   Fri Apr 5 14:02:17 2013 -0700

    Reverted to afwTable.matchXy instead of diUtils.matchXY.  THe former was failing early in production, but was fixed.  We ran the production using diUtils.matchXY, for completeness.
</pre>
<h3><a name="465e431a"/></a>465e431a</h3>

<pre>
commit 465e431a59f36f22dc1944b391f4207444af4952
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 19 14:20:46 2013 -0800

    Added option to not perform DipoleMeasurement if source list too long.  #2636
</pre>
<h3><a name="4604772d"/></a>4604772d</h3>

<pre>
commit 4604772df7197a9e0f5fa9da22e3e4eca2649b6b
Author: Andy Becker <acbecker@gmail.com>
Date:   Fri Feb 22 17:06:35 2013 -0800

    Working in MSE residuals for kernel and diffim resids.  #2636
</pre>
<h3><a name="8c78fd0c"/></a>8c78fd0c</h3>

<pre>
commit 8c78fd0cb3da7bd2e790d1757d1867f4d512218b
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jun 2 10:33:18 2014 -0400

    imageDifference: fix syntax error
    
    Now it compiles and you can get help.
</pre>
<h3><a name="34a693b4"/></a>34a693b4</h3>

<pre>
commit 34a693b48053af54640f5da9eae477d838de3166
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Feb 28 12:06:31 2013 -0800

    Winter2013-only hack to use the deep calexp as the template.  Sorry, but it had to be done.  #2636
</pre>
<h3><a name="25699f48"/></a>25699f48</h3>

<pre>
commit 25699f48be8a19f2c13d45e3701750bea06e4444
Merge: ff907a7 2e27e74
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 23 16:23:45 2013 -0400

    Merge branch 'next' into u/price/master
    
    Conflicts:
    	python/lsst/pipe/tasks/imageDifference.py
    
    These conflicts were generally resolved preferring the features:
    * master: lots of development to support Winter2013
    * next: removal of apCorr
</pre>
<h3><a name="85d19b0a"/></a>85d19b0a</h3>

<pre>
commit 85d19b0addc280f9f5ebc4e0b425b3758fffd345
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Jan 24 08:38:21 2013 -0800

    Incorporated recent changes on master. Ready to test
</pre>
<h3><a name="716fba30"/></a>716fba30</h3>

<pre>
commit 716fba30d73e146840145e6212ffaebc99c7b6d8
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Feb 11 19:32:08 2013 -0800

    Initial incorporation of RegisterTask into imageDifference.  #2650.
</pre>
<h3><a name="5ef667ac"/></a>5ef667ac</h3>

<pre>
commit 5ef667ac23bad71d7ab766cecdb8797f185fc209
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Feb 25 12:07:32 2013 -0600

    Fixed calclation of nparam (requires FWHM of the 2 images) #2636
</pre>
<h3><a name="ab120908"/></a>ab120908</h3>

<pre>
commit ab1209085bab1c0f03fcdf1f66410df36249e049
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Feb 13 12:11:11 2013 -0800

    Add metrics to the selectSources SourceCatalog
</pre>
<h3><a name="43a7016f"/></a>43a7016f</h3>

<pre>
commit 43a7016ff9cbba540fc727b6c71ab38efebaf71f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 14 18:58:19 2013 -0400

    Implement hooks to save schemas for src, icSrc, and diaSrc (#2724).
</pre>
<h3><a name="34fb80a7"/></a>34fb80a7</h3>

<pre>
commit 34fb80a728e404d6967c6c1364c4c5b8a7bbb8c5
Author: Andy Becker <acbecker@gmail.com>
Date:   Fri Feb 22 11:45:52 2013 -0800

    Added sipOrder for the template in Config.  #2636
</pre>
<h3><a name="cca2ffb1"/></a>cca2ffb1</h3>

<pre>
commit cca2ffb1122325a1c63d500ef24e2443ee634309
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Sep 26 11:12:30 2012 -0500

    Removed debugging statement
</pre>
<h3><a name="c1eda085"/></a>c1eda085</h3>

<pre>
commit c1eda085a432c8f8a599b64490e55d19ef270b90
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jun 18 21:47:36 2013 -0600

    Update to new API for setting whether to persist heavy footprints.
</pre>
<h3><a name="08351e79"/></a>08351e79</h3>

<pre>
commit 08351e797f5dc624c560db1d38a694862cc50d6b
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 3 18:56:51 2012 -0500

    FInal debugging changes to complete ticket
</pre>
<h3><a name="73de3261"/></a>73de3261</h3>

<pre>
commit 73de32610d92f0a8e3b60a3eb9d6edb80858bf5b
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 12 13:29:01 2013 -0800

    Minor additional comments and change of doDebugRegister default.
</pre>
<h3><a name="bec03b84"/></a>bec03b84</h3>

<pre>
commit bec03b8427555a112ce23eceb0d5e334c19ee6e3
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 26 18:44:23 2013 -0500

    Add flux.filtered measurement if using prefiltering
</pre>
<h3><a name="07e52f2e"/></a>07e52f2e</h3>

<pre>
commit 07e52f2e63f12ba52421b3b228544ed3821af242
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 14 18:44:34 2012 -0500

    Make detection bipolar by default.
    Re-add deblend task (use current meas_algorithms).
</pre>
<h3><a name="f2250479"/></a>f2250479</h3>

<pre>
commit f22504798ebdfb09fbfdc3d73af37a53e5c11f12
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Feb 14 11:57:36 2013 -0800

    Addressed review comments and fixed line-length issues.  #2650
</pre>
<h3><a name="84d3e49c"/></a>84d3e49c</h3>

<pre>
commit 84d3e49c5c645e55000b8f748b42bbb196e38ae6
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Feb 20 12:18:04 2013 -0800

    Commit of solution to have both measurement and dipole measurement.  Roll this back after Winter2013.  #2636
</pre>
<h3><a name="a182cf15"/></a>a182cf15</h3>

<pre>
commit a182cf155ef873bb488ae2ca6f66af10b7e590ee
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 5 15:26:52 2013 -0800

    Adding functionality to match diaSources to Sources and reference catalog; fields for matchIds are included in the table schema.  #2595
</pre>
<h3><a name="87c7b8d9"/></a>87c7b8d9</h3>

<pre>
commit 87c7b8d9f02678cf1eb3aafa01c57d2a96f52786
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 12 16:40:12 2013 -0800

    Moved dipole measurement config to class' setDefaults.  Fixed line lengths.  #2595
</pre>
<h3><a name="b2f59945"/></a>b2f59945</h3>

<pre>
commit b2f599451d4ef276432d95d61973006cbfd46877
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Feb 28 17:14:01 2013 -0600

    Minor debugging of winter2013 hacks.  #2636
</pre>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
<h3><a name="fd4350aa"/></a>fd4350aa</h3>

<pre>
commit fd4350aac9102741c4d26df012e2ad0b942235d3
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Feb 20 16:49:12 2013 -0800

    Remove tabs
</pre>
<h3><a name="c8209386"/></a>c8209386</h3>

<pre>
commit c82093869269c3dedf7e9e2cf06d0246a7efd96e
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jan 25 15:20:27 2013 -0800

    Modify for enhanced meas_algorithms SourceDetectionTask
</pre>
<h3><a name="f85ae88a"/></a>f85ae88a</h3>

<pre>
commit f85ae88a108f518f3755a702c60e1a7a63bd3899
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 26 13:30:31 2013 -0800

    change to WCS residuals
</pre>
<h3><a name="8a73f41e"/></a>8a73f41e</h3>

<pre>
commit 8a73f41ec8afe06c35e1b17e4e0988ae1bddff72
Author: Andy Becker <acbecker@gmail.com>
Date:   Fri Apr 5 14:07:34 2013 -0700

    Changing default border mask from 320 back to 0.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="c2bcddad"/></a>c2bcddad</h3>

<pre>
commit c2bcddad774e3dd9d12e0240039984e073f90bfb
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 14 14:53:46 2012 -0500

    Bug fixes to imageDifference.py and updates for enhanced mapper.
</pre>
<h3><a name="e4814d06"/></a>e4814d06</h3>

<pre>
commit e4814d06b1cfd92f296ac13c9f635ad63cde1784
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Oct 28 14:14:48 2013 -0500

    Final changes to code base to get imageDifferenceWinter2013.py to run end-to-end.  imageDifferenceWinter2013.py uses subclass Winter2013ImageDifferenceTask to enact all the Winter2013 specializations.
</pre>
<h3><a name="c893f6c4"/></a>c893f6c4</h3>

<pre>
commit c893f6c4190dc1a562cf7c37638618ec0eb85f7d
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Sep 17 16:50:18 2012 -0500

    Fix two bugs: subtractedRes->subtractRes and coadd not being set to EDGE before extraction
    so if any pieces are missing they become 0
</pre>
<h3><a name="b1a6c9f1"/></a>b1a6c9f1</h3>

<pre>
commit b1a6c9f1e8939b44bdbeaf7cb5ca14cf92e6ea2e
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Dec 19 16:50:08 2013 -0600

    Fixed true bug in selection of kernelSources; an incorrect 'not' was in there
</pre>
<h3><a name="8d8cadc4"/></a>8d8cadc4</h3>

<pre>
commit 8d8cadc455f263683ac525ce5267c5fd31226731
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jan 25 19:15:29 2013 -0600

    Pass expanded science sigma to image subtraction subtask
</pre>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
<h3><a name="701d94b2"/></a>701d94b2</h3>

<pre>
commit 701d94b26983d3021abd0d1c9b5277f10ef2035c
Author: Andy Becker <acbecker@gmail.com>
Date:   Thu Feb 27 12:05:36 2014 -0600

    Including options for selection of red/blue and/or variable stars for the control sample in image differencing
</pre>
<h3><a name="7a13b5d4"/></a>7a13b5d4</h3>

<pre>
commit 7a13b5d4d5c96d5116fc0f00d1b712a125c7e890
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 23 15:36:40 2013 -0700

    Addressed all ticket 2822 comments from Paul and Serge.  Running unit tests next.
</pre>
<h3><a name="b11382d9"/></a>b11382d9</h3>

<pre>
commit b11382d94d165576daad542adc7ecd742aa02b92
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 12 12:28:52 2013 -0800

    Creationn of output debugging metric of astrometric residuals.  Persistence will wait for Simon.  #2650
</pre>
<h3><a name="8fa7cece"/></a>8fa7cece</h3>

<pre>
commit 8fa7cece2b813c37a058a7d507a02a31076b5c05
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Mar 4 14:30:17 2014 -0600

    Adding in additional debugging info regarding source color if config.doDebugRegister
</pre>
<h3><a name="7135baaf"/></a>7135baaf</h3>

<pre>
commit 7135baafc0a1558df2f9ea540dec1fcf98731f40
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 3 13:51:59 2012 -0500

    debugging hooks for ip_diffim.
</pre>
<h3><a name="0319fd30"/></a>0319fd30</h3>

<pre>
commit 0319fd30e43616df2227ec7b356808c8e22a8cf9
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Mar 11 09:13:27 2014 -0700

    Line length fixes and adding variable IqrToSigma, responding to Russ's review of #3128
</pre>
<h3><a name="e6833521"/></a>e6833521</h3>

<pre>
commit e6833521e2ccf38d1053cb0cb69095cabf8f3c73
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Sep 13 16:28:21 2012 -0700

    First cut.
</pre>
</div>


[Return to list](#homelist)
# <a name="ups/pipe_tasks.table"/></a>ups/pipe_tasks.table
### Diff:

<pre>
                setupRequired(pipe_base)
                setupRequired(pex_config)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
3    <a href="#fa0d35c5">fa0d35c5</a> + setupRequired(utils)</div>
                setupOptional(afw)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
5    <a href="#37a9a45a">37a9a45a</a> + setupOptional(meas_base)</div>
                setupOptional(meas_algorithms)
                setupOptional(meas_astrom)
                setupOptional(meas_deblender)
                setupOptional(astrometry_net_data)
                setupOptional(ip_isr)
                setupOptional(ip_diffim)
                setupOptional(coadd_utils)
                setupOptional(coadd_chisquared)
                setupOptional(skymap)
                setupOptional(geom)
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
17   <a href="#2754abee">2754abee</a> + setupOptional(obs_test) # for unit tests</div>
                setupOptional(matplotlib)
                
                envPrepend(PYTHONPATH, ${PRODUCT_DIR}/python)
                envPrepend(PATH, ${PRODUCT_DIR}/bin)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="37a9a45a"/></a>37a9a45a</h3>

<pre>
commit 37a9a45ac8afc2c061f4040de7a4d98f94cd4435
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Jun 26 17:49:42 2014 -0700

    Modify the way in which the second calibrate catalog is made to use Mapper
</pre>
<h3><a name="2754abee"/></a>2754abee</h3>

<pre>
commit 2754abee4aafb405070aab171c03eab4331d4b5a
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Nov 13 16:21:29 2014 -0800

    Add unit test for ProcessCcdTask
</pre>
<h3><a name="fa0d35c5"/></a>fa0d35c5</h3>

<pre>
commit fa0d35c5ba45e6d624455a9e29ca2b6d6945f332
Author: Joshua Hoblitt <josh@hoblitt.com>
Date:   Fri May 22 12:33:14 2015 -0700

    replace eups.productDir() calls with lsst.utils.getPackageDir()
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/ingest.py"/></a>python/lsst/pipe/tasks/ingest.py
### Diff:

<pre>
                import os
                import shutil
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
3    <a href="#0c0299c2">0c0299c2</a> - import tempfile</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
4    <a href="#8a8881c4">8a8881c4</a> - from fnmatch import fnmatch</div>
                try:
                    import sqlite3
                except ImportError:
                    # try external pysqlite package; deprecated
                    import sqlite as sqlite3
                
                from lsst.pex.config import Config, Field, DictField, ListField, ConfigurableField
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
10   <a href="#94d2ee8c">94d2ee8c</a> + import lsst.pex.exceptions</div>
                from lsst.pipe.base import Task, Struct, ArgumentParser
                import lsst.afw.image as afwImage
                
                class IngestArgumentParser(ArgumentParser):
                    """Argument parser to support ingesting images into the image repository"""
                    def __init__(self, *args, **kwargs):
                        super(IngestArgumentParser, self).__init__(*args, **kwargs)
                        self.add_argument("-n", "--dry-run", dest="dryrun", action="store_true", default=False,
                                          help="Don't perform any action?")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
21   <a href="#e40e0f6a">e40e0f6a</a> -         self.add_argument("--mode", choices=["move", "copy", "link", "skip"], default="link",</div>
              ?                                                                                        ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
20   <a href="#b457f133">b457f133</a> +         self.add_argument("--mode", choices=["move", "copy", "link", "skip"], default="move",</div>
              ?                                                                                        ^^^^
                                          help="Mode of delivering the files to their destination")
                        self.add_argument("--create", action="store_true", help="Create new registry (clobber old)?")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#8a8881c4">8a8881c4</a> -         self.add_id_argument("--badId", "raw", "Data identifier for bad data", doMakeDataRefList=False)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#8a8881c4">8a8881c4</a> -         self.add_argument("--badFile", nargs="*", default=[],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#8a8881c4">8a8881c4</a> -                           help="Names of bad files (no path; wildcards allowed)")</div>
                        self.add_argument("files", nargs="+", help="Names of file")
                
                class ParseConfig(Config):
                    """Configuration for ParseTask"""
                    translation = DictField(keytype=str, itemtype=str, default={},
                                            doc="Translation table for property --> header")
                    translators = DictField(keytype=str, itemtype=str, default={},
                                            doc="Properties and name of translator method")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#d2eeaa36">d2eeaa36</a> -     defaults = DictField(keytype=str, itemtype=str, default={},</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#d2eeaa36">d2eeaa36</a> -                          doc="Default values if header is not present")</div>
                    hdu = Field(dtype=int, default=0, doc="HDU to read for metadata")
                    extnames = ListField(dtype=str, default=[], doc="Extension names to search for")
                
                class ParseTask(Task):
                    """Task that will parse the filename and/or its contents to get the required information
                    for putting the file in the correct location and populating the registry."""
                    ConfigClass = ParseConfig
                
                    def getInfo(self, filename):
                        """Get information about the image from the filename and its contents
                
                        Here, we open the image and parse the header, but one could also look at the filename itself
                        and derive information from that, or set values from the configuration.
                
                        @param filename    Name of file to inspect
                        @return File properties; list of file properties for each extension
                        """
                        md = afwImage.readMetadata(filename, self.config.hdu)
                        phuInfo = self.getInfoFromMetadata(md)
                        if len(self.config.extnames) == 0:
                            # No extensions to worry about
                            return phuInfo, [phuInfo]
                        # Look in the provided extensions
                        extnames = set(self.config.extnames)
                        extnum = 1
                        infoList = []
                        while len(extnames) > 0:
                            extnum += 1
                            try:
                                md = afwImage.readMetadata(filename, extnum)
                            except:
                                self.log.warn("Error reading %s extensions %s" % (filename, extnames))
                                break
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#7d8d620a">7d8d620a</a> -             ext = md.get("EXTNAME").strip()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#ed4cc3cd">ed4cc3cd</a> +             ext = self.getExtensionName(md)</div>
                            if ext in extnames:
                                infoList.append(self.getInfoFromMetadata(md, info=phuInfo.copy()))
                                extnames.discard(ext)
                        return phuInfo, infoList
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#7d8d620a">7d8d620a</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#ed4cc3cd">ed4cc3cd</a> +     @staticmethod</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#ed4cc3cd">ed4cc3cd</a> +     def getExtensionName(md):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#ed4cc3cd">ed4cc3cd</a> +         """ Get the name of an extension.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#ed4cc3cd">ed4cc3cd</a> +         @param md: PropertySet like one obtained from afwImage.readMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#ed4cc3cd">ed4cc3cd</a> +         @return Name of the extension if it exists.  None otherwise.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#ed4cc3cd">ed4cc3cd</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#ed4cc3cd">ed4cc3cd</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#ed4cc3cd">ed4cc3cd</a> +             # This returns a tuple</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#ed4cc3cd">ed4cc3cd</a> +             ext = md.get("EXTNAME")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#ed4cc3cd">ed4cc3cd</a> +             return ext[1]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#94d2ee8c">94d2ee8c</a> +         except lsst.pex.exceptions.Exception:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#ed4cc3cd">ed4cc3cd</a> +             return None</div>
                
                    def getInfoFromMetadata(self, md, info={}):
                        """Attempt to pull the desired information out of the header
                
                        This is done through two mechanisms:
                        * translation: a property is set directly from the relevant header keyword
                        * translator: a property is set with the result of calling a method
                
                        The translator methods receive the header metadata and should return the
                        appropriate value, or None if the value cannot be determined.
                
                        @param md      FITS header
                        @param info    File properties, to be supplemented
                        @return info
                        """
                        for p, h in self.config.translation.iteritems():
                            if md.exists(h):
                                value = md.get(h)
                                if isinstance(value, basestring):
                                    value = value.strip()
                                info[p] = value
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#d2eeaa36">d2eeaa36</a> -             elif p in self.config.defaults:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#d2eeaa36">d2eeaa36</a> -                 info[p] = self.config.defaults[p]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#d2eeaa36">d2eeaa36</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#d2eeaa36">d2eeaa36</a> -                 self.log.warn("Unable to find value for %s (derived from %s)" % (p, h))</div>
                        for p, t in self.config.translators.iteritems():
                            func = getattr(self, t)
                            try:
                                value = func(md)
                            except:
                                value = None
                            if value is not None:
                                info[p] = value
                        return info
                
                    def translate_date(self, md):
                        """Convert a full DATE-OBS to a mere date
                
                        Besides being an example of a translator, this is also generally useful.
                        It will only be used if listed as a translator in the configuration.
                        """
                        date = md.get("DATE-OBS").strip()
                        c = date.find("T")
                        if c > 0:
                            date = date[:c]
                        return date
                
                    def translate_filter(self, md):
                        """Translate a full filter description into a mere filter name
                
                        Besides being an example of a translator, this is also generally useful.
                        It will only be used if listed as a translator in the configuration.
                        """
                        filterName = md.get("FILTER").strip()
                        filterName = filterName.strip()
                        c = filterName.find(" ")
                        if c > 0:
                            filterName = filterName[:c]
                        return filterName
                
                    def getDestination(self, butler, info, filename):
                        """Get destination for the file
                
                        @param butler      Data butler
                        @param info        File properties, used as dataId for the butler
                        @param filename    Input filename
                        @return Destination filename
                        """
                        raw = butler.get("raw_filename", info)[0]
                        # Ensure filename is devoid of cfitsio directions about HDUs
                        c = raw.find("[")
                        if c > 0:
                            raw = raw[:c]
                        return raw
                
                class RegisterConfig(Config):
                    """Configuration for the RegisterTask"""
                    table = Field(dtype=str, default="raw", doc="Name of table")
                    columns = DictField(keytype=str, itemtype=str, doc="List of columns for raw table, with their types",
                                        itemCheck=lambda x: x in ("text", "int", "double"),
                                        default={'object':  'text',
                                                 'visit':   'int',
                                                 'ccd':     'int',
                                                 'filter':  'text',
                                                 'date':    'text',
                                                 'taiObs':  'text',
                                                 'expTime': 'double',
                                                 },
                                        )
                    unique = ListField(dtype=str, doc="List of columns to be declared unique for the table",
                                       default=["visit", "ccd"])
                    visit = ListField(dtype=str, default=["visit", "object", "date", "filter"],
                                      doc="List of columns for raw_visit table")
                    ignore = Field(dtype=bool, default=False, doc="Ignore duplicates in the table?")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#9b8e2025">9b8e2025</a> -     permissions = Field(dtype=int, default=0664, doc="Permissions mode for registry") # octal 664 = rw-rw-r--</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#7d8d620a">7d8d620a</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#0c0299c2">0c0299c2</a> - class RegistryContext(object):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#0c0299c2">0c0299c2</a> -     """Context manager to provide a registry</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#0c0299c2">0c0299c2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#0c0299c2">0c0299c2</a> -     An existing registry is copied, so that it may continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#0c0299c2">0c0299c2</a> -     to be used while we add to this new registry.  Finally,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#0c0299c2">0c0299c2</a> -     the new registry is moved into the right place.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#0c0299c2">0c0299c2</a> -     """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#cc597482">cc597482</a> -     def __init__(self, registryName, createTableFunc=None, permissions=664):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#0c0299c2">0c0299c2</a> -         """Construct a context manager</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#0c0299c2">0c0299c2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#0c0299c2">0c0299c2</a> -         @param registryName: Name of registry file</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#0c0299c2">0c0299c2</a> -         @param createTableFunc: Function to create tables</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#0c0299c2">0c0299c2</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#0c0299c2">0c0299c2</a> -         self.registryName = registryName</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#cc597482">cc597482</a> -         self.permissions = permissions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#0c0299c2">0c0299c2</a> -         updateFd, updateName = tempfile.mkstemp(prefix=registryName,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#0c0299c2">0c0299c2</a> -                                                 dir=os.path.dirname(self.registryName))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#0c0299c2">0c0299c2</a> -         self.updateName = updateName</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#0c0299c2">0c0299c2</a> -         os.close(updateFd)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#0c0299c2">0c0299c2</a> -         makeTable = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#0c0299c2">0c0299c2</a> -         if os.path.exists(registryName) and createTableFunc is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#0c0299c2">0c0299c2</a> -             assertCanCopy(registryName, updateName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#5af64e07">5af64e07</a> -             os.chmod(updateName, os.stat(registryName).st_mode)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#0c0299c2">0c0299c2</a> -             shutil.copyfile(registryName, updateName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#0c0299c2">0c0299c2</a> -             makeTable = False</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#0c0299c2">0c0299c2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#0c0299c2">0c0299c2</a> -         self.conn = sqlite3.connect(self.updateName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#0c0299c2">0c0299c2</a> -         if makeTable:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#0c0299c2">0c0299c2</a> -             createTableFunc(self.conn)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#cc597482">cc597482</a> -         os.chmod(self.updateName, self.permissions)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#0c0299c2">0c0299c2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#0c0299c2">0c0299c2</a> -     def __enter__(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#0c0299c2">0c0299c2</a> -         """Provide the 'as' value"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#0c0299c2">0c0299c2</a> -         return self.conn</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#0c0299c2">0c0299c2</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#0c0299c2">0c0299c2</a> -     def __exit__(self, excType, excValue, traceback):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#0c0299c2">0c0299c2</a> -         self.conn.commit()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#0c0299c2">0c0299c2</a> -         self.conn.close()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#0c0299c2">0c0299c2</a> -         if excType is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#0c0299c2">0c0299c2</a> -             assertCanCopy(self.updateName, self.registryName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#0c0299c2">0c0299c2</a> -             if os.path.exists(self.registryName):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#0c0299c2">0c0299c2</a> -                 os.unlink(self.registryName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#0c0299c2">0c0299c2</a> -             os.rename(self.updateName, self.registryName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#cc597482">cc597482</a> -             os.chmod(self.registryName, self.permissions)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#0c0299c2">0c0299c2</a> -         return False # Don't suppress any exceptions</div>
                
                class RegisterTask(Task):
                    """Task that will generate the registry for the Mapper"""
                    ConfigClass = RegisterConfig
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#0c0299c2">0c0299c2</a> -     def openRegistry(self, butler, create=False, dryrun=False):</div>
              ?                                                --------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#7d8d620a">7d8d620a</a> +     def openRegistry(self, butler, create=False):</div>
                        """Open the registry and return the connection handle.
                
                        @param butler  Data butler, from which the registry file is determined
                        @param create  Clobber any existing registry and create a new one?
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#0c0299c2">0c0299c2</a> -         @param dryrun  Don't do anything permanent?</div>
                        @return Database connection
                        """
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#7d8d620a">7d8d620a</a> +         mapper = butler.mapper</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#0c0299c2">0c0299c2</a> -         if dryrun:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#0c0299c2">0c0299c2</a> -             from contextlib import contextmanager</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#0c0299c2">0c0299c2</a> -             @contextmanager</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#0c0299c2">0c0299c2</a> -             def fakeContext():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#0c0299c2">0c0299c2</a> -                 yield</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#38ea4d79">38ea4d79</a> -             return fakeContext()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#0c0299c2">0c0299c2</a> -         registryName = os.path.join(butler.mapper.root, "registry.sqlite3")</div>
              ?                                     -------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#7d8d620a">7d8d620a</a> +         registryName = os.path.join(mapper.root, "registry.sqlite3")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#cc597482">cc597482</a> -         context = RegistryContext(registryName, self.createTable if create else None, self.config.permissions)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#7d8d620a">7d8d620a</a> +         if create and os.path.exists(registryName):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#7d8d620a">7d8d620a</a> +             os.unlink(registryName)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#7d8d620a">7d8d620a</a> +             makeTable = True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#7d8d620a">7d8d620a</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#7d8d620a">7d8d620a</a> +             makeTable = not os.path.exists(registryName)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#7d8d620a">7d8d620a</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#398a0f03">398a0f03</a> +         conn = sqlite3.connect(registryName)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#7d8d620a">7d8d620a</a> +         if makeTable:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#7d8d620a">7d8d620a</a> +             self.createTable(conn)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#0c0299c2">0c0299c2</a> -         return context</div>
              ?                   ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#7d8d620a">7d8d620a</a> +         return conn</div>
              ?                   ^
                
                    def createTable(self, conn):
                        """Create the registry tables
                
                        One table (typically 'raw') contains information on all files, and the
                        other (typically 'raw_visit') contains information on all visits.
                
                        @param conn    Database connection
                        """
                        cmd = "create table %s (id integer primary key autoincrement, " % self.config.table
                        cmd += ",".join([("%s %s" % (col, colType)) for col,colType in self.config.columns.items()])
                        if len(self.config.unique) > 0:
                            cmd += ", unique(" + ",".join(self.config.unique) + ")"
                        cmd += ")"
                        conn.execute(cmd)
                
                        cmd = "create table %s_visit (" % self.config.table
                        cmd += ",".join([("%s %s" % (col, self.config.columns[col])) for col in self.config.visit])
                        cmd += ", unique(" + ",".join(set(self.config.visit).intersection(set(self.config.unique))) + ")"
                        cmd += ")"
                        conn.execute(cmd)
                
                        conn.commit()
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#8a8881c4">8a8881c4</a> -     def check(self, conn, info):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#7d8d620a">7d8d620a</a> +     def check(self, conn, filename, info):</div>
              ?                          ++++++++++
                        """Check for the presence of a row already
                
                        Not sure this is required, given the 'ignore' configuration option.
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#38ea4d79">38ea4d79</a> -         if conn == None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#38ea4d79">38ea4d79</a> -             return False        # For dryrun</div>
                        if self.config.ignore or len(self.config.unique) == 0:
                            return False # Our entry could already be there, but we don't care
                        cursor = conn.cursor()
                        sql = "SELECT COUNT(*) FROM %s WHERE " % self.config.table
                        sql += " AND ".join(["%s=?" % col for col in self.config.unique])
                        values = [info[col] for col in self.config.unique]
                
                        cursor.execute(sql, values)
                        if cursor.fetchone()[0] > 0:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#7d8d620a">7d8d620a</a> +             print "File %s is already in the registry" % filename</div>
                            return True
                        return False
                
                    def addRow(self, conn, info, dryrun=False, create=False):
                        """Add a row to the file table (typically 'raw').
                
                        @param conn    Database connection
                        @param info    File properties to add to database
                        """
                        sql = "INSERT"
                        if self.config.ignore:
                            sql += " OR IGNORE"
                        sql += " INTO %s VALUES (NULL" % self.config.table
                        sql += ", ?" * len(self.config.columns)
                        sql += ")"
                        values = [info[col] for col in self.config.columns]
                        if dryrun:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#38ea4d79">38ea4d79</a> -             print "Would execute: '%s' with %s" % (sql, values)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#ed4cc3cd">ed4cc3cd</a> +             print "Would execute: '%s' with %s" % (sql, ",".join([str(value) for value in values]))</div>
              ?                                                        ++++++++++++++++++++++++++++++++++       ++
                        else:
                            conn.execute(sql, values)
                
                    def addVisits(self, conn, dryrun=False):
                        """Generate the visits table (typically 'raw_visits') from the
                        file table (typically 'raw').
                
                        @param conn    Database connection
                        """
                        sql = "INSERT OR IGNORE INTO %s_visit SELECT DISTINCT " % self.config.table
                        sql += ",".join(self.config.visit)
                        sql += " FROM %s" % self.config.table
                        if dryrun:
                            print "Would execute: %s" % sql
                        else:
                            conn.execute(sql)
                
                
                class IngestConfig(Config):
                    """Configuration for IngestTask"""
                    parse = ConfigurableField(target=ParseTask, doc="File parsing")
                    register = ConfigurableField(target=RegisterTask, doc="Registry entry")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#8a8881c4">8a8881c4</a> -     allowError = Field(dtype=bool, default=False, doc="Allow error in ingestion?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#6fcfa3f4">6fcfa3f4</a> -     clobber = Field(dtype=bool, default=False, doc="Clobber existing file?")</div>
                
                class IngestTask(Task):
                    """Task that will ingest images into the data repository"""
                    ConfigClass = IngestConfig
                    ArgumentParser = IngestArgumentParser
                    _DefaultName = "ingest"
                
                    def __init__(self, *args, **kwargs):
                        super(IngestTask, self).__init__(*args, **kwargs)
                        self.makeSubtask("parse")
                        self.makeSubtask("register")
                
                    @classmethod
                    def parseAndRun(cls):
                        """Parse the command-line arguments and run the Task"""
                        config = cls.ConfigClass()
                        parser = cls.ArgumentParser("ingest")
                        args = parser.parse_args(config)
                        task = cls(config=args.config)
                        task.run(args)
                
                    def ingest(self, infile, outfile, mode="move", dryrun=False):
                        """Ingest a file into the image repository.
                
                        @param infile  Name of input file
                        @param outfile Name of output file (file in repository)
                        @param mode    Mode of ingest (copy/link/move/skip)
                        @param dryrun  Only report what would occur?
                        @param Success boolean
                        """
                        if mode == "skip":
                            return True
                        if dryrun:
                            self.log.info("Would %s from %s to %s" % (mode, infile, outfile))
                            return True
                        try:
                            outdir = os.path.dirname(outfile)
                            if not os.path.isdir(outdir):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#22513505">22513505</a> -                 try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#22513505">22513505</a> -                     os.makedirs(outdir)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#7d8d620a">7d8d620a</a> +                 os.makedirs(outdir)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#22513505">22513505</a> -                 except:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#22513505">22513505</a> -                     # Silently ignore mkdir failures due to race conditions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#22513505">22513505</a> -                     if not os.path.isdir(outdir):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#22513505">22513505</a> -                         raise</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#6fcfa3f4">6fcfa3f4</a> -             if self.config.clobber and os.path.lexists(outfile):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#6fcfa3f4">6fcfa3f4</a> -                 os.unlink(outfile)</div>
                            if mode == "copy":
                                assertCanCopy(infile, outfile)
                                shutil.copyfile(infile, outfile)
                            elif mode == "link":
                                os.symlink(os.path.abspath(infile), outfile)
                            elif mode == "move":
                                assertCanCopy(infile, outfile)
                                os.rename(infile, outfile)
                            else:
                                raise AssertionError("Unknown mode: %s" % mode)
                            print "%s --<%s>--> %s" % (infile, mode, outfile)
                        except Exception, e:
                            self.log.warn("Failed to %s %s to %s: %s" % (mode, infile, outfile, e))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#8a8881c4">8a8881c4</a> -             if not self.config.allowError:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#8a8881c4">8a8881c4</a> -                 raise</div>
                            return False
                        return True
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#8a8881c4">8a8881c4</a> -     def isBadFile(self, filename, badFileList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#8a8881c4">8a8881c4</a> -         """Return whether the file qualifies as bad</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#8a8881c4">8a8881c4</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#8a8881c4">8a8881c4</a> -         We match against the list of bad file patterns.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#8a8881c4">8a8881c4</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#8a8881c4">8a8881c4</a> -         filename = os.path.basename(filename)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#8a8881c4">8a8881c4</a> -         if not badFileList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#8a8881c4">8a8881c4</a> -             return False</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#8a8881c4">8a8881c4</a> -         for badFile in badFileList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#8a8881c4">8a8881c4</a> -             if fnmatch(filename, badFile):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#8a8881c4">8a8881c4</a> -                 return True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#8a8881c4">8a8881c4</a> -         return False</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#8a8881c4">8a8881c4</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#8a8881c4">8a8881c4</a> -     def isBadId(self, info, badIdList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#8a8881c4">8a8881c4</a> -         """Return whether the file information qualifies as bad</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#8a8881c4">8a8881c4</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#8a8881c4">8a8881c4</a> -         We match against the list of bad data identifiers.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#8a8881c4">8a8881c4</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#8a8881c4">8a8881c4</a> -         if not badIdList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#8a8881c4">8a8881c4</a> -             return False</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#8a8881c4">8a8881c4</a> -         for badId in badIdList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#8a8881c4">8a8881c4</a> -             if all(info[key] == value for key, value in badId.iteritems()):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#8a8881c4">8a8881c4</a> -                 return True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
407  <a href="#8a8881c4">8a8881c4</a> -         return False</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
408  <a href="#8a8881c4">8a8881c4</a> - </div>
                    def run(self, args):
                        """Ingest all specified files and add them to the registry"""
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
411  <a href="#0c0299c2">0c0299c2</a> -         context = self.register.openRegistry(args.butler, create=args.create, dryrun=args.dryrun)</div>
              ?         ^^^ ^^^                                                             ^^^^^^^ ^           ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#b457f133">b457f133</a> +         registry = self.register.openRegistry(args.butler, create=args.create) if not args.dryrun else None</div>
              ?         ^^^^^ ^^                                                             ^^^^^ ^^^           ^^^^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
412  <a href="#0c0299c2">0c0299c2</a> -         with context as registry:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
413  <a href="#0c0299c2">0c0299c2</a> -             for infile in args.files:</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#7d8d620a">7d8d620a</a> +         for infile in args.files:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
414  <a href="#0c0299c2">0c0299c2</a> -                 if self.isBadFile(infile, args.badFile):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
415  <a href="#0c0299c2">0c0299c2</a> -                     self.log.warn("Skipping declared bad file %s" % infile)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
416  <a href="#0c0299c2">0c0299c2</a> -                     continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#0c0299c2">0c0299c2</a> -                 fileInfo, hduInfoList = self.parse.getInfo(infile)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#7d8d620a">7d8d620a</a> +             fileInfo, hduInfoList = self.parse.getInfo(infile)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
418  <a href="#0c0299c2">0c0299c2</a> -                 if self.isBadId(fileInfo, args.badId.idList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
419  <a href="#0c0299c2">0c0299c2</a> -                     self.log.warn("Skipping declared bad file %s: %s" % (infile, fileInfo))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
420  <a href="#0c0299c2">0c0299c2</a> -                     continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
421  <a href="#0c0299c2">0c0299c2</a> -                 if self.register.check(registry, fileInfo):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
422  <a href="#0c0299c2">0c0299c2</a> -                     self.log.warn("%s: already ingested: %s" % (infile, fileInfo))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
423  <a href="#0c0299c2">0c0299c2</a> -                 outfile = self.parse.getDestination(args.butler, fileInfo, infile)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#7d8d620a">7d8d620a</a> +             outfile = os.path.join(args.butler, self.parse.getDestination(args.butler, fileInfo, infile))</div>
              ?                      ++++++++++++++++++++++++++                                                         +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
424  <a href="#0c0299c2">0c0299c2</a> -                 ingested = self.ingest(infile, outfile, mode=args.mode, dryrun=args.dryrun)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
336  <a href="#b457f133">b457f133</a> +             ingested = self.ingest(infile, outfile, mode=args.mode, dryrun=args.dryrun)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#0c0299c2">0c0299c2</a> -                 if not ingested:</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#b457f133">b457f133</a> +             if not ingested:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#0c0299c2">0c0299c2</a> -                     continue</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#b457f133">b457f133</a> +                 continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#0c0299c2">0c0299c2</a> -                 for info in hduInfoList:</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#7d8d620a">7d8d620a</a> +             for info in hduInfoList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
428  <a href="#0c0299c2">0c0299c2</a> -                     self.register.addRow(registry, info, dryrun=args.dryrun, create=args.create)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#b457f133">b457f133</a> +                 self.register.addRow(registry, info, dryrun=args.dryrun, create=args.create)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
429  <a href="#0c0299c2">0c0299c2</a> -             self.register.addVisits(registry, dryrun=args.dryrun)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#b457f133">b457f133</a> +         self.register.addVisits(registry, dryrun=args.dryrun)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#b457f133">b457f133</a> +         if not args.dryrun:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#b457f133">b457f133</a> +             registry.commit()</div>
                
                def assertCanCopy(fromPath, toPath):
                    """Can I copy a file?  Raise an exception is space constraints not met.
                
                    @param fromPath    Path from which the file is being copied
                    @param toPath      Path to which the file is being copied
                    """
                    req = os.stat(fromPath).st_size
                    st = os.statvfs(os.path.dirname(toPath))
                    avail = st.f_bavail * st.f_frsize
                    if avail < req:
                        raise RuntimeError("Insufficient space: %d vs %d" % (req, avail))
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="0c0299c2"/></a>0c0299c2</h3>

<pre>
commit 0c0299c2e16e0e9f8cc5ea6a13c4c3e3b30165bd
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Feb 14 03:48:12 2014 +0000

    ingest: ingest into a copy registry to allow concurrent use of actual registry
    
    This is done through the use of a context manager that moves the copy
    back when everything is done.
</pre>
<h3><a name="6fcfa3f4"/></a>6fcfa3f4</h3>

<pre>
commit 6fcfa3f4275e4645cb4a2b721505597d55aebeec
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Feb 11 11:05:39 2014 -0500

    ingest: allow clobbering existing files in the data repo
    
    Adds new config parameter 'clobber'.
</pre>
<h3><a name="38ea4d79"/></a>38ea4d79</h3>

<pre>
commit 38ea4d7948c9e1efbd2f8a7ca4bab85bb3cb8089
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Fri Apr 18 09:49:51 2014 +0900

    Small fixes to enable dry-run for ingest task.
</pre>
<h3><a name="5af64e07"/></a>5af64e07</h3>

<pre>
commit 5af64e071be5e790ef307b02523378ab18a40397
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Feb 17 11:51:02 2014 -0500

    ingest: copy registry file protection flags
    
    A tempfile is opened with mode 600, so update with the desired
    mode from the existing registry.
</pre>
<h3><a name="8a8881c4"/></a>8a8881c4</h3>

<pre>
commit 8a8881c40667bd40e5d9d30e080961116da9dd6f
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Nov 11 21:54:58 2013 -0500

    ingest: allow declaration of bad files or bad dataId
</pre>
<h3><a name="7d8d620a"/></a>7d8d620a</h3>

<pre>
commit 7d8d620a9efce1c8a60b1dab5899daf6db9df9d9
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Oct 1 16:58:35 2012 -0400

    Adding Tasks to ingest images into a repository and generate the registry.
</pre>
<h3><a name="d2eeaa36"/></a>d2eeaa36</h3>

<pre>
commit d2eeaa366a7d6fe8f31e5c81244f5917470d4b78
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Nov 4 15:07:15 2013 -0500

    ingest: allow use of default values
    
    If a value cannot be determined from a particular header
    (e.g., due to changes in the data acquisition software,
    or operating in a different mode bias vs object) then we
    need to allow a default value so we can just ingest the
    data.
</pre>
<h3><a name="e40e0f6a"/></a>e40e0f6a</h3>

<pre>
commit e40e0f6a8daedda36ed083f7e96536292a985f87
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Nov 15 20:25:35 2013 +0000

    ingest: change default mode to link
</pre>
<h3><a name="9b8e2025"/></a>9b8e2025</h3>

<pre>
commit 9b8e2025663a5f9b99f7007bd048ac9b841a2947
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Sep 20 18:33:38 2014 -0400

    ingest: permissions should be specified in octal
    
    Specifying the permissions without using octal leads to
    the bizarre: --w--wx--T .
</pre>
<h3><a name="cc597482"/></a>cc597482</h3>

<pre>
commit cc59748238282140e40460b445924c7b0222f876
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Jul 23 14:09:10 2014 -0400

    ingest: set permissions on registry
    
    Otherwise no-one can access it.
</pre>
<h3><a name="22513505"/></a>22513505</h3>

<pre>
commit 2251350542c627bbb35fe438df3b48c1f5a9a935
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Sep 22 18:24:29 2014 +0000

    ingest: silently ignore mkdir failures due to race conditions
    
    The directory may have been created by another process.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="7d8d620a"/></a>7d8d620a</h3>

<pre>
commit 7d8d620a9efce1c8a60b1dab5899daf6db9df9d9
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Oct 1 16:58:35 2012 -0400

    Adding Tasks to ingest images into a repository and generate the registry.
</pre>
<h3><a name="398a0f03"/></a>398a0f03</h3>

<pre>
commit 398a0f03c74a1a31c96ce9790b8bd24bdc62c2c2
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Nov 15 14:13:22 2013 -0800

    sqlite->sqlite3 with fallback to sqlite
</pre>
<h3><a name="ed4cc3cd"/></a>ed4cc3cd</h3>

<pre>
commit ed4cc3cdedc411fa01e65e87fe6c9aebf6e02bec
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Thu Mar 27 11:51:24 2014 -0500

    fixed bugs in ingest.py
</pre>
<h3><a name="94d2ee8c"/></a>94d2ee8c</h3>

<pre>
commit 94d2ee8cc7fd65289e925e309e069a192b4ddbbf
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Jul 24 15:38:22 2014 -0600

    Adapt to changes in exception Python bindings (DM-827)
</pre>
<h3><a name="b457f133"/></a>b457f133</h3>

<pre>
commit b457f133b7642e5c6a53bafbacfc9b6e4529b09e
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Oct 3 17:00:14 2012 -0400

    Adding skip mode, being more careful with dryrun, and checking disk space.
    
    The skip mode should allow one to run the ingest script on the data repostitory
    itself and generate or update a registry.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/mocks/mockObject.py"/></a>python/lsst/pipe/tasks/mocks/mockObject.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import numpy
                
                import lsst.pex.config
                import lsst.afw.table
                import lsst.afw.geom
                import lsst.afw.image
                import lsst.pipe.base
                
                class MockObjectConfig(lsst.pex.config.Config):
                    minMag = lsst.pex.config.Field(dtype=float, default=18.0, doc="Minimum magnitude for mock objects")
                    maxMag = lsst.pex.config.Field(dtype=float, default=20.0, doc="Maximum magnitude for mock objects")
                    maxRadius = lsst.pex.config.Field(
                        dtype=float, default=10.0,
                        doc=("Maximum radius of an object in arcseconds; only used "
                             "when determining which objects are in an exposure.")
                        )
                    spacing = lsst.pex.config.Field(
                        dtype=float, default=20.0, 
                        doc="Distance between objects (in arcseconds)."
                        )
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#5a35f7cb">5a35f7cb</a> +     seed = lsst.pex.config.Field(dtype=int, default=1, doc="Seed for numpy random number generator")</div>
                
                class MockObjectTask(lsst.pipe.base.Task):
                    """Task that generates simple mock objects and draws them on images, intended as a subtask of
                    MockCoaddTask.
                
                    May be subclassed to generate things other than stars.
                    """
                
                    ConfigClass = MockObjectConfig
                
                    def __init__(self, **kwds):
                        lsst.pipe.base.Task.__init__(self, **kwds)
                        self.schema = lsst.afw.table.SimpleTable.makeMinimalSchema()
                        self.center = self.schema.addField("center", type=lsst.afw.geom.Point2D,
                                                           doc="center position in tract WCS")
                        self.magKey = self.schema.addField("mag", type=float, doc="exact true magnitude")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#5a35f7cb">5a35f7cb</a> +         self.rng = numpy.random.RandomState(self.config.seed)</div>
                
                    def run(self, tractInfo, catalog=None):
                        """Add records to the truth catalog and return it, delegating to makePositions and defineObject.
                
                        If the given catalog is not None, add records to this catalog and return it instead
                        of creating a new one.
                
                        Subclasses should generally not need to override this method.
                        """
                        if catalog is None:
                            catalog = lsst.afw.table.SimpleCatalog(self.schema)
                        else:
                            if not catalog.getSchema().contains(self.schema):
                                raise ValueError("Catalog schema does not match Task schema")
                        for coord, center in self.makePositions(tractInfo):
                            record = catalog.addNew()
                            record.setCoord(coord)
                            record.setPointD(self.center, center)
                            self.defineObject(record)
                        return catalog
                
                    def makePositions(self, tractInfo):
                        """Generate the centers (as a (coord, point) tuple) of mock objects (the point returned is
                        in the tract coordinate system).
                
                        Default implementation puts objects on a grid that is square in the tract's image coordinate
                        system, with spacing approximately given by config.spacings.
                
                        The return value is a Python iterable over (coord, point) pairs; the default implementation
                        is actually an iterator (i.e. the function is a "generator"), but derived-class overrides may
                        return any iterable. 
                        """
                        wcs = tractInfo.getWcs()
                        spacing = self.config.spacing / wcs.pixelScale().asArcseconds() # get spacing in tract pixels
                        bbox = tractInfo.getBBox()
                        for y in numpy.arange(bbox.getMinY() + 0.5 * spacing, bbox.getMaxY(), spacing):
                            for x in numpy.arange(bbox.getMinX() + 0.5 * spacing, bbox.getMaxX(), spacing):
                                yield wcs.pixelToSky(x, y), lsst.afw.geom.Point2D(x, y), 
                
                    def defineObject(self, record):
                        """Fill in additional fields in a truth catalog record (id and coord will already have
                        been set).
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#94df22ea">94df22ea</a> -         mag = numpy.random.rand() * (self.config.maxMag - self.config.minMag) + self.config.minMag</div>
              ?               ^^^^^  - ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#5a35f7cb">5a35f7cb</a> +         mag = self.rng.rand() * (self.config.maxMag - self.config.minMag) + self.config.minMag</div>
              ?               ^^^^   ^
                        record.setD(self.magKey, mag)
                
                    def drawSource(self, record, exposure, buffer=0):
                        """Draw the given truth catalog record on the given exposure, makings use of its Psf, Wcs,
                        Calib, and possibly filter to transform it appropriately.
                
                        The mask and variance planes of the Exposure are ignored.
                
                        The 'buffer' parameter is used to expand the source's bounding box when testing whether it
                        is considered fully part of the image.
                
                        Returns 0 if the object does not appear on the given image at all, 1 if it appears partially,
                        and 2 if it appears fully (including the given buffer).
                        """
                        wcs = exposure.getWcs()
                        center = wcs.skyToPixel(record.getCoord())
                        try:
                            psfImage = exposure.getPsf().computeImage(center).convertF()
                        except:
                            return 0
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#94df22ea">94df22ea</a> -         psfBBox = psfImage.getBBox(lsst.afw.image.PARENT)</div>
              ?                                    ---------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#35e3701f">35e3701f</a> +         psfBBox = psfImage.getBBox()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#94df22ea">94df22ea</a> -         overlap = exposure.getBBox(lsst.afw.image.PARENT)</div>
              ?                                    ---------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#35e3701f">35e3701f</a> +         overlap = exposure.getBBox()</div>
                        overlap.clip(psfBBox)
                        if overlap.isEmpty():
                            return 0
                        flux = exposure.getCalib().getFlux(record.getD(self.magKey))
                        normalization = flux / psfImage.getArray().sum()
                        if psfBBox != overlap:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#94df22ea">94df22ea</a> -             psfImage = psfImage.Factory(psfImage, overlap, lsst.afw.image.PARENT)</div>
              ?                                                          -----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#35e3701f">35e3701f</a> +             psfImage = psfImage.Factory(psfImage, overlap)</div>
                            result = 1
                        else:
                            result = 2
                            if buffer != 0:
                                bufferedBBox = lsst.afw.geom.Box2I(psfBBox)
                                bufferedBBox.grow(buffer)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#94df22ea">94df22ea</a> -                 bufferedOverlap = exposure.getBBox(lsst.afw.image.PARENT)</div>
              ?                                                    ---------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#35e3701f">35e3701f</a> +                 bufferedOverlap = exposure.getBBox()</div>
                                bufferedOverlap.clip(bufferedBBox)
                                if bufferedOverlap != bufferedBBox:
                                    result = 1
                        image = exposure.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#94df22ea">94df22ea</a> -         subImage = image.Factory(image, overlap, lsst.afw.image.PARENT)</div>
              ?                                                -----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#35e3701f">35e3701f</a> +         subImage = image.Factory(image, overlap)</div>
                        subImage.scaledPlus(normalization, psfImage)
                        return result
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="94df22ea"/></a>94df22ea</h3>

<pre>
commit 94df22eaad3077ba3a8999fa074cf010e1e17c00
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Jan 14 15:58:16 2013 -0500

    Add mapper and tasks for generating extremely simple mock data.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
<h3><a name="5a35f7cb"/></a>5a35f7cb</h3>

<pre>
commit 5a35f7cbb172133b0ceaaecdbe17ec63ff506cdc
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 28 21:17:03 2014 -0500

    make tests deterministic by seeding RNG (DM-1003)
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/interpImage.py"/></a>python/lsst/pipe/tasks/interpImage.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#dd68e015">dd68e015</a> - #!/usr/bin/env python</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#c87f6fe5">c87f6fe5</a> + from __future__ import division, absolute_import</div>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#dd68e015">dd68e015</a> - import math</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#dd68e015">dd68e015</a> - </div>
                import lsst.pex.config as pexConfig
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#54640552">54640552</a> - import lsst.afw.math as afwMath</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#dd68e015">dd68e015</a> - import lsst.afw.geom as afwGeom</div>
                import lsst.meas.algorithms as measAlg
                import lsst.pipe.base as pipeBase
                import lsst.ip.isr as ipIsr
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#dd68e015">dd68e015</a> - __all__ = ["InterpImageConfig", "InterpMixinTask"]</div>
              ?                                        ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#8a8ae718">8a8ae718</a> + __all__ = ["InterpImageConfig", "InterpImageTask"]</div>
              ?                                        ^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#dd68e015">dd68e015</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#dd68e015">dd68e015</a> - FwhmPerSigma = 2 * math.sqrt(2 * math.log(2))</div>
                
                class InterpImageConfig(pexConfig.Config):
                    """Config for InterpImageTask
                    """
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#8a8ae718">8a8ae718</a> +     modelPsf = measAlg.GaussianPsfFactory.makeField(doc = "Model Psf factory")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#dd68e015">dd68e015</a> -     interpKernelSizeFactor = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#dd68e015">dd68e015</a> -         dtype = float,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
41   <a href="#dd68e015">dd68e015</a> -         doc = "Interpolation kernel size = interpFwhm converted to pixels * interpKernelSizeFactor.",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#dd68e015">dd68e015</a> -         default = 3.0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#dd68e015">dd68e015</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#54640552">54640552</a> -     useFallbackValueAtEdge = pexConfig.Field(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#54640552">54640552</a> -         dtype = bool,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#54640552">54640552</a> -         doc = "Smoothly taper (on the PSF scale) to the fallback value at the edge of the image?",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#54640552">54640552</a> -         default = True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#54640552">54640552</a> -     )</div>
                
                class InterpImageTask(pipeBase.Task):
                    """Interpolate over bad image pixels
                    """
                    ConfigClass = InterpImageConfig
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#54640552">54640552</a> -     _DefaultName = "interpImage"</div>
                
                    @pipeBase.timeMethod
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#54640552">54640552</a> -     def run(self, maskedImage, planeName, psf, fallbackValue=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#54640552">54640552</a> -         """Interpolate in place over the pixels in a maskedImage which are marked bad by a mask plane</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
41   <a href="#c87f6fe5">c87f6fe5</a> +     def interpolateOnePlane(self, maskedImage, planeName, fwhmPixels=None):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#dd68e015">dd68e015</a> +         """Interpolate over one mask plane, in place</div>
                
                        Note that the interpolation code in meas_algorithms currently
                        doesn't use the input PSF (though it's a required argument),
                        so it's not important to set the input PSF parameters exactly.
                
                        @param[in,out] maskedImage: MaskedImage over which to interpolate over edge pixels
                        @param[in] planeName: mask plane over which to interpolate
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#c87f6fe5">c87f6fe5</a> +         @param[in] fwhmPixels: FWHM of core star (pixels); if None then the default is used</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#7d30f26d">7d30f26d</a> -         @param[in] PSF to use to detect NaNs (if a float, interpreted as PSF's Gaussian FWHM in pixels)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#54640552">54640552</a> -         @param[in] fallbackValue Pixel value to use when all else fails (if None, use median)</div>
                        """
                        self.log.info("Interpolate over %s pixels" % (planeName,))
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#c87f6fe5">c87f6fe5</a> +         psfModel = self.config.modelPsf.apply(fwhm=fwhmPixels)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#54640552">54640552</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#54640552">54640552</a> -         if isinstance(psf, float):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#54640552">54640552</a> -             fwhmPixels = psf</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#54640552">54640552</a> -             kernelSize = int(round(fwhmPixels * self.config.interpKernelSizeFactor))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#54640552">54640552</a> -             kernelDim = afwGeom.Point2I(kernelSize, kernelSize)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#54640552">54640552</a> -             coreSigma = fwhmPixels / FwhmPerSigma</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#54640552">54640552</a> -             psf = measAlg.DoubleGaussianPsf(kernelDim[0], kernelDim[1], coreSigma, coreSigma*2.5, 0.1)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#54640552">54640552</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#54640552">54640552</a> -         if fallbackValue is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#19c4a6d1">19c4a6d1</a> -             fallbackValue = max(afwMath.makeStatistics(maskedImage, afwMath.MEDIAN).getValue(), 0.0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#19c4a6d1">19c4a6d1</a> -         elif fallbackValue < 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#19c4a6d1">19c4a6d1</a> -             self.log.warn("Negative interpolation fallback value provided: %f" % fallbackValue)</div>
                
                        nanDefectList = ipIsr.getDefectListFromMask(maskedImage, planeName, growFootprints=0)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#54640552">54640552</a> -         measAlg.interpolateOverDefects(maskedImage, psf, nanDefectList, fallbackValue,</div>
              ?                                                                         ^^^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#6c01b654">6c01b654</a> +         measAlg.interpolateOverDefects(maskedImage, psfModel, nanDefectList, 0.0)</div>
              ?                                                        +++++                 ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#54640552">54640552</a> -                                        self.config.useFallbackValueAtEdge)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#7d30f26d">7d30f26d</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#7d30f26d">7d30f26d</a> -     interpolateOnePlane = run</div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="54640552"/></a>54640552</h3>

<pre>
commit 54640552cc6c1270650c56dddad173e3dd1bd775
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Fri Jun 13 09:42:18 2014 -0700

    Cleanup interpolation tasks and implement useFallbackValueAtEdge (DM-756)
</pre>
<h3><a name="dd68e015"/></a>dd68e015</h3>

<pre>
commit dd68e01504535ac45db1a91c10be91e350595b8b
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Oct 4 11:32:12 2012 -0700

    Add missing subtasks
</pre>
<h3><a name="7d30f26d"/></a>7d30f26d</h3>

<pre>
commit 7d30f26dbac2ce8565ae671d595a4ee101e4768b
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jun 18 19:55:09 2014 -0400

    respond to review comments
</pre>
<h3><a name="19c4a6d1"/></a>19c4a6d1</h3>

<pre>
commit 19c4a6d1e3e5026ddd74527a205fea819a844928
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Dec 30 13:52:38 2014 -0500

    InterpImageTask: don't allow a negative fallbackValue
    
    The fallbackValue is applied to the variance as well as the image,
    so we should not use a non-negative value when we calculate it internally.
    We still allow a negative value passed from the user (who should know what
    he's doing); in that case, we log a warning.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="c87f6fe5"/></a>c87f6fe5</h3>

<pre>
commit c87f6fe514160e604e1c64c97b4160bfa743b11c
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 29 11:21:47 2014 -0700

    Cleaned up the code based on final decisions on units (pixels) and FWHM vs sigma (FWHM).
</pre>
<h3><a name="8a8ae718"/></a>8a8ae718</h3>

<pre>
commit 8a8ae7187b479588318764f61783ff1b0339ca6b
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Feb 24 07:40:33 2014 -0800

    Use the new PSF model registry
</pre>
<h3><a name="6c01b654"/></a>6c01b654</h3>

<pre>
commit 6c01b654e2b428a5a1068c6e8270038acda8d71e
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Oct 4 14:41:13 2012 -0500

    Fix bugs in the new coadd tasks.
</pre>
<h3><a name="dd68e015"/></a>dd68e015</h3>

<pre>
commit dd68e01504535ac45db1a91c10be91e350595b8b
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Oct 4 11:32:12 2012 -0700

    Add missing subtasks
</pre>
</div>


[Return to list](#homelist)
# <a name="bin/imageDifference.py"/></a>bin/imageDifference.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#7a13b5d4">7a13b5d4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#f0b2a2c5">f0b2a2c5</a> + # Workaround for a problem in the lsstimport module.  This module sets</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#f0b2a2c5">f0b2a2c5</a> + # RTLD_GLOBAL for all LSST imports, which is necessary for RTTI, but</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#f0b2a2c5">f0b2a2c5</a> + # causes scipy to fail when loading numpy.  Importing scipy beforehand</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#f0b2a2c5">f0b2a2c5</a> + # avoids this problem.</div>
                try:
                    import scipy.stats
                except ImportError:
                    pass
                from lsst.pipe.tasks.imageDifference import ImageDifferenceTask
                
                ImageDifferenceTask.parseAndRun()
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="f0b2a2c5"/></a>f0b2a2c5</h3>

<pre>
commit f0b2a2c596c275c522b8d58efc2b3139fcb5db1c
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 23 16:49:32 2013 -0700

    Reporting correct reason for scipy import in imageDifference.py
</pre>
<h3><a name="7a13b5d4"/></a>7a13b5d4</h3>

<pre>
commit 7a13b5d4d5c96d5116fc0f00d1b712a125c7e890
Author: Andy Becker <acbecker@gmail.com>
Date:   Wed Oct 23 15:36:40 2013 -0700

    Addressed all ticket 2822 comments from Paul and Serge.  Running unit tests next.
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/matchBackgrounds.py"/></a>tests/matchBackgrounds.py
### Diff:

<pre>
                #!/usr/bin/env python
                
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import unittest
                import lsst.utils.tests as utilsTests
                import lsst.pipe.tasks as pipeTasks
                import lsst.afw.image as afwImage
                import lsst.afw.geom as afwGeom
                import lsst.afw.math as afwMath
                import numpy
                from lsst.pipe.tasks.matchBackgrounds import MatchBackgroundsTask
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#5a35f7cb">5a35f7cb</a> + numpy.random.seed(1)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#5a35f7cb">5a35f7cb</a> + </div>
                class MatchBackgroundsTestCase(unittest.TestCase):
                    """Background Matching"""
                
                    def setUp(self):
                        #Make a few test images here
                        #1) full coverage (plain vanilla image) has mean = 50counts
                        self.vanilla = afwImage.ExposureF(600,600)
                        im = self.vanilla.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#261978ff">261978ff</a> -         afwMath.randomGaussianImage(im,afwMath.Random(1))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#232d9c8c">232d9c8c</a> +         afwMath.randomGaussianImage(im,afwMath.Random('MT19937', 1))</div>
              ?                                                       +++++++++++
                        im += 50
                        self.vanilla.getMaskedImage().getVariance().set(1.0)
                        
                        #2) has chip gap and mean = 10 counts
                        self.chipGap = afwImage.ExposureF(600,600)
                        im = self.chipGap.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#261978ff">261978ff</a> -         afwMath.randomGaussianImage(im,afwMath.Random(2))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#232d9c8c">232d9c8c</a> +         afwMath.randomGaussianImage(im,afwMath.Random('MT19937', 2))</div>
              ?                                                       +++++++++++
                        im += 10
                        im.getArray()[:,200:300] = numpy.nan #simulate 100pix chip gap
                        self.chipGap.getMaskedImage().getVariance().set(1.0)
                        
                        #3) has low coverage and mean = 20 counts
                        self.lowCover = afwImage.ExposureF(600,600)
                        im = self.lowCover.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#261978ff">261978ff</a> -         afwMath.randomGaussianImage(im,afwMath.Random(3))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#232d9c8c">232d9c8c</a> +         afwMath.randomGaussianImage(im,afwMath.Random('MT19937', 3))</div>
              ?                                                       +++++++++++
                        im += 20
                        self.lowCover.getMaskedImage().getImage().getArray()[:,200:] = numpy.nan 
                        self.lowCover.getMaskedImage().getVariance().set(1.0)
                
                        #make a matchBackgrounds object
                        self.matcher = pipeTasks.matchBackgrounds.MatchBackgroundsTask()
                        self.matcher.config.usePolynomial = True
                        self.matcher.binSize = 64
                        self.matcher.debugDataIdString = 'Test Visit'
                
                        self.sctrl = afwMath.StatisticsControl()
                        self.sctrl.setNanSafe(True)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#8c76c6d8">8c76c6d8</a> -         self.sctrl.setAndMask(afwImage.MaskU.getPlaneBitMask(["NO_DATA", "DETECTED",</div>
              ?                                                                ^^^ ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#0c4ef68b">0c4ef68b</a> +         self.sctrl.setAndMask(afwImage.MaskU.getPlaneBitMask(["EDGE", "DETECTED",</div>
              ?                                                                ^ ^^
                                                                              "DETECTED_NEGATIVE","SAT",
                                                                              "BAD","INTRP","CR"]))
                        
                    def tearDown(self):
                        self.vanilla = None
                        self.lowCover = None
                        self.chipGap = None
                        self.matcher = None
                        self.sctrl = None
                        
                    def checkAccuracy(self, refExp, sciExp):
                        """Check for accurate background matching in the matchBackgrounds Method.
                        
                           To be called by tests expecting successful matching.
                        """
                        struct = self.matcher.matchBackgrounds(refExp, sciExp)
                        resultExp = sciExp
                        MSE = struct.matchedMSE
                        diffImVar = struct.diffImVar
                        RMS = struct.fitRMS
                        
                        resultStats = afwMath.makeStatistics(resultExp.getMaskedImage(),
                                                             afwMath.MEAN | afwMath.VARIANCE,
                                                             self.sctrl)
                        resultMean, _ = resultStats.getResult(afwMath.MEAN)
                        resultVar, _ = resultStats.getResult(afwMath.VARIANCE)
                        refStats = afwMath.makeStatistics(refExp.getMaskedImage(), afwMath.MEAN | afwMath.VARIANCE,self.sctrl)
                        refMean, _ = refStats.getResult(afwMath.MEAN)
                        #print "refMean %.03f, resultMean %.03f, resultVar %.03f"%(refMean, resultMean, resultVar)
                        self.assertAlmostEqual(refMean, resultMean, delta = resultVar) #very loose test.      
                        #If MSE is within 1% of the variance of the difference image:  SUCCESS
                        self.assertLess(MSE, diffImVar * 1.01)
                    
                                      
                    #-=-=-=-=-=-=Test Polynomial Fit (Approximate class)-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    def testConfig(self):
                        """Test checks on the configuration.
                        
                            1) Should throw ValueError if binsize is > size of image
                            2) Need Order + 1 points to fit. Should throw ValueError if Order > # of grid points
                        """
                        for size in range(601,1000,100):
                            self.matcher.config.binSize = size
                            self.assertRaises(ValueError,self.matcher.matchBackgrounds,self.chipGap, self.vanilla)
                            
                        #for image 600x600 and binsize 256 = 3x3 grid for fitting.  order 3,4,5...should fail
                        self.matcher.config.binSize = 256
                        for order in range(3,8):
                            self.matcher.config.order = order
                            self.assertRaises(ValueError,self.matcher.matchBackgrounds,self.chipGap, self.vanilla)
                    
                        for size, order in [(600,0), (300,1), (200,2), (100,5)]:
                            self.matcher.config.binSize = size
                            self.matcher.config.order = order
                            self.checkAccuracy(self.chipGap, self.vanilla)
                        
                    def testInputParams(self):
                        """Test throws RuntimeError when dimensions don't match."""
                        self.matcher.config.binSize = 128
                        self.matcher.config.order = 2
                        #make image with wronge size
                        wrongSize = afwImage.ExposureF(500,500)
                        wrongSize.getMaskedImage().getImage().set(1.0)
                        wrongSize.getMaskedImage().getVariance().set(1.0)
                        self.assertRaises(RuntimeError,self.matcher.matchBackgrounds,self.chipGap, wrongSize)
                
                    def testVanillaApproximate(self):
                        """Test basic matching scenario with .Approximate."""
                        self.matcher.config.binSize = 128
                        self.matcher.config.order = 4
                        self.checkAccuracy(self.chipGap, self.vanilla)
                
                    def testRampApproximate(self):
                        """Test basic matching of a linear gradient with Approximate."""
                        self.matcher.config.binSize = 64
                        testExp = afwImage.ExposureF(self.vanilla, True)
                        testIm = testExp.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#bbbe8bcb">bbbe8bcb</a> -         afwMath.randomGaussianImage(testIm,afwMath.Random(5))</div>
              ?                                                           -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#0d96ebc5">0d96ebc5</a> +         afwMath.randomGaussianImage(testIm,afwMath.Random())</div>
                        nx, ny = testExp.getDimensions()
                        dzdx, dzdy, z0 = 1, 2, 0.0
                        for x in range(nx):
                            for y in range(ny):
                                z = testIm.get(x, y)
                                testIm.set(x, y, z + dzdx * x + dzdy * y + z0)          
                        self.checkAccuracy(testExp, self.vanilla)
                        
                    def testLowCoverThrowExpectionApproximate(self):
                        """Test low coverage with .config.undersampleStyle = THROW_EXCEPTION.
                        Confirm throws ValueError with Approximate.
                        """
                        self.matcher.config.binSize = 64
                        self.matcher.config.order = 8
                        self.matcher.config.undersampleStyle =  "THROW_EXCEPTION"
                        self.assertRaises(ValueError,self.matcher.matchBackgrounds,self.chipGap, self.lowCover)
                
                
                    def testLowCoverIncreaseSampleApproximate(self):
                        """Test low coverage with .config.undersampleStyle = INCREASE_NXNYSAMPLE.
                        Confirm successful matching with .Approximate.
                        """
                        self.matcher.config.binSize = 128
                        self.matcher.config.order = 4        
                        self.matcher.config.undersampleStyle = "INCREASE_NXNYSAMPLE"
                        self.checkAccuracy(self.chipGap, self.lowCover)
                
                    def testLowCoverReduceInterpOrderApproximate(self):
                        """Test low coverage with .config.undersampleStyle = REDUCE_INTERP_ORDER.
                        Confirm successful matching with .Approximate.
                        """
                        self.matcher.config.binSize = 64
                        self.matcher.config.order = 8
                        self.matcher.config.undersampleStyle =  "REDUCE_INTERP_ORDER"
                        self.checkAccuracy(self.chipGap, self.lowCover)
                        
                    def testMasksApproximate(self):
                        """Test that masks are ignored in matching backgrounds: .Approximate."""
                        testExp = afwImage.ExposureF(self.chipGap, True)
                        im   = testExp.getMaskedImage().getImage()
                        im += 10
                        mask = testExp.getMaskedImage().getMask()
                        satbit = mask.getPlaneBitMask('SAT')
                        for i in range(0,200,20):
                            mask.set(5,i,satbit)
                            im.set(5,i, 65000)
                        self.matcher.config.binSize = 128
                        self.matcher.config.order = 4
                        self.checkAccuracy(self.chipGap, testExp)
                
                    def testWeightsByInvError(self):
                        """Test that bins with high std.dev. and low count are weighted less in fit."""
                        testExp = afwImage.ExposureF(self.chipGap, True)
                        testIm = testExp.getMaskedImage().getImage()
                        self.matcher.config.binSize = 60
                        self.matcher.config.order = 4
                        for x in  range(0,50):
                            for y  in range(0,50):
                                if numpy.random.rand(1)[0] < 0.6:
                                    testIm.set(x,y,numpy.nan)
                                else:
                                    testIm.set(x, y, numpy.random.rand(1)[0]*1000)
                                    
                        struct = self.matcher.matchBackgrounds(self.vanilla, testExp)
                        resultExp = testExp
                        resultArr = resultExp.getMaskedImage().getImage().getArray()[60:,60:]
                        resultMean = numpy.mean(resultArr[numpy.where(~numpy.isnan(resultArr))])
                        resultVar = numpy.std(resultArr[numpy.where(~numpy.isnan(resultArr))])**2
                        self.assertAlmostEqual(50, resultMean, delta = resultVar) #very loose test.        
                                   
                    def testSameImageApproximate(self):
                        """Test able to match identical images:  .Approximate."""
                        vanillaTwin = afwImage.ExposureF(self.vanilla, True)
                        self.matcher.config.binSize = 128
                        self.matcher.config.order = 4                
                        self.checkAccuracy(self.vanilla, vanillaTwin)
                
                
                    #-=-=-=-=-=-=-=-=-=Background Interp (Splines) -=-=-=-=-=-=-=-=-
                    def testVanillaBackground(self):
                        """Test basic matching scenario with .Background."""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 128
                        self.checkAccuracy(self.chipGap, self.vanilla)
                
                    def testRampBackground(self):
                        """Test basic matching of a linear gradient with .Background."""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 64
                        testExp = afwImage.ExposureF(self.vanilla, True)
                        testIm = testExp.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#bbbe8bcb">bbbe8bcb</a> -         afwMath.randomGaussianImage(testIm,afwMath.Random(5))</div>
              ?                                                           -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#0d96ebc5">0d96ebc5</a> +         afwMath.randomGaussianImage(testIm,afwMath.Random())</div>
                        nx, ny = testExp.getDimensions()
                        dzdx, dzdy, z0 = 1, 2, 0.0
                        for x in range(nx):
                            for y in range(ny):
                                z = testIm.get(x, y)
                                testIm.set(x, y, z + dzdx * x + dzdy * y + z0)
                        self.checkAccuracy(testExp, self.vanilla)
                        
                    def testUndersampleBackgroundPasses(self):
                        """Test undersample style (REDUCE_INTERP_ORDER): .Background.
                        
                        INCREASE_NXNYSAMPLE no longer supported by .Background because .Backgrounds's are
                        defined by their nx and ny grid. 
                        """
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 256
                        self.matcher.config.undersampleStyle = "REDUCE_INTERP_ORDER"
                        self.checkAccuracy(self.chipGap, self.vanilla)
                        
                        self.matcher.config.undersampleStyle = "INCREASE_NXNYSAMPLE"
                        self.assertRaises(RuntimeError, self.matcher.matchBackgrounds,self.chipGap, self.vanilla)
                        
                    def testSameImageBackground(self):
                        """Test able to match identical images with .Background."""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 256
                        self.checkAccuracy(self.vanilla, self.vanilla)
                
                    def testMasksBackground(self):
                        """Test masks ignored in matching backgrounds with .Background."""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 256
                        testExp = afwImage.ExposureF(self.chipGap, True)
                        im   = testExp.getMaskedImage().getImage()
                        im += 10
                        mask = testExp.getMaskedImage().getMask()
                        satbit = mask.getPlaneBitMask('SAT')
                        for i in range(0,200,20):
                            mask.set(5,i,satbit)
                            im.set(5,i, 65000)
                        self.checkAccuracy(self.chipGap, testExp)
                
                    def testChipGapHorizontalBackground(self): 
                        """ Test able to match image with horizontal chip gap (row of nans) with .Background"""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 64
                        chipGapHorizontal = afwImage.ExposureF(600,600)
                        im = chipGapHorizontal.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#64418e93">64418e93</a> -         afwMath.randomGaussianImage(im,afwMath.Random(8))</div>
              ?                                                       -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
291  <a href="#0d96ebc5">0d96ebc5</a> +         afwMath.randomGaussianImage(im,afwMath.Random())</div>
                        im += 10
                        im.getArray()[200:300,:] = numpy.nan #simulate 100pix chip gap horizontal
                        chipGapHorizontal.getMaskedImage().getVariance().set(1.0)
                        self.checkAccuracy(self.vanilla, chipGapHorizontal)
                
                    def testChipGapVerticalBackground(self):
                        """ Test able to match images with vertical chip gaps (column of nans) wider than bin size"""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 64
                        self.checkAccuracy(self.chipGap, self.vanilla)
                
                    def testLowCoverBackground(self):
                        """ Test able to match images that do not cover the whole patch"""
                        self.matcher.config.usePolynomial = False
                        self.matcher.config.binSize = 64
                        self.checkAccuracy(self.vanilla, self.lowCover)
                
                
                #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
                
                def suite():
                    """Returns a suite containing all the test cases in this module."""
                
                    utilsTests.init()
                
                    suites = []
                    suites += unittest.makeSuite(MatchBackgroundsTestCase)
                    suites += unittest.makeSuite(utilsTests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(shouldExit = False):
                    """Run the tests"""
                
                    utilsTests.run(suite(), shouldExit)
                
                if __name__ == "__main__":
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="64418e93"/></a>64418e93</h3>

<pre>
commit 64418e9380c85b3616394b6eb1ea2a480c6026da
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri Nov 2 04:14:22 2012 -0500

    Major cleanup. Check docstrings
</pre>
<h3><a name="261978ff"/></a>261978ff</h3>

<pre>
commit 261978ff3f3ec990aefa88e7416838f100592464
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Oct 16 22:31:09 2012 -0500

    beef up and reorganize unit tests
</pre>
<h3><a name="bbbe8bcb"/></a>bbbe8bcb</h3>

<pre>
commit bbbe8bcbf031dc580f3c2f588bcae41ed3f94694
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Oct 30 23:33:06 2012 -0500

    refactor to accomodate afw tickets/2363
</pre>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="232d9c8c"/></a>232d9c8c</h3>

<pre>
commit 232d9c8c747ffa8bf05c301323b802002e0d0180
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Jul 30 01:30:42 2014 -0500

    revise changes in DM-1003 and #2411:
    reinstate inverse weighting in tests/matchBackgrounds.py
    and the check for uniform image difference in matchBackgrounds()
</pre>
<h3><a name="0c4ef68b"/></a>0c4ef68b</h3>

<pre>
commit 0c4ef68b68ea81c32021276b30e149eddd8584c3
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Oct 31 19:38:12 2012 -0500

    Cleaned up. Thank you, Russell for the comments
</pre>
<h3><a name="0d96ebc5"/></a>0d96ebc5</h3>

<pre>
commit 0d96ebc52fd735b0a9565be2aeb7270eb8dec07c
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jul 29 16:14:27 2014 -0400

    fix apparent misuse of lsst.afw.math.Random API
    
    The lsst.afw.math.Random constructor accepts an integer, which
    is interpreted as an RNG algorithm.  However, its use here seems
    to be assuming that it is a seed.
</pre>
<h3><a name="5a35f7cb"/></a>5a35f7cb</h3>

<pre>
commit 5a35f7cbb172133b0ceaaecdbe17ec63ff506cdc
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 28 21:17:03 2014 -0500

    make tests deterministic by seeding RNG (DM-1003)
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/matchBackgrounds.py"/></a>python/lsst/pipe/tasks/matchBackgrounds.py
### Diff:

<pre>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILIY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                
                import numpy
                import lsst.afw.image as afwImage
                import lsst.afw.math as afwMath
                import lsst.afw.geom as afwGeom
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                import lsstDebug
                
                class MatchBackgroundsConfig(pexConfig.Config):
                
                    usePolynomial = pexConfig.Field(
                        dtype = bool,
                        doc = "Fit background difference with Chebychev polynomial interpolation " \
                        "(using afw.math.Approximate)? If False, fit with spline interpolation using afw.math.Background",
                        default = False
                    )
                    order = pexConfig.Field(
                        dtype = int,
                        doc = "Order of Chebyshev polynomial background model. Ignored if usePolynomial False",
                        default = 8
                    )
                    badMaskPlanes = pexConfig.ListField(
                        doc = "Names of mask planes to ignore while estimating the background",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#8c76c6d8">8c76c6d8</a> -         dtype = str, default = ["NO_DATA", "DETECTED", "DETECTED_NEGATIVE","SAT","BAD","INTRP","CR"],</div>
              ?                                  ^^^ ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#bbbe8bcb">bbbe8bcb</a> +         dtype = str, default = ["EDGE", "DETECTED", "DETECTED_NEGATIVE","SAT","BAD","INTRP","CR"],</div>
              ?                                  ^ ^^
                        itemCheck = lambda x: x in afwImage.MaskU().getMaskPlaneDict().keys(),
                    )
                    gridStatistic = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "Type of statistic to estimate pixel value for the grid points",
                        default = "MEAN",
                        allowed = {
                            "MEAN": "mean",
                            "MEDIAN": "median",
                            "MEANCLIP": "clipped mean"
                            }
                    )
                    undersampleStyle = pexConfig.ChoiceField(
                        doc = "Behaviour if there are too few points in grid for requested interpolation style. " \
                        "Note: INCREASE_NXNYSAMPLE only allowed for usePolynomial=True.",
                        dtype = str,
                        default = "REDUCE_INTERP_ORDER",
                        allowed = {
                            "THROW_EXCEPTION": "throw an exception if there are too few points",
                            "REDUCE_INTERP_ORDER": "use an interpolation style with a lower order.",
                            "INCREASE_NXNYSAMPLE": "Increase the number of samples used to make the interpolation grid.",
                            }
                    )
                    binSize = pexConfig.Field(
                        doc = "Bin size for gridding the difference image and fitting a spatial model",
                        dtype=int,
                        default=256
                    )
                    interpStyle = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "Algorithm to interpolate the background values; ignored if usePolynomial is True" \
                              "Maps to an enum; see afw.math.Background",
                        default = "AKIMA_SPLINE",
                        allowed={
                             "CONSTANT" : "Use a single constant value",
                             "LINEAR" : "Use linear interpolation",
                             "NATURAL_SPLINE" : "cubic spline with zero second derivative at endpoints",
                             "AKIMA_SPLINE": "higher-level nonlinear spline that is more robust to outliers",
                             "NONE": "No background estimation is to be attempted",
                             }
                    )
                    numSigmaClip = pexConfig.Field(
                        dtype = int,
                        doc = "Sigma for outlier rejection; ignored if gridStatistic != 'MEANCLIP'.",
                        default = 3
                    )
                    numIter = pexConfig.Field(
                        dtype = int,
                        doc = "Number of iterations of outlier rejection; ignored if gridStatistic != 'MEANCLIP'.",
                        default = 2
                    )
                    bestRefWeightCoverage = pexConfig.RangeField(
                        dtype = float,
                        doc = "Weight given to coverage (number of pixels that overlap with patch), " \
                        "when calculating best reference exposure. Higher weight prefers exposures with high coverage." \
                        "Ignored when reference visit is supplied",
                        default = 0.4,
                        min = 0., max = 1.
                    )
                    bestRefWeightVariance = pexConfig.RangeField(
                        dtype = float,
                        doc = "Weight given to image variance when calculating best reference exposure. " \
                        "Higher weight prefers exposures with low image variance. Ignored when reference visit is supplied",
                        default = 0.4,
                        min = 0., max = 1.
                    )
                    bestRefWeightLevel = pexConfig.RangeField(
                        dtype = float,
                        doc = "Weight given to mean background level when calculating best reference exposure. " \
                        "Higher weight prefers exposures with low mean background level. " \
                        "Ignored when reference visit is supplied.",
                        default = 0.2,
                        min = 0., max = 1.
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#6ed9d4c0">6ed9d4c0</a> - </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#2321d00c">2321d00c</a> +     approxWeighting = pexConfig.Field(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#2321d00c">2321d00c</a> +         dtype = bool,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#0e1ad86f">0e1ad86f</a> +         doc = ("Use inverse-variance weighting when approximating background offset model? " +</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#0e1ad86f">0e1ad86f</a> +                "This will fail when the background offset is constant " +</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#0e1ad86f">0e1ad86f</a> +                "(this is usually only the case in testing with artificial images)." +</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#0e1ad86f">0e1ad86f</a> +                "(usePolynomial=True)"),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#2321d00c">2321d00c</a> +         default = True,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#2321d00c">2321d00c</a> +     )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#3ff56df7">3ff56df7</a> +     gridStdevEpsilon = pexConfig.RangeField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#3ff56df7">3ff56df7</a> +         dtype = float,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#3ff56df7">3ff56df7</a> +         doc = "Tolerance on almost zero standard deviation in a background-offset grid bin. " \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#3ff56df7">3ff56df7</a> +         "If all bins have a standard deviation below this value, the background offset model " \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#3ff56df7">3ff56df7</a> +         "is approximated without inverse-variance weighting. (usePolynomial=True)",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#3ff56df7">3ff56df7</a> +         default = 1e-8,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#3ff56df7">3ff56df7</a> +         min = 0.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#3ff56df7">3ff56df7</a> +     )</div>
                
                class MatchBackgroundsTask(pipeBase.Task):
                    ConfigClass = MatchBackgroundsConfig
                    _DefaultName = "matchBackgrounds"
                    def __init__(self, *args, **kwargs):
                        pipeBase.Task.__init__(self, *args, **kwargs)
                
                        self.sctrl = afwMath.StatisticsControl()
                        self.sctrl.setAndMask(afwImage.MaskU.getPlaneBitMask(self.config.badMaskPlanes))
                        self.sctrl.setNanSafe(True)
                
                    @pipeBase.timeMethod
                    def run(self, expRefList, expDatasetType, imageScalerList=None, refExpDataRef=None, refImageScaler=None):
                        """Match the backgrounds of a list of coadd temp exposures to a reference coadd temp exposure.
                
                        Choose a refExpDataRef automatically if none supplied.
                
                        @param[in] expRefList: list of data references to science exposures to be background-matched;
                            all exposures must exist.
                        @param[in] expDatasetType: dataset type of exposures, e.g. 'goodSeeingCoadd_tempExp'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#5bf32678">5bf32678</a> -         @param[in] imageScalerList: list of image scalers (ImageScaler);</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#b5847309">b5847309</a> +         @param[in] imageScalerList: list of image scalers (coaddUtils.ImageScaler);</div>
              ?                                                            +++++++++++
                            if None then the images are not scaled
                        @param[in] refExpDataRef: data reference for the reference exposure.
                            If None, then this task selects the best exposures from expRefList.
                            if not None then must be one of the exposures in expRefList.
                        @param[in] refImageScaler: image scaler for reference image;
                            ignored if refExpDataRef is None, else scaling is not performed if None
                
                        @return: a pipBase.Struct containing these fields:
                        - backgroundInfoList: a list of pipeBase.Struct, one per exposure in expRefList,
                            each of which contains these fields:
                            - isReference: this is the reference exposure (only one returned Struct will
                                contain True for this value, unless the ref exposure is listed multiple times)
                            - backgroundModel: differential background model (afw.Math.Background or afw.Math.Approximate).
                                Add this to the science exposure to match the reference exposure.
                            - fitRMS: rms of the fit. This is the sqrt(mean(residuals**2)).
                            - matchedMSE: the MSE of the reference and matched images: mean((refImage - matchedSciImage)**2);
                              should be comparable to difference image's mean variance.
                            - diffImVar: the mean variance of the difference image.
                            All fields except isReference will be None if isReference True or the fit failed.
                        
                        @warning: all exposures must exist on disk
                        """
                        
                        numExp = len(expRefList)
                        if numExp < 1:
                            raise pipeBase.TaskError("No exposures to match")
                
                        if expDatasetType is None:
                            raise pipeBase.TaskError("Must specify expDatasetType")
                
                        if imageScalerList is None:
                            self.log.info("imageScalerList is None; no scaling will be performed")
                            imageScalerList = [None] * numExp
                        
                        if len(expRefList) != len(imageScalerList):
                            raise RuntimeError("len(expRefList) = %s != %s = len(imageScalerList)" % \
                                (len(expRefList), len(imageScalerList)))
                
                        refInd = None
                        if refExpDataRef is None:
                            # select the best reference exposure from expRefList
                            refInd = self.selectRefExposure(
                                expRefList = expRefList,
                                imageScalerList = imageScalerList,
                                expDatasetType = expDatasetType,
                            )
                            refExpDataRef = expRefList[refInd]
                            refImageScaler = imageScalerList[refInd]
                            
                        # refIndSet is the index of all exposures in expDataList that match the reference.
                        # It is used to avoid background-matching an exposure to itself. It is a list
                        # because it is possible (though unlikely) that expDataList will contain duplicates.
                        expKeyList = refExpDataRef.butlerSubset.butler.getKeys(expDatasetType)
                        refMatcher = DataRefMatcher(refExpDataRef.butlerSubset.butler, expDatasetType)            
                        refIndSet = set(refMatcher.matchList(ref0 = refExpDataRef, refList = expRefList))
                
                        if refInd is not None and refInd not in refIndSet:
                            raise RuntimeError("Internal error: selected reference %s not found in expRefList")
                        
                        refExposure = refExpDataRef.get(expDatasetType, immediate=True)
                        if refImageScaler is not None:
                            refMI = refExposure.getMaskedImage()
                            refImageScaler.scaleMaskedImage(refMI)
                
                        debugIdKeyList = tuple(set(expKeyList) - set(['tract','patch']))
                
                        self.log.info("Matching %d Exposures" % (numExp))
                
                        backgroundInfoList = []
                        for ind, (toMatchRef, imageScaler) in enumerate(zip(expRefList, imageScalerList)):
                            if ind in refIndSet:
                                backgroundInfoStruct = pipeBase.Struct(
                                    isReference = True,
                                    backgroundModel = None,
                                    fitRMS = 0.0,
                                    matchedMSE = None,
                                    diffImVar = None,
                                )
                            else:
                                self.log.info("Matching background of %s to %s" % (toMatchRef.dataId, refExpDataRef.dataId))
                                try:
                                    toMatchExposure = toMatchRef.get(expDatasetType, immediate=True)
                                    if imageScaler is not None:
                                        toMatchMI = toMatchExposure.getMaskedImage()
                                        imageScaler.scaleMaskedImage(toMatchMI)
                                    #store a string specifying the visit to label debug plot
                                    self.debugDataIdString = ''.join([str(toMatchRef.dataId[vk]) for vk in debugIdKeyList])
                                    backgroundInfoStruct = self.matchBackgrounds(
                                        refExposure = refExposure,
                                        sciExposure = toMatchExposure,
                                    )
                                    backgroundInfoStruct.isReference = False
                                except Exception, e:
                                    self.log.warn("Failed to fit background %s: %s" % (toMatchRef.dataId, e))
                                    backgroundInfoStruct = pipeBase.Struct(
                                        isReference = False,
                                        backgroundModel = None,
                                        fitRMS = None,
                                        matchedMSE = None,
                                        diffImVar = None,
                                    )
                    
                            backgroundInfoList.append(backgroundInfoStruct)
                            
                        return pipeBase.Struct(
                            backgroundInfoList = backgroundInfoList)
                        
                    @pipeBase.timeMethod
                    def selectRefExposure(self, expRefList, imageScalerList, expDatasetType):
                        """Find best exposure to use as the reference exposure
                
                        Calculate an appropriate reference exposure by minimizing a cost function that penalizes
                        high variance,  high background level, and low coverage. Use the following config parameters:
                        - bestRefWeightCoverage
                        - bestRefWeightVariance
                        - bestRefWeightLevel
                
                        @param[in] expRefList: list of data references to exposures.
                            Retrieves dataset type specified by expDatasetType.
                            If an exposure is not found, it is skipped with a warning.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#5bf32678">5bf32678</a> -         @param[in] imageScalerList: list of image scalers (ImageScaler);</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#fb592e0e">fb592e0e</a> +         @param[in] imageScalerList: list of image scalers (coaddUtils.ImageScaler);</div>
              ?                                                            +++++++++++
                            must be the same length as expRefList
                        @param[in] expDatasetType: dataset type of exposure: e.g. 'goodSeeingCoadd_tempExp'
                
                        @return: index of best exposure
                        
                        @raise pipeBase.TaskError if none of the exposures in expRefList are found.
                        """
                        self.log.info("Calculating best reference visit")
                        varList =  []
                        meanBkgdLevelList = []
                        coverageList = []
                        
                        if len(expRefList) != len(imageScalerList):
                            raise RuntimeError("len(expRefList) = %s != %s = len(imageScalerList)" % \
                                (len(expRefList), len(imageScalerList)))
                
                        for expRef, imageScaler  in zip(expRefList, imageScalerList):
                            exposure = expRef.get(expDatasetType, immediate=True)
                            maskedImage = exposure.getMaskedImage()
                            if imageScaler is not None:
                                try:
                                    imageScaler.scaleMaskedImage(maskedImage)
                                except:
                                    #need to put a place holder in Arr
                                    varList.append(numpy.nan)
                                    meanBkgdLevelList.append(numpy.nan)
                                    coverageList.append(numpy.nan)
                                    continue  
                            statObjIm = afwMath.makeStatistics(maskedImage.getImage(), maskedImage.getMask(),
                                afwMath.MEAN | afwMath.NPOINT | afwMath.VARIANCE, self.sctrl)
                            meanVar, meanVarErr = statObjIm.getResult(afwMath.VARIANCE)
                            meanBkgdLevel, meanBkgdLevelErr = statObjIm.getResult(afwMath.MEAN)
                            npoints, npointsErr = statObjIm.getResult(afwMath.NPOINT)
                            varList.append(meanVar)
                            meanBkgdLevelList.append(meanBkgdLevel)
                            coverageList.append(npoints)
                        if not coverageList:
                             raise pipeBase.TaskError(
                                "None of the candidate %s exist; cannot select best reference exposure" % (expDatasetType,))
                       
                        # Normalize metrics to range from  0 to 1
                        varArr = numpy.array(varList)/numpy.nanmax(varList)
                        meanBkgdLevelArr = numpy.array(meanBkgdLevelList)/numpy.nanmax(meanBkgdLevelList)
                        coverageArr = numpy.nanmin(coverageList)/numpy.array(coverageList)
                
                        costFunctionArr = self.config.bestRefWeightVariance  * varArr
                        costFunctionArr += self.config.bestRefWeightLevel * meanBkgdLevelArr     
                        costFunctionArr += self.config.bestRefWeightCoverage * coverageArr
                        return numpy.nanargmin(costFunctionArr)
                
                    
                    @pipeBase.timeMethod
                    def matchBackgrounds(self, refExposure, sciExposure):
                        """
                        Match science exposure's background level to that of reference exposure.
                
                        Process creates a difference image of the reference exposure minus the science exposure, and then
                        generates an afw.math.Background object. It assumes (but does not require/check) that the mask plane
                        already has detections set. If detections have not been set/masked, sources will bias the
                        background estimation. 
                        The 'background' of the difference image is smoothed by spline interpolation (by the Background class)
                        or by polynomial interpolation by the Approximate class. This model of difference image is added to the
                        science exposure in memory.
                        Fit diagnostics are also calculated and returned.
                
                        @param[in] refExposure: reference exposure
                        @param[in,out] sciExposure: science exposure; modified by changing the background level
                            to match that of the reference exposure
                        @returns a pipBase.Struct with fields:
                            - backgroundModel: an afw.math.Approximate or an afw.math.Background.
                            - fitRMS: rms of the fit. This is the sqrt(mean(residuals**2)).
                            - matchedMSE: the MSE of the reference and matched images: mean((refImage - matchedSciImage)**2);
                              should be comparable to difference image's mean variance.
                            - diffImVar: the mean variance of the difference image.
                        """
                
                        if lsstDebug.Info(__name__).savefits:
                            refExposure.writeFits(lsstDebug.Info(__name__).figpath + 'refExposure.fits')
                            sciExposure.writeFits(lsstDebug.Info(__name__).figpath + 'sciExposure.fits')
                
                        # Check Configs for polynomials:
                        if self.config.usePolynomial:
                            x, y = sciExposure.getDimensions()
                            shortSideLength = min(x, y)
                            if shortSideLength < self.config.binSize:
                                raise ValueError("%d = config.binSize > shorter dimension = %d" % (self.config.binSize,
                                                                                                   shortSideLength))
                            npoints = shortSideLength // self.config.binSize
                            if shortSideLength % self.config.binSize != 0:
                                npoints += 1
                
                            if self.config.order > npoints - 1:
                                raise ValueError("%d = config.order > npoints - 1 = %d" % (self.config.order, npoints - 1))
                
                        # Check that exposures are same shape
                        if (sciExposure.getDimensions() != refExposure.getDimensions()):
                            wSci, hSci = sciExposure.getDimensions()
                            wRef, hRef = refExposure.getDimensions()
                            raise RuntimeError(
                                "Exposures are different dimensions. sci:(%i, %i) vs. ref:(%i, %i)" %
                                (wSci,hSci,wRef,hRef))
                
                        statsFlag = getattr(afwMath, self.config.gridStatistic)
                        self.sctrl.setNumSigmaClip(self.config.numSigmaClip)
                        self.sctrl.setNumIter(self.config.numIter)
                
                        im  = refExposure.getMaskedImage()
                        diffMI = im.Factory(im,True)
                        diffMI -= sciExposure.getMaskedImage()
                
                        width = diffMI.getWidth()
                        height = diffMI.getHeight()
                        nx = width // self.config.binSize
                        if width % self.config.binSize != 0:
                            nx += 1
                        ny = height // self.config.binSize
                        if height % self.config.binSize != 0:
                            ny += 1
                
                        bctrl = afwMath.BackgroundControl(nx, ny, self.sctrl, statsFlag)
                        bctrl.setUndersampleStyle(self.config.undersampleStyle)
                        bctrl.setInterpStyle(self.config.interpStyle)
                
                        bkgd = afwMath.makeBackground(diffMI, bctrl)
                
                        # Some config and input checks if config.usePolynomial:
                        # 1) Check that order/bin size make sense:
                        # 2) Change binsize or order if underconstrained.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#64418e93">64418e93</a> -         # 3) Add some tiny Gaussian noise if the image is completely uniform</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#d52d25eb">d52d25eb</a> -         #        (change after ticket 2411)</div>
                        if self.config.usePolynomial:
                            order = self.config.order
                            bgX, bgY, bgZ, bgdZ = self._gridImage(diffMI, self.config.binSize, statsFlag)
                            minNumberGridPoints = min(len(set(bgX)),len(set(bgY)))
                            if len(bgZ) == 0:
                                raise ValueError("No overlap with reference. Nothing to match")
                            elif minNumberGridPoints <= self.config.order:
                                #must either lower order or raise number of bins or throw exception
                                if self.config.undersampleStyle == "THROW_EXCEPTION":
                                    raise ValueError("Image does not cover enough of ref image for order and binsize")
                                elif self.config.undersampleStyle == "REDUCE_INTERP_ORDER":
                                    self.log.warn("Reducing order to %d"%(minNumberGridPoints - 1))
                                    order = minNumberGridPoints - 1
                                elif self.config.undersampleStyle == "INCREASE_NXNYSAMPLE":
                                    newBinSize = (minNumberGridPoints*self.config.binSize)// (self.config.order +1)
                                    bctrl.setNxSample(newBinSize)
                                    bctrl.setNySample(newBinSize)
                                    bkgd = afwMath.makeBackground(diffMI, bctrl) #do over
                                    self.log.warn("Decreasing binsize to %d"%(newBinSize))
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#232d9c8c">232d9c8c</a> +             #If there is no variance in any image pixels, do not weight bins by inverse variance</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#3ff56df7">3ff56df7</a> +             isUniformImageDiff = not numpy.any(bgdZ > self.config.gridStdevEpsilon)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
428  <a href="#232d9c8c">232d9c8c</a> +             weightByInverseVariance = False if isUniformImageDiff else self.config.approxWeighting</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
413  <a href="#0c4ef68b">0c4ef68b</a> -             if not any(dZ > 1e-8 for dZ in bgdZ) and not any(bgZ): #uniform image</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
414  <a href="#0c4ef68b">0c4ef68b</a> -                 gaussianNoiseIm = afwImage.ImageF(diffMI.getImage(), True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
415  <a href="#0c4ef68b">0c4ef68b</a> -                 afwMath.randomGaussianImage(gaussianNoiseIm, afwMath.Random(1))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
416  <a href="#0c4ef68b">0c4ef68b</a> -                 gaussianNoiseIm *= 1e-8</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#0c4ef68b">0c4ef68b</a> -                 diffMI += gaussianNoiseIm</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
418  <a href="#0c4ef68b">0c4ef68b</a> -                 bkgd = afwMath.makeBackground(diffMI, bctrl)</div>
                
                        #Add offset to sciExposure
                        try:
                            if self.config.usePolynomial:
                                actrl = afwMath.ApproximateControl(afwMath.ApproximateControl.CHEBYSHEV,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
424  <a href="#64418e93">64418e93</a> -                                                    order,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
434  <a href="#232d9c8c">232d9c8c</a> +                                                    order, order, weightByInverseVariance)</div>
              ?                                                          ++++++++++++++++++++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#64418e93">64418e93</a> -                                                    order)</div>
                                undersampleStyle = getattr(afwMath, self.config.undersampleStyle)
                                approx = bkgd.getApproximate(actrl,undersampleStyle)
                                bkgdImage = approx.getImage()
                            else:
                                bkgdImage = bkgd.getImageF()
                        except Exception, e:
                            raise RuntimeError("Background/Approximation failed to interp image %s: %s" % (
                                self.debugDataIdString, e))
                
                        sciMI  = sciExposure.getMaskedImage()
                        sciMI += bkgdImage
                        del sciMI
                
                        #Need RMS from fit: 2895 will replace this:
                        rms = 0.0
                        X, Y, Z, dZ = self._gridImage(diffMI, self.config.binSize, statsFlag)
                        x0, y0 = diffMI.getXY0()
                        modelValueArr = numpy.empty(len(Z))
                        for i in range(len(X)):
                            modelValueArr[i] = bkgdImage.get(int(X[i]-x0),int(Y[i]-y0))
                        resids = Z - modelValueArr
                        rms = numpy.sqrt(numpy.mean(resids[~numpy.isnan(resids)]**2))
                
                        if lsstDebug.Info(__name__).savefits:
                            sciExposure.writeFits(lsstDebug.Info(__name__).figpath + 'sciMatchedExposure.fits')
                
                        if lsstDebug.Info(__name__).savefig:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
453  <a href="#bbbe8bcb">bbbe8bcb</a> -             bbox  = afwGeom.Box2D(refExposure.getMaskedImage().getBBox(afwImage.PARENT))</div>
              ?                                                                        ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
462  <a href="#35e3701f">35e3701f</a> +             bbox  = afwGeom.Box2D(refExposure.getMaskedImage().getBBox())</div>
                            try:
                                self._debugPlot(X, Y, Z, dZ, bkgdImage, bbox, modelValueArr, resids)
                            except Exception, e:
                                self.log.warn('Debug plot not generated: %s'%(e))
                
                        meanVar = afwMath.makeStatistics(diffMI.getVariance(),diffMI.getMask(),
                                                         afwMath.MEANCLIP, self.sctrl).getValue()
                
                        diffIm  = diffMI.getImage()
                        diffIm -= bkgdImage #diffMI should now have a mean ~ 0
                        del diffIm
                        mse = afwMath.makeStatistics(diffMI, afwMath.MEANSQUARE, self.sctrl).getValue()
                
                        outBkgd =  approx if self.config.usePolynomial else bkgd
                
                
                        return pipeBase.Struct(
                             backgroundModel = outBkgd,
                             fitRMS = rms,
                             matchedMSE = mse,
                             diffImVar = meanVar)
                
                    def _debugPlot(self, X, Y, Z, dZ, modelImage, bbox, model, resids):
                        """Generate a plot showing the background fit and residuals.
                
                        It is called when lsstDebug.Info(__name__).savefig = True
                        Saves the fig to lsstDebug.Info(__name__).figpath
                        Displays on screen if lsstDebug.Info(__name__).display = True
                
                        @param X: array of x positions
                        @param Y: array of y positions
                        @param Z: array of the grid values that were interpolated
                        @param dZ: array of the error on the grid values
                        @param modelImage: image ofthe model of the fit
                        @param model: array of len(Z) containing the grid values predicted by the model
                        @param resids: Z - model
                        """
                        import matplotlib.pyplot as plt
                        import matplotlib.colors
                        from mpl_toolkits.axes_grid1 import ImageGrid
                        zeroIm = afwImage.MaskedImageF(afwGeom.Box2I(bbox))
                        zeroIm += modelImage
                        x0, y0 = zeroIm.getXY0()
                        dx, dy = zeroIm.getDimensions()
                        if len(Z) == 0:
                            self.log.warn("No grid. Skipping plot generation.")
                        else:
                            max, min  = numpy.max(Z), numpy.min(Z)
                            norm = matplotlib.colors.normalize(vmax=max, vmin= min)
                            maxdiff = numpy.max(numpy.abs(resids))
                            diffnorm = matplotlib.colors.normalize(vmax=maxdiff, vmin= -maxdiff)
                            rms = numpy.sqrt(numpy.mean(resids**2))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
506  <a href="#bbbe8bcb">bbbe8bcb</a> -             from mpl_toolkits.axes_grid1 import ImageGrid</div>
                            fig = plt.figure(1, (8, 6))
                            meanDz = numpy.mean(dZ)
                            grid = ImageGrid(fig, 111, nrows_ncols = (1, 2), axes_pad=0.1,
                                             share_all=True, label_mode = "L", cbar_mode = "each",
                                             cbar_size = "7%", cbar_pad="2%", cbar_location = "top")
                            im = grid[0].imshow(zeroIm.getImage().getArray(),
                                                extent=(x0, x0+dx, y0+dy, y0), norm = norm,
                                                cmap='Spectral')
                            im = grid[0].scatter(X, Y, c=Z, s = 15.*meanDz/dZ, edgecolor='none', norm=norm,
                                                 marker='o',cmap='Spectral')
                            im2 = grid[1].scatter(X, Y,  c=resids, edgecolor='none', norm=diffnorm,
                                                  marker='s', cmap='seismic')
                            grid.cbar_axes[0].colorbar(im)
                            grid.cbar_axes[1].colorbar(im2)
                            grid[0].axis([x0, x0+dx, y0+dy, y0])
                            grid[1].axis([x0, x0+dx, y0+dy, y0])
                            grid[0].set_xlabel("model and grid")
                            grid[1].set_xlabel("residuals. rms = %0.3f"%(rms))
                            if lsstDebug.Info(__name__).savefig:
                                fig.savefig(lsstDebug.Info(__name__).figpath + self.debugDataIdString + '.png')
                            if lsstDebug.Info(__name__).display:
                                plt.show()
                            plt.clf()
                
                    def _gridImage(self, maskedImage, binsize, statsFlag):
                        """Private method to grid an image for debugging"""
                        width, height  = maskedImage.getDimensions()
                        x0, y0 = maskedImage.getXY0()
                        xedges = numpy.arange(0, width, binsize)
                        yedges = numpy.arange(0, height, binsize)
                        xedges = numpy.hstack(( xedges, width ))  #add final edge
                        yedges = numpy.hstack(( yedges, height )) #add final edge
                
                        # Use lists/append to protect against the case where
                        # a bin has no valid pixels and should not be included in the fit
                        bgX = []
                        bgY = []
                        bgZ = []
                        bgdZ = []
                
                        for ymin, ymax in zip(yedges[0:-1],yedges[1:]):
                            for xmin, xmax in zip(xedges[0:-1],xedges[1:]):
                                subBBox = afwGeom.Box2I(afwGeom.PointI(int(x0 + xmin),int(y0 + ymin)),
                                                        afwGeom.PointI(int(x0 + xmax-1),int(y0 + ymax-1)))
                                subIm = afwImage.MaskedImageF(maskedImage, subBBox, afwImage.PARENT, False)
                                stats = afwMath.makeStatistics(subIm,
                                                               afwMath.MEAN|afwMath.MEANCLIP|afwMath.MEDIAN| \
                                                               afwMath.NPOINT|afwMath.STDEV,
                                                               self.sctrl)
                                npoints, _ = stats.getResult(afwMath.NPOINT)
                                if npoints >= 2:
                                    stdev, _ = stats.getResult(afwMath.STDEV)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
567  <a href="#3ff56df7">3ff56df7</a> +                     if stdev < self.config.gridStdevEpsilon:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
568  <a href="#3ff56df7">3ff56df7</a> +                         stdev = self.config.gridStdevEpsilon</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
559  <a href="#b1675765">b1675765</a> -                     if stdev < 1e-8:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
560  <a href="#bbbe8bcb">bbbe8bcb</a> -                         #Zero variance. Set to some low but reasonable value</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
561  <a href="#b1675765">b1675765</a> -                         stdev = 1e-8</div>
                                    bgX.append(0.5 * (x0 + xmin + x0 + xmax))
                                    bgY.append(0.5 * (y0 + ymin + y0 + ymax))
                                    bgdZ.append(stdev/numpy.sqrt(npoints))
                                    est, _ = stats.getResult(statsFlag)
                                    bgZ.append(est)
                
                        return numpy.array(bgX), numpy.array(bgY), numpy.array(bgZ), numpy.array(bgdZ)
                
                
                class DataRefMatcher(object):
                    """Match data references for a specified dataset type
                        
                    Note that this is not exact, but should suffice for this task
                    until there is better support for this kind of thing in the butler.
                    """
                    def __init__(self, butler, datasetType):
                        """Construct a DataRefMatcher
                        
                        @param[in] butler
                        @param[in] datasetType: dataset type to match
                        """
                        self._datasetType = datasetType # for diagnostics
                        self._keyNames = butler.getKeys(datasetType)
                    
                    def _makeKey(self, ref):
                        """Return a tuple of values for the specified keyNames
                        
                        @param[in] ref: data reference
                
                        @raise KeyError if ref.dataId is missing a key in keyNames
                        """
                        return tuple(ref.dataId[key] for key in self._keyNames)
                
                    def isMatch(self, ref0, ref1):
                        """Return True if ref0 == ref1
                        
                        @param[in] ref0: data ref 0
                        @param[in] ref1: data ref 1
                        
                        @raise KeyError if either ID is missing a key in keyNames
                        """
                        return self._makeKey(ref0) == self._makeKey(ref1)
                    
                    def matchList(self, ref0, refList):
                        """Return a list of indices of matches
                        
                        @return tuple of indices of matches
                        
                        @raise KeyError if any ID is missing a key in keyNames
                        """
                        key0 = self._makeKey(ref0)
                        return tuple(ind for ind, ref in enumerate(refList) if self._makeKey(ref) == key0)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="0c4ef68b"/></a>0c4ef68b</h3>

<pre>
commit 0c4ef68b68ea81c32021276b30e149eddd8584c3
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Oct 31 19:38:12 2012 -0500

    Cleaned up. Thank you, Russell for the comments
</pre>
<h3><a name="b1675765"/></a>b1675765</h3>

<pre>
commit b1675765bb0b70568a7098491d6b7f35bf2899bc
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Oct 16 02:04:00 2012 -0500

    catch underconstrained fit due to nans. Now a pipeBase.Task (can not call from command line)
</pre>
<h3><a name="5bf32678"/></a>5bf32678</h3>

<pre>
commit 5bf3267877f12b72e83e346cba91e3be5c97d71b
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Oct 18 11:28:22 2013 -0400

    matchBackgrounds: fix docs about ImageScaler
    
    lsst.coadd.utils.ImageScaler moved to lsst.pipe.tasks
</pre>
<h3><a name="bbbe8bcb"/></a>bbbe8bcb</h3>

<pre>
commit bbbe8bcbf031dc580f3c2f588bcae41ed3f94694
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Oct 30 23:33:06 2012 -0500

    refactor to accomodate afw tickets/2363
</pre>
<h3><a name="64418e93"/></a>64418e93</h3>

<pre>
commit 64418e9380c85b3616394b6eb1ea2a480c6026da
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri Nov 2 04:14:22 2012 -0500

    Major cleanup. Check docstrings
</pre>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
<h3><a name="d52d25eb"/></a>d52d25eb</h3>

<pre>
commit d52d25eb521d90863827b179377f18ac640b0e99
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Nov 6 22:33:45 2012 -0600

    change comment about config and input checks. Reference ticket 2411
</pre>
<h3><a name="6ed9d4c0"/></a>6ed9d4c0</h3>

<pre>
commit 6ed9d4c0a28d59529384b75d87e814fa86004916
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri Nov 2 06:21:16 2012 -0500

    text editor removed trailing whitespace
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="fb592e0e"/></a>fb592e0e</h3>

<pre>
commit fb592e0e3f3bb6f0ece52dbffaddb8204720028d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Nov 9 15:52:23 2012 -0800

    First cut at updating assembleCoadd and matchBackgrounds for new scaling task
</pre>
<h3><a name="0e1ad86f"/></a>0e1ad86f</h3>

<pre>
commit 0e1ad86fa3f062b9ee1c90c6add82b5f70a491d9
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Jul 31 00:06:54 2014 -0500

    matchBackgrounds: Update config docstring to reflect change in behavior of afw.math.Approximate
    (which is to throw an exception instead of return NaNs when fitting a uniform image: #2411)
</pre>
<h3><a name="b5847309"/></a>b5847309</h3>

<pre>
commit b58473098ae2ad80cff19ca7652f750cb815c9f7
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Nov 9 17:41:39 2012 -0800

    Restore the ability to match against a reference that is not in dataRefList
</pre>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
<h3><a name="bbbe8bcb"/></a>bbbe8bcb</h3>

<pre>
commit bbbe8bcbf031dc580f3c2f588bcae41ed3f94694
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Tue Oct 30 23:33:06 2012 -0500

    refactor to accomodate afw tickets/2363
</pre>
<h3><a name="3ff56df7"/></a>3ff56df7</h3>

<pre>
commit 3ff56df71277969d6b9cd9f9d6abe1a17f0f5cc0
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Jul 30 15:33:55 2014 -0500

    Change background offset std. deviation tolerance to configurable parameter
</pre>
<h3><a name="232d9c8c"/></a>232d9c8c</h3>

<pre>
commit 232d9c8c747ffa8bf05c301323b802002e0d0180
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Wed Jul 30 01:30:42 2014 -0500

    revise changes in DM-1003 and #2411:
    reinstate inverse weighting in tests/matchBackgrounds.py
    and the check for uniform image difference in matchBackgrounds()
</pre>
<h3><a name="2321d00c"/></a>2321d00c</h3>

<pre>
commit 2321d00c74190dd4ba7c28b4ae13d58950b24e22
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jul 29 18:08:10 2014 -0500

    matchBackgrounds: add option to disable inverse variance weighting in approximation (#2411)
    
    The fake images generated as part of the background matching unit
    tests are often constant, therefore have zero variance in the
    BackgroundMI statsImage, and inverse variance weighting in
    ApproximateChebyshev produces NANs.  Disable that for tests.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/mocks/simpleMapper.py"/></a>python/lsst/pipe/tasks/mocks/simpleMapper.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                """Mapper and cameraGeom definition for extremely simple mock data.
                
                SimpleMapper inherits directly from Mapper, not CameraMapper.  This means
                we can avoid any problems with paf files at the expense of reimplementing
                some parts of CameraMapper here.  Jim is not sure this was the best
                possible approach, but it gave him an opportunity to play around with
                prototyping a future paf-free mapper class, and it does everything it
                needs to do right now.
                """
                
                import os
                import shutil
                import re
                
                import lsst.daf.persistence
                import lsst.afw.cameraGeom
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#9c13d0c8">9c13d0c8</a> - import lsst.afw.cameraGeom.utils</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#ea69a5c4">ea69a5c4</a> + from lsst.afw.cameraGeom.testUtils import DetectorWrapper</div>
                
                __all__ = ("SimpleMapper", "makeSimpleCamera", "makeDataRepo")
                
                class PersistenceType(object):
                    """Base class of a hierarchy used by SimpleMapper to defined different kinds of types of objects
                    to persist.
                
                    PersistenceType objects are never instantiated; only the type objects are used (we needed a
                    simple singleton struct that could be inherited, which is exactly what a Python type is).
                    """
                    python = None
                    cpp = "ignored"
                    storage = None
                    ext = ""
                    suffixes = ()
                
                    @classmethod
                    def makeButlerLocation(cls, path, dataId, suffix=None):
                        """Method called by SimpleMapping to implement a map_ method."""
                        return lsst.daf.persistence.ButlerLocation(cls.python, cls.cpp, cls.storage, [path], dataId)
                
                class BypassPersistenceType(PersistenceType):
                    """Persistence type for things that don't actually use daf_persistence.
                    """
                
                    python = "lsst.daf.base.PropertySet"  # something to import even when we don't need to
                
                    @classmethod
                    def makeButlerLocation(cls, path, dataId, suffix=None):
                        """Method called by SimpleMapping to implement a map_ method; overridden to not use the path."""
                        return lsst.daf.persistence.ButlerLocation(cls.python, cls.cpp, cls.storage, [], dataId)
                
                class ExposurePersistenceType(PersistenceType):
                    """Persistence type of Exposure images.
                    """
                
                    python = "lsst.afw.image.ExposureF"
                    cpp = "ExposureF"
                    storage = "FitsStorage"
                    ext = ".fits"
                    suffixes = ("_sub",)
                
                    @classmethod
                    def makeButlerLocation(cls, path, dataId, suffix=None):
                        """Method called by SimpleMapping to implement a map_ method; overridden to support subimages."""
                        if suffix is None:
                            loc = super(ExposurePersistenceType, cls).makeButlerLocation(path, dataId, suffix=None)
                        elif suffix == "_sub":
                            subId = dataId.copy()
                            bbox = subId.pop('bbox')
                            loc = super(ExposurePersistenceType, cls).makeButlerLocation(path, subId, suffix=None)
                            loc.additionalData.set('llcX', bbox.getMinX())
                            loc.additionalData.set('llcY', bbox.getMinY())
                            loc.additionalData.set('width', bbox.getWidth())
                            loc.additionalData.set('height', bbox.getHeight())
                            if 'imageOrigin' in dataId:
                                loc.additionalData.set('imageOrigin',
                                                       dataId['imageOrigin'])
                        return loc
                
                class SkyMapPersistenceType(PersistenceType):
                    python = "lsst.skymap.BaseSkyMap"
                    storage = "PickleStorage"
                    ext = ".pickle"
                
                class CatalogPersistenceType(PersistenceType):
                    python = "lsst.afw.table.BaseCatalog"
                    cpp = "BaseCatalog"
                    storage = "FitsCatalogStorage"
                    ext = ".fits"
                
                class SimpleCatalogPersistenceType(CatalogPersistenceType):
                    python = "lsst.afw.table.SimpleCatalog"
                    cpp = "SimpleCatalog"
                
                class SourceCatalogPersistenceType(SimpleCatalogPersistenceType):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#94df22ea">94df22ea</a> -     python = "lsst.afw.table.SimpleCatalog"</div>
              ?                               ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#c5270a88">c5270a88</a> +     python = "lsst.afw.table.SourceCatalog"</div>
              ?                               ^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#94df22ea">94df22ea</a> -     cpp = "SimpleCatalog"</div>
              ?             ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#c5270a88">c5270a88</a> +     cpp = "SourceCatalog"</div>
              ?             ^^^^
                
                class ExposureCatalogPersistenceType(CatalogPersistenceType):
                    python = "lsst.afw.table.ExposureCatalog"
                    cpp = "ExposureCatalog"
                
                class SimpleMapping(object):
                    """Mapping object used to implement SimpleMapper, similar in intent to lsst.daf.peristence.Mapping.
                    """
                
                    template = None
                    keys = {}
                
                    def __init__(self, persistence, template=None, keys=None):
                        self.persistence = persistence
                        if template is not None:
                            self.template = template
                        if keys is not None:
                            self.keys = keys
                
                    def map(self, dataset, root, dataId, suffix=None):
                        if self.template is not None:
                            path = os.path.join(root, self.template.format(dataset=dataset, ext=self.persistence.ext,
                                                                           **dataId))
                        else:
                            path = None
                        return self.persistence.makeButlerLocation(path, dataId, suffix=suffix)
                
                class RawMapping(SimpleMapping):
                    """Mapping for dataset types that are organized the same way as raw data (i.e. by CCD)."""
                
                    template = "{dataset}-{visit:04d}-{ccd:01d}{ext}"
                    keys = dict(visit=int, ccd=int)
                
                    def query(self, index, level, format, dataId):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#ea69a5c4">ea69a5c4</a> +         results = []</div>
                        visit = dataId.get('visit', None)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#94df22ea">94df22ea</a> -         dictList = self.index[level][visit]</div>
              ?                    -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#c5270a88">c5270a88</a> +         dictList = index[level][visit]</div>
                        ccd = dataId.get('ccd', None)
                        for d in dictList.values():
                            if ccd is not None and d['ccd'] != ccd:
                                continue
                            results.append(tuple(d[f] for f in format))
                        return results
                
                class SkyMapping(SimpleMapping):
                    """Mapping for dataset types that are organized according to a SkyMap subdivision of the sky."""
                
                    template = "{dataset}-{filter}-{tract:02d}-{patch}{ext}"
                    keys = dict(filter=str, tract=int, patch=str)
                
                class TempExpMapping(SimpleMapping):
                    """Mapping for CoaddTempExp datasets."""
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#94df22ea">94df22ea</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#c5270a88">c5270a88</a> + </div>
                    template = "{dataset}-{tract:02d}-{patch}-{visit:04d}{ext}"
                    keys = dict(tract=int, patch=str, visit=int)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#94df22ea">94df22ea</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#c5270a88">c5270a88</a> + class ForcedSrcMapping(RawMapping):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#c5270a88">c5270a88</a> +     """Mapping for forced_src datasets."""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#c5270a88">c5270a88</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#c5270a88">c5270a88</a> +     template = "{dataset}-{tract:02d}-{visit:04d}-{ccd:01d}{ext}"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#c5270a88">c5270a88</a> +     keys = dict(tract=int, ccd=int, visit=int)</div>
                
                class MapperMeta(type):
                    """Metaclass for SimpleMapper that creates map_ and query_ methods for everything found in the
                    'mappings' class variable.
                    """
                
                    @staticmethod
                    def _makeMapClosure(dataset, mapping, suffix=None):
                        def mapClosure(self, dataId, write=False):
                            return mapping.map(dataset, self.root, dataId, suffix=suffix)
                        return mapClosure
                
                    @staticmethod
                    def _makeQueryClosure(dataset, mapping):
                        def queryClosure(self, level, format, dataId):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#94df22ea">94df22ea</a> -             index = self.index[dataset]</div>
                            return mapping.query(self.index, level, format, dataId)
                        return queryClosure
                
                    def __init__(cls, name, bases, dict_):
                        type.__init__(cls, name, bases, dict_)
                        cls.keyDict = dict()
                        for dataset, mapping in cls.mappings.iteritems():
                            setattr(cls, "map_" + dataset, MapperMeta._makeMapClosure(dataset, mapping, suffix=None))
                            for suffix in mapping.persistence.suffixes:
                                setattr(cls, "map_" + dataset + suffix,
                                        MapperMeta._makeMapClosure(dataset, mapping, suffix=suffix))
                            if hasattr(mapping, "query"):
                                setattr(cls, "query_" + dataset, MapperMeta._makeQueryClosure(dataset, mapping))
                        cls.keyDict.update(mapping.keys)
                
                class SimpleMapper(lsst.daf.persistence.Mapper):
                    """
                    An extremely simple mapper for an imaginary camera for use in integration tests.
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#94df22ea">94df22ea</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#c5270a88">c5270a88</a> + </div>
                    As SimpleMapper does not inherit from daf.butlerUtils.CameraMapper, it does not
                    use a policy file to set mappings or a registry; all the information is here
                    (in the map_* and query_* methods).
                
                    The imaginary camera's raw data format has only 'visit' and 'ccd' keys, with
                    two CCDs per visit (by default).
                    """
                
                    __metaclass__ = MapperMeta
                
                    mappings = dict(
                        calexp = RawMapping(ExposurePersistenceType),
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#c5270a88">c5270a88</a> +         forced_src = ForcedSrcMapping(SourceCatalogPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#c5270a88">c5270a88</a> +         forced_src_schema = SimpleMapping(SourceCatalogPersistenceType,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#c5270a88">c5270a88</a> +                                           template="{dataset}{ext}", keys={}),</div>
                        truth = SimpleMapping(SimpleCatalogPersistenceType, template="{dataset}-{tract:02d}{ext}",
                                              keys={"tract":int}),
                        simsrc = RawMapping(SimpleCatalogPersistenceType, template="{dataset}-{tract:02d}{ext}",
                                            keys={"tract":int}),
                        observations = SimpleMapping(ExposureCatalogPersistenceType, template="{dataset}-{tract:02d}{ext}",
                                                     keys={"tract":int}),
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#bce32883">bce32883</a> -         wcs = SimpleMapping(ExposurePersistenceType,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#bce32883">bce32883</a> -                             template="{dataset}-{tract:02d}-{visit:04d}-{ccd:01d}{ext}",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#bce32883">bce32883</a> -                             keys={"tract":int, "visit": int, "ccd": int}),</div>
                        ccdExposureId = RawMapping(BypassPersistenceType),
                        ccdExposureId_bits = SimpleMapping(BypassPersistenceType),
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#c5270a88">c5270a88</a> +         deepCoaddId = SkyMapping(BypassPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#c5270a88">c5270a88</a> +         deepCoaddId_bits = SimpleMapping(BypassPersistenceType),</div>
                        deepCoadd_skyMap = SimpleMapping(SkyMapPersistenceType, template="{dataset}{ext}", keys={}),
                        deepCoadd = SkyMapping(ExposurePersistenceType),
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#c5270a88">c5270a88</a> +         deepCoadd_calexp = SkyMapping(ExposurePersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
241  <a href="#c5270a88">c5270a88</a> +         deepCoadd_calexpBackground = SkyMapping(CatalogPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#c5270a88">c5270a88</a> +         deepCoadd_icSrc = SkyMapping(SourceCatalogPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#c5270a88">c5270a88</a> +         deepCoadd_icSrc_schema = SimpleMapping(SourceCatalogPersistenceType,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#c5270a88">c5270a88</a> +                                                template="{dataset}{ext}", keys={}),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#c5270a88">c5270a88</a> +         deepCoadd_src = SkyMapping(SourceCatalogPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#c5270a88">c5270a88</a> +         deepCoadd_src_schema = SimpleMapping(SourceCatalogPersistenceType,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#c5270a88">c5270a88</a> +                                              template="{dataset}{ext}", keys={}),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#c5270a88">c5270a88</a> +         deepCoadd_forced_src = SkyMapping(SourceCatalogPersistenceType),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#c5270a88">c5270a88</a> +         deepCoadd_forced_src_schema = SimpleMapping(SourceCatalogPersistenceType,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#c5270a88">c5270a88</a> +                                                     template="{dataset}{ext}", keys={}),</div>
                        deepCoadd_mock = SkyMapping(ExposurePersistenceType),
                        deepCoadd_tempExp = TempExpMapping(ExposurePersistenceType),
                        deepCoadd_tempExp_mock = TempExpMapping(ExposurePersistenceType),
                    )
                
                    levels = dict(
                        visit = ['ccd'],
                        ccd = [],
                    )
                
                    def __init__(self, root):
                        super(SimpleMapper, self).__init__()
                        self.root = root
                        self.camera = makeSimpleCamera(nX=1, nY=2, sizeX=400, sizeY=200, gapX=2, gapY=2)
                        self.update()
                
                    def getDefaultLevel(self): return "ccd"
                
                    def getKeys(self, datasetType, level):
                        if datasetType is None:
                            keyDict = self.keyDict
                        else:
                            keyDict = self.mappings[datasetType].keys
                        if level is not None and level in self.levels:
                            keyDict  = dict(keyDict)
                            for l in self.levels[level]:
                                if l in keyDict:
                                    del keyDict[l]
                        return keyDict
                
                    def update(self):
                        filenames = os.listdir(self.root)
                        rawRegex = re.compile(r"(?P<dataset>\w+)-(?P<visit>\d+)-(?P<ccd>\d).*")
                        self.index = {}
                        for filename in filenames:
                            m = rawRegex.match(filename)
                            if not m:
                                continue
                            index = self.index.setdefault(m.group('dataset'), dict(ccd={None:[]}, visit={None:[]}))
                            visit = int(m.group('visit'))
                            ccd = int(m.group('ccd'))
                            d1 = dict(visit=visit, ccd=ccd)
                            d2 = dict(visit=visit)
                            index['ccd'].setdefault(visit, []).append(d1)
                            index['ccd'][None].append(d1)
                            index['visit'][visit] = [d2]
                            index['visit'][None].append(d1)
                
                    def keys(self):
                        return self.keyDict
                
                    def bypass_camera(self, datasetType, pythonType, location, dataId):
                        return self.camera
                
                    def map_camera(self, dataId, write=False):
                        return lsst.daf.persistence.ButlerLocation(
                            "lsst.afw.cameraGeom.Camera", "Camera", None, [], dataId
                            )
                
                    def std_calexp(self, item, dataId):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
292  <a href="#94df22ea">94df22ea</a> -         ccdId = lsst.afw.cameraGeom.Id(dataId["ccd"])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
293  <a href="#94df22ea">94df22ea</a> -         item.setDetector(lsst.afw.cameraGeom.utils.findCcd(self.camera, ccdId))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#60da9600">60da9600</a> +         detectorId = dataId["ccd"]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#60da9600">60da9600</a> +         detector = self.camera[detectorId]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#60da9600">60da9600</a> +         item.setDetector(detector)</div>
                        return item
                
                    def _computeCcdExposureId(self, dataId):
                        return long(dataId["visit"]) * 10 + long(dataId["ccd"])
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#c5270a88">c5270a88</a> +     def _computeCoaddId(self, dataId):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#c5270a88">c5270a88</a> +         # Note: for real IDs, we'd want to include filter here, but it doesn't actually matter</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#c5270a88">c5270a88</a> +         # for any of the tests we've done so far, which all assume filter='r'</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#c5270a88">c5270a88</a> +         tract = long(dataId['tract'])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#c5270a88">c5270a88</a> +         if tract < 0 or tract >= 128:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#c5270a88">c5270a88</a> +             raise RuntimeError('tract not in range [0,128)')</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#c5270a88">c5270a88</a> +         patchX, patchY = map(int, dataId['patch'].split(','))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#c5270a88">c5270a88</a> +         for p in (patchX, patchY):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#c5270a88">c5270a88</a> +             if p < 0 or p >= 2**13:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#c5270a88">c5270a88</a> +                 raise RuntimeError('patch component not in range [0, 8192)')</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#c5270a88">c5270a88</a> +         return (tract * 2**13 + patchX) * 2**13 + patchY</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#c5270a88">c5270a88</a> + </div>
                    def splitCcdExposureId(ccdExposureId):
                        return dict(visit=(long(ccdExposureId) // 10), ccd=(long(ccdExposureId) % 10))
                
                    def bypass_ccdExposureId(self, datasetType, pythonType, location, dataId):
                        return self._computeCcdExposureId(dataId)
                
                    def bypass_ccdExposureId_bits(self, datasetType, pythonType, location, dataId):
                        return 32
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
308  <a href="#94df22ea">94df22ea</a> - def makeSimpleCamera(nX, nY, sizeX, sizeY, gapX, gapY, pixelSize=1.0):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
309  <a href="#94df22ea">94df22ea</a> -     """Create a simple single-raft camera with nX x nY CCDs of size sizeX x sizeY and</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#94df22ea">94df22ea</a> -     gaps of size gapX x gapY (in focal plane coordinates).  The 'pixelSize' parameter</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#94df22ea">94df22ea</a> -     sets the size of pixel in focal plane units.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#c5270a88">c5270a88</a> +     def bypass_deepCoaddId(self, datasetType, pythonType, location, dataId):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#c5270a88">c5270a88</a> +         return self._computeCoaddId(dataId)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#c5270a88">c5270a88</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#c5270a88">c5270a88</a> +     def bypass_deepCoaddId_bits(self, datasetType, pythonType, location, dataId):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#c5270a88">c5270a88</a> +         return 1 + 7 + 13*2 + 3</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#c5270a88">c5270a88</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#ea69a5c4">ea69a5c4</a> + def makeSimpleCamera(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#ea69a5c4">ea69a5c4</a> +     nX, nY,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#ea69a5c4">ea69a5c4</a> +     sizeX, sizeY,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#ea69a5c4">ea69a5c4</a> +     gapX, gapY,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#ea69a5c4">ea69a5c4</a> +     pixelSize=1.0,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#ea69a5c4">ea69a5c4</a> +     plateScale=20.0,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#ea69a5c4">ea69a5c4</a> +     radialDistortion=0.925,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
353  <a href="#ea69a5c4">ea69a5c4</a> + ):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
354  <a href="#ea69a5c4">ea69a5c4</a> +     """Create a camera</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] nx: number of detectors in x</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] ny: number of detectors in y</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] sizeX: detector size in x (pixels)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] sizeY: detector size in y (pixels)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] gapX: gap between detectors in x (mm)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] gapY: gap between detectors in y (mm)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] pixelSize: pixel size (mm) (a float)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] plateScale: plate scale in arcsec/mm; 20.0 is for LSST</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#ea69a5c4">ea69a5c4</a> +     @param[in] radialDistortion: radial distortion, in mm/rad^2</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#ea69a5c4">ea69a5c4</a> +         (the r^3 coefficient of the radial distortion polynomial</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
366  <a href="#ea69a5c4">ea69a5c4</a> +         that converts PUPIL in radians to FOCAL_PLANE in mm);</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#ea69a5c4">ea69a5c4</a> +         0.925 is the value Dave Monet measured for lsstSim data</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#ea69a5c4">ea69a5c4</a> +     Each detector will have one amplifier (with no raw information).</div>
                    """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#94df22ea">94df22ea</a> -     camera = lsst.afw.cameraGeom.Camera(lsst.afw.cameraGeom.Id(0), 1, 1)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#94df22ea">94df22ea</a> -     raft = lsst.afw.cameraGeom.Raft(lsst.afw.cameraGeom.Id(0), nX, nY)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
315  <a href="#94df22ea">94df22ea</a> -     camera.addDetector(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#94df22ea">94df22ea</a> -         lsst.afw.geom.Point2I(0, 0),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#94df22ea">94df22ea</a> -         lsst.afw.cameraGeom.FpPoint(0.0, 0.0),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#94df22ea">94df22ea</a> -         lsst.afw.cameraGeom.Orientation(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#94df22ea">94df22ea</a> -         raft</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#94df22ea">94df22ea</a> -         )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#94df22ea">94df22ea</a> -     i = 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#ea69a5c4">ea69a5c4</a> +     pScaleRad = lsst.afw.geom.arcsecToRad(plateScale)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#ea69a5c4">ea69a5c4</a> +     radialDistortCoeffs = [0.0, 1.0/pScaleRad, 0.0, radialDistortion/pScaleRad]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#ea69a5c4">ea69a5c4</a> +     focalPlaneToPupil = lsst.afw.geom.RadialXYTransform(radialDistortCoeffs)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#89610aff">89610aff</a> +     nativeSys = lsst.afw.cameraGeom.FOCAL_PLANE</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#89610aff">89610aff</a> +     transforms = {</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#89610aff">89610aff</a> +         lsst.afw.cameraGeom.PUPIL: focalPlaneToPupil,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#ea69a5c4">ea69a5c4</a> +     }</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#89610aff">89610aff</a> +     transformMap = lsst.afw.cameraGeom.CameraTransformMap(nativeSys, transforms)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#ea69a5c4">ea69a5c4</a> +     detectorList = []</div>
                    ccdBBox = lsst.afw.geom.Box2I(lsst.afw.geom.Point2I(), lsst.afw.geom.Extent2I(sizeX, sizeY))
                    for iY in range(nY):
                        cY = (iY - 0.5 * (nY - 1)) * (pixelSize * sizeY + gapY)
                        for iX in range(nX):
                            cX = (iX - 0.5 * (nX - 1)) * (pixelSize * sizeY + gapX)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#94df22ea">94df22ea</a> -             ccd = lsst.afw.cameraGeom.Ccd(lsst.afw.cameraGeom.Id(i), pixelSize)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#94df22ea">94df22ea</a> -             amp = lsst.afw.cameraGeom.Amp(lsst.afw.cameraGeom.Id(0), ccdBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#94df22ea">94df22ea</a> -                                           lsst.afw.geom.Box2I(), ccdBBox, None)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#94df22ea">94df22ea</a> -             ccd.addAmp(amp)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#94df22ea">94df22ea</a> -             raft.addDetector(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#94df22ea">94df22ea</a> -                 lsst.afw.geom.Point2I(iX, iY),</div>
              ?             ^^^                     ^ ^   ^  -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
386  <a href="#ea69a5c4">ea69a5c4</a> +             fpPos = lsst.afw.geom.Point2D(cX, cY)</div>
              ?             ^^^^^^^                     ^ ^   ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#94df22ea">94df22ea</a> -                 lsst.afw.cameraGeom.FpPoint(cX, cY),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#ea69a5c4">ea69a5c4</a> +             detectorName = "detector %d,%d" % (iX, iY)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#ea69a5c4">ea69a5c4</a> +             detectorId = len(detectorList) + 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#ea69a5c4">ea69a5c4</a> +             detectorList.append(DetectorWrapper(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#ea69a5c4">ea69a5c4</a> +                 name = detectorName,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#ea69a5c4">ea69a5c4</a> +                 id = detectorId,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#ea69a5c4">ea69a5c4</a> +                 serial = detectorName + " serial",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#ea69a5c4">ea69a5c4</a> +                 bbox = ccdBBox,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#ea69a5c4">ea69a5c4</a> +                 ampExtent = ccdBBox.getDimensions(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#ea69a5c4">ea69a5c4</a> +                 numAmps = 1,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#ea69a5c4">ea69a5c4</a> +                 pixelSize = lsst.afw.geom.Extent2D(pixelSize, pixelSize),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#94df22ea">94df22ea</a> -                 lsst.afw.cameraGeom.Orientation(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#ea69a5c4">ea69a5c4</a> +                 orientation = lsst.afw.cameraGeom.Orientation(fpPos),</div>
              ?                ++++++++++++++                                 +++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#94df22ea">94df22ea</a> -                 ccd</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
336  <a href="#94df22ea">94df22ea</a> -                 )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#94df22ea">94df22ea</a> -             i += 1</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#94df22ea">94df22ea</a> -     return camera</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#ea69a5c4">ea69a5c4</a> +                 plateScale = plateScale,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#ea69a5c4">ea69a5c4</a> +                 radialDistortion = radialDistortion,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#ea69a5c4">ea69a5c4</a> +             ).detector)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#ea69a5c4">ea69a5c4</a> +     return lsst.afw.cameraGeom.Camera(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#ea69a5c4">ea69a5c4</a> +         name = "Simple Camera",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#ea69a5c4">ea69a5c4</a> +         detectorList = detectorList,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#ea69a5c4">ea69a5c4</a> +         transformMap = transformMap,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#ea69a5c4">ea69a5c4</a> +     )</div>
                
                def makeDataRepo(root):
                    """
                    Create a data repository for SimpleMapper and return a butler for it.
                
                    Clobbers anything already in the given path.
                    """
                    if os.path.exists(root):
                        shutil.rmtree(root)
                    os.makedirs(root)
                    with open(os.path.join(root, "_mapper"), "w") as f:
                        f.write("lsst.pipe.tasks.mocks.SimpleMapper\n")
                    return lsst.daf.persistence.Butler(root=root)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="bce32883"/></a>bce32883</h3>

<pre>
commit bce32883e1ac71f72b4013f79e8986a7d9e0a6b1
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Apr 22 09:01:52 2014 -0400

    Add wcs to mock SimpleMapper to adapt to meas_mosaic output move
</pre>
<h3><a name="9c13d0c8"/></a>9c13d0c8</h3>

<pre>
commit 9c13d0c89a531323fbcb02e933c7e6cb1b0f802d
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat Mar 9 10:25:33 2013 -0500

    Updates to reflect review of mocks subpackage.
    
    Lots of doc updates, fixes.
    Use box.getCorners() and zip to replace getBoxVertices().
    Change import order in simpleMapper to match standards.
</pre>
<h3><a name="94df22ea"/></a>94df22ea</h3>

<pre>
commit 94df22eaad3077ba3a8999fa074cf010e1e17c00
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Jan 14 15:58:16 2013 -0500

    Add mapper and tasks for generating extremely simple mock data.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="60da9600"/></a>60da9600</h3>

<pre>
commit 60da960073e5d7bbc2d6601de69ea7c178a1260b
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 11 15:18:38 2014 -0700

    Fix remaining unit test errors.
</pre>
<h3><a name="89610aff"/></a>89610aff</h3>

<pre>
commit 89610aff7cc800261b1756b9f0618ef4e1f60ae8
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Jun 17 15:44:18 2014 -0700

    Fix a bug in makeSimpleCamera: it created a transformMap that was a dict, not a CameraTransformMap.
</pre>
<h3><a name="c5270a88"/></a>c5270a88</h3>

<pre>
commit c5270a88f73adb5cda1757dbcd17c00c2a9ddc2c
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat Aug 9 23:47:31 2014 -0700

    Extend CoaddInputs/CoaddPsf test to include coverage for forced photometry
    
    This provides minimal test coverage for meas_base's forced photometry
    command-line tasks, as well as a bit of test coverage for ProcessCoaddTask and
    meas_base's SingleFrameMeasurementTask.
</pre>
<h3><a name="ea69a5c4"/></a>ea69a5c4</h3>

<pre>
commit ea69a5c4a1645e96b66fd67e16592403479021b1
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 11 11:29:12 2014 -0700

    Mostly done converting code. simpleMapper.py still needs some work.
</pre>
<h3><a name="94df22ea"/></a>94df22ea</h3>

<pre>
commit 94df22eaad3077ba3a8999fa074cf010e1e17c00
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Jan 14 15:58:16 2013 -0500

    Add mapper and tasks for generating extremely simple mock data.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/coaddInputRecorder.py"/></a>python/lsst/pipe/tasks/coaddInputRecorder.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#210f523c">210f523c</a> - import math</div>
                import numpy
                
                import lsst.pex.config as pexConfig
                import lsst.afw.table as afwTable
                import lsst.afw.image as afwImage
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#a0812f2f">a0812f2f</a> - from lsst.meas.algorithms import CoaddPsf, makeCoaddApCorrMap</div>
                
                __all__ = ["CoaddInputRecorderTask"]
                
                class CoaddInputRecorderConfig(pexConfig.Config):
                    """Config for CoaddInputRecorderTask
                
                    The inputRecorder section of the various coadd tasks' configs should generally agree,
                    or the schemas created by earlier tasks (like MakeCoaddTempExpTask) will not contain
                    the fields filled by later tasks (like AssembleCoaddTask).
                    """
                    saveEmptyCcds = pexConfig.Field(
                        dtype=bool, default=False, optional=False,
                        doc=("Add records for CCDs we iterated over but did not add a coaddTempExp"
                             " due to a lack of unmasked pixels in the coadd footprint.")
                    )
                    saveErrorCcds = pexConfig.Field(
                        dtype=bool, default=False, optional=False,
                        doc=("Add records for CCDs we iterated over but did not add a coaddTempExp"
                             " due to an exception (often due to the calexp not being found on disk).")
                    )
                    saveVisitGoodPix = pexConfig.Field(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#ba18e527">ba18e527</a> -         dtype=bool, default=True, optional=False,</div>
              ?                             ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#210f523c">210f523c</a> +         dtype=bool, default=False, optional=False,</div>
              ?                             ^^^^
                        doc=("Save the total number of good pixels in each coaddTempExp (redundant with a sum of"
                             " good pixels in associated CCDs)")
                    )
                    saveCcdWeights = pexConfig.Field(
                        dtype=bool, default=True, optional=False,
                        doc=("Save weights in the CCDs table as well as the visits table?"
                             " (This is necessary for easy construction of CoaddPsf, but otherwise duplicate information.)")
                    )
                
                class CoaddTempExpInputRecorder(object):
                    """A helper class for CoaddInputRecorderTask, managing the CoaddInputs object for that a single
                    CoaddTempExp.  This will contain single 'visit' record for the CoaddTempExp and a number of 'ccd'
                    records.
                
                    Should generally be created by calling CoaddInputRecorderTask.makeCoaddTempExp().
                    """
                
                    def __init__(self, task, visitId):
                        self.task = task
                        self.coaddInputs = self.task.makeCoaddInputs()
                        self.visitRecord = self.coaddInputs.visits.addNew()
                        self.visitRecord.setId(visitId)
                
                    def addCalExp(self, calExp, ccdId, nGoodPix):
                        """Add a 'ccd' record for a calexp just added to the CoaddTempExp
                
                        @param[in] calExp   Calibrated exposure just added to the CoaddTempExp, or None in case of
                                            failures that should nonetheless be tracked.  Should be the original
                                            calexp, in that it should contain the original Psf and Wcs, not the
                                            warped and/or matched ones.
                        @param[in] ccdId    A unique numeric ID for the Exposure.
                        @param[in] nGoodPix Number of good pixels this image will contribute to the CoaddTempExp.
                                            If saveEmptyCcds is not set and this value is zero, no record will be
                                            added.
                        """
                        if nGoodPix == 0 and not self.task.config.saveEmptyCcds:
                            return
                        record = self.coaddInputs.ccds.addNew()
                        record.setId(ccdId)
                        record.setL(self.task.ccdVisitKey, self.visitRecord.getId())
                        try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#9a52d4b1">9a52d4b1</a> -             record.setI(self.task.ccdCcdKey, calExp.getDetector().getId().getSerial())</div>
              ?                                                                          ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#ea69a5c4">ea69a5c4</a> +             record.setI(self.task.ccdCcdKey, calExp.getDetector().getId())</div>
                        except:
                            self.task.log.warn("Error getting detector serial number in visit %d; using -1"
                                                   % self.visitRecord.getId())
                            record.setI(self.task.ccdCcdKey, -1)
                        record.setI(self.task.ccdGoodPixKey, nGoodPix)
                        if calExp is not None:
                            record.setPsf(calExp.getPsf())
                            record.setWcs(calExp.getWcs())
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#9a52d4b1">9a52d4b1</a> -             record.setBBox(calExp.getBBox(afwImage.PARENT))</div>
              ?                                           ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#35e3701f">35e3701f</a> +             record.setBBox(calExp.getBBox())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#7656d164">7656d164</a> -             record.setApCorrMap(calExp.getInfo().getApCorrMap())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#d5c2356d">d5c2356d</a> -             record.setValidPolygon(calExp.getInfo().getValidPolygon())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#a0812f2f">a0812f2f</a> -             if self.task.config.saveCcdWeights:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#a0812f2f">a0812f2f</a> -                 record.setD(self.task.ccdWeightKey, 1.0) # No weighting or overlap when warping</div>
                
                    def finish(self, coaddTempExp, nGoodPix=None):
                        """Finish creating the CoaddInputs for a CoaddTempExp.
                
                        @param[in,out] coaddTempExp   Exposure object from which to obtain the PSF, WCS, and bounding
                                                      box for the entry in the 'visits' table.  On return, the completed
                                                      CoaddInputs object will be attached to it.
                        @param[in]     nGoodPix       Total number of good pixels in the CoaddTempExp; ignored unless
                                                      saveVisitGoodPix is true.
                        """
                        self.visitRecord.setPsf(coaddTempExp.getPsf())
                        self.visitRecord.setWcs(coaddTempExp.getWcs())
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#d5c2356d">d5c2356d</a> -         self.visitRecord.setValidPolygon(coaddTempExp.getInfo().getValidPolygon())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#9a52d4b1">9a52d4b1</a> -         self.visitRecord.setBBox(coaddTempExp.getBBox(afwImage.PARENT))</div>
              ?                                                       ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#35e3701f">35e3701f</a> +         self.visitRecord.setBBox(coaddTempExp.getBBox())</div>
                        if self.task.config.saveVisitGoodPix:
                            self.visitRecord.setI(self.task.visitGoodPixKey, nGoodPix)
                        coaddTempExp.getInfo().setCoaddInputs(self.coaddInputs)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#a0812f2f">a0812f2f</a> -         wcs = coaddTempExp.getWcs()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#a0812f2f">a0812f2f</a> -         if False:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#a0812f2f">a0812f2f</a> -             # This causes a test failure, pending fix in issue HSC-802</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#a0812f2f">a0812f2f</a> -             coaddTempExp.setPsf(CoaddPsf(self.coaddInputs.ccds, wcs))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#a0812f2f">a0812f2f</a> -         apCorrMap = makeCoaddApCorrMap(self.coaddInputs.ccds, coaddTempExp.getBBox(afwImage.PARENT), wcs)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#a0812f2f">a0812f2f</a> -         coaddTempExp.getInfo().setApCorrMap(apCorrMap)</div>
                
                class CoaddInputRecorderTask(pipeBase.Task):
                    """Subtask that handles filling a CoaddInputs object for a coadd exposure, tracking the CCDs and
                    visits that went into a coadd.
                
                    The interface here is a little messy, but I think this is at least partly a product of a bit of
                    messiness in the coadd code it's plugged into.  I hope #2590 might result in a better design.
                    """
                
                    ConfigClass = CoaddInputRecorderConfig
                
                    def __init__(self, *args, **kwargs):
                        pipeBase.Task.__init__(self, *args, **kwargs)        
                        self.visitSchema = afwTable.ExposureTable.makeMinimalSchema()
                        if self.config.saveVisitGoodPix:
                            self.visitGoodPixKey = self.visitSchema.addField("goodpix", type=int,
                                                                             doc="Number of good pixels in the coaddTempExp")
                        self.visitWeightKey = self.visitSchema.addField("weight", type=float,
                                                                        doc="Weight for this visit in the coadd")
                        self.ccdSchema = afwTable.ExposureTable.makeMinimalSchema()
                        self.ccdCcdKey = self.ccdSchema.addField("ccd", type=int, doc="cameraGeom CCD serial number")
                        self.ccdVisitKey = self.ccdSchema.addField("visit", type=numpy.int64,
                                                                   doc="Foreign key for the visits (coaddTempExp) catalog")
                        self.ccdGoodPixKey = self.ccdSchema.addField("goodpix", type=int,
                                                                     doc="Number of good pixels in this CCD")
                        if self.config.saveCcdWeights:
                            self.ccdWeightKey = self.ccdSchema.addField("weight", type=float,
                                                                        doc="Weight for this visit in the coadd")
                
                    def makeCoaddTempExpRecorder(self, visitId):
                        """Return a CoaddTempExpInputRecorder instance to help with saving a CoaddTempExp's inputs.
                
                        The visitId may be any number that is unique for each CoaddTempExp that goes into a coadd,
                        but ideally should be something more meaningful that can be used to reconstruct a data ID.
                        """
                        return CoaddTempExpInputRecorder(self, visitId)
                
                    def makeCoaddInputs(self):
                        """Create a CoaddInputs object with schemas defined by the task configuration"""
                        return afwImage.CoaddInputs(self.visitSchema, self.ccdSchema)
                
                    def addVisitToCoadd(self, coaddInputs, coaddTempExp, weight):
                        """Called by AssembleCoaddTask when adding (a subset of) a coaddTempExp to a coadd.  The
                        base class impementation extracts the CoaddInputs from the coaddTempExp and appends
                        them to the given coaddInputs, filling in the weight column(s).
                
                        Note that the passed coaddTempExp may be a subimage, but that this method will only be
                        called for the first subimage
                
                        Returns the record for the visit to allow subclasses to fill in additional fields.
                        Warns and returns None if the inputRecorder catalogs for the coaddTempExp are not usable.
                        """
                        tempExpInputs = coaddTempExp.getInfo().getCoaddInputs()
                        if len(tempExpInputs.visits) != 1:
                            self.log.warn("CoaddInputs for coaddTempExp should have exactly one record in visits table "
                                          "(found %d).  CoaddInputs for this visit will not be saved."
                                          % len(tempExpInputs.visits))
                            return None
                        inputVisitRecord = tempExpInputs.visits[0];
                        outputVisitRecord = coaddInputs.visits.addNew()
                        outputVisitRecord.assign(inputVisitRecord)
                        outputVisitRecord.setD(self.visitWeightKey, weight)
                        for inputCcdRecord in tempExpInputs.ccds:
                            if inputCcdRecord.getL(self.ccdVisitKey) != inputVisitRecord.getId():
                                self.log.warn("CoaddInputs for coaddTempExp with id %d contains CCDs with visit=%d. "
                                              "CoaddInputs may be unreliable."
                                              % (inputVisitRecord.getId(), inputCcdRecord.getL(self.ccdVisitKey)))
                            outputCcdRecord = coaddInputs.ccds.addNew()
                            outputCcdRecord.assign(inputCcdRecord)
                            if self.config.saveCcdWeights:
                                outputCcdRecord.setD(self.ccdWeightKey, weight)
                        return inputVisitRecord
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="ba18e527"/></a>ba18e527</h3>

<pre>
commit ba18e527433a7ca9f1d25f5634d3630ec28189a7
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jan 6 14:46:31 2015 -0500

    coaddInputRecorder: change default for saveVisitGoodPix=True
    
    We probably always want to save the number of good pixels so that
    we can properly weight the average positions in the CoaddPsf.
</pre>
<h3><a name="a0812f2f"/></a>a0812f2f</h3>

<pre>
commit a0812f2f24ba014b3c83fd82232634b1eb47f5be
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Jul 25 15:16:49 2014 -0400

    set aperture correction on coaddTempExp
    
    Added disabled code to set PSF too, but this code causes a
    test failure.  It will be re-enabled as part of HSC-802.
</pre>
<h3><a name="d5c2356d"/></a>d5c2356d</h3>

<pre>
commit d5c2356dabefecac401aee74ae2443145c954483
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Nov 5 12:34:48 2014 -0500

    Add polygon to tempExp files.
</pre>
<h3><a name="7656d164"/></a>7656d164</h3>

<pre>
commit 7656d164d29e9e50b7ec87c343a33e97337e133a
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Jul 25 15:14:57 2014 -0400

    assembleCoadd: set coadd aperture correction
    
    Using new makeCoaddApCorrMap function.
</pre>
<h3><a name="9a52d4b1"/></a>9a52d4b1</h3>

<pre>
commit 9a52d4b1fd3fd5faaed32166a175b0b9602f98ae
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Mar 29 17:42:34 2013 -0400

    Refactor CoaddInputRecorderTask.
    
    As promised, #2590 does let us clean up the APIs here a bit.
</pre>
<h3><a name="210f523c"/></a>210f523c</h3>

<pre>
commit 210f523c04f481596e76be196bdc855794151589
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Feb 5 21:52:47 2013 -0500

    Add new CoaddInputRecorderTask to build afw::image::CoaddInputs object for the completed coadd.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="210f523c"/></a>210f523c</h3>

<pre>
commit 210f523c04f481596e76be196bdc855794151589
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Feb 5 21:52:47 2013 -0500

    Add new CoaddInputRecorderTask to build afw::image::CoaddInputs object for the completed coadd.
</pre>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
<h3><a name="ea69a5c4"/></a>ea69a5c4</h3>

<pre>
commit ea69a5c4a1645e96b66fd67e16592403479021b1
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 11 11:29:12 2014 -0700

    Mostly done converting code. simpleMapper.py still needs some work.
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/testSnapCombine.py"/></a>tests/testSnapCombine.py
### Diff:

<pre>
                #!/usr/bin/env python
                
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import unittest
                
                import numpy
                
                import lsst.utils.tests as utilsTests
                import lsst.afw.image as afwImage
                import lsst.afw.image.testUtils as afwTestUtils
                import lsst.afw.coord as afwCoord
                import lsst.afw.geom as afwGeom
                from lsst.coadd.utils import setCoaddEdgeBits
                from lsst.pipe.tasks.snapCombine import SnapCombineTask
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#2d6f9e33">2d6f9e33</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#5a35f7cb">5a35f7cb</a> + numpy.random.seed(1)</div>
                
                def makeRandomExposure(width, height, imMean, varMean, maxMask):
                    """Make a random exposure with Poisson distribution for image and variance
                    
                    @param[in] width image width (pixels)
                    @param[in] height image height (pixels)
                    @param[in] imMean mean of image plane
                    @param[in] varMean mean of variance plane
                    @param[in] maxMask maximum mask value; values will be uniformly chosen in [0, maxMask]
                    """
                    exp = afwImage.ExposureF(width, height)
                    mi = exp.getMaskedImage()
                    imArr, maskArr, varArr = mi.getArrays()
                    imArr[:,:] = numpy.random.poisson(imMean, size=imArr.shape)
                    varArr[:,:] = numpy.random.poisson(varMean, size=varArr.shape)
                    maskArr[:,:] = numpy.random.random_integers(0, maxMask, size=maskArr.shape)
                    
                    return exp
                
                def simpleAdd(exp0, exp1, badPixelMask):
                    """Add two exposures, avoiding bad pixels
                    """
                    imArr0, maskArr0, varArr0 = exp0.getMaskedImage().getArrays()
                    imArr1, maskArr1, varArr1 = exp1.getMaskedImage().getArrays()
                    expRes = exp0.Factory(exp0, True)
                    miRes = expRes.getMaskedImage()
                    imArrRes, maskArrRes, varArrRes = miRes.getArrays()
                    
                    weightMap = afwImage.ImageF(exp0.getDimensions())
                    weightArr = weightMap.getArray()
                
                    good0 = numpy.bitwise_and(maskArr0, badPixelMask) == 0
                    good1 = numpy.bitwise_and(maskArr1, badPixelMask) == 0
                
                    imArrRes[:,:]  = numpy.where(good0,  imArr0, 0) + numpy.where(good1,  imArr1, 0)
                    varArrRes[:,:] = numpy.where(good0, varArr0, 0) + numpy.where(good1, varArr1, 0)
                    maskArrRes[:,:] = numpy.bitwise_or(numpy.where(good0, maskArr0, 0), numpy.where(good1, maskArr1, 0))
                    weightArr[:,:] = numpy.where(good0, 1, 0) + numpy.where(good1, 1, 0)
                    
                    miRes /= weightMap
                    miRes *= 2 # want addition, not mean, where both pixels are valid
                
                    setCoaddEdgeBits(miRes.getMask(), weightMap)    
                    
                    return expRes
                    
                
                class SnapCombineTestCase(unittest.TestCase):
                    """A test case for SnapCombineTask."""
                    def testAddition(self):
                        """Test addition with bad pixels
                        """
                        config = SnapCombineTask.ConfigClass()
                        config.doRepair = False
                        config.doDiffIm = False
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#8c76c6d8">8c76c6d8</a> -         config.badMaskPlanes = ("BAD", "SAT", "NO_DATA", "CR")</div>
              ?                                                ^^^ ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#2d6f9e33">2d6f9e33</a> +         config.badMaskPlanes = ("BAD", "SAT", "EDGE", "CR")</div>
              ?                                                ^ ^^
                        badPixelMask = afwImage.MaskU.getPlaneBitMask(config.badMaskPlanes)
                        task = SnapCombineTask(config=config)
                
                        snap0 = makeRandomExposure(25, 25, 10000, 5000, badPixelMask)
                        snap1 = makeRandomExposure(25, 25, 10000, 5000, badPixelMask)
                        resExp = task.run(snap0, snap1).exposure
                        resMi = resExp.getMaskedImage()
                        
                        predExp = simpleAdd(snap0, snap1, badPixelMask)
                        predMi = predExp.getMaskedImage()
                        errMsg = afwTestUtils.maskedImagesDiffer(resMi.getArrays(), predMi.getArrays())
                        if errMsg:
                            self.fail(errMsg)
                    
                    def testAdditionAllGood(self):
                        """Test the case where all pixels are valid
                        """
                        config = SnapCombineTask.ConfigClass()
                        config.doRepair = False
                        config.doDiffIm = False
                        task = SnapCombineTask(config=config)
                
                        snap0 = makeRandomExposure(25, 25, 10000, 5000, 0)
                        snap1 = makeRandomExposure(25, 25, 10000, 5000, 0)
                        resExp = task.run(snap0, snap1).exposure
                        resMi = resExp.getMaskedImage()
                
                        predMi = snap0.getMaskedImage().Factory(snap0.getMaskedImage(), True)
                        predMi += snap1.getMaskedImage()
                        errMsg = afwTestUtils.maskedImagesDiffer(resMi.getArrays(), predMi.getArrays())
                        if errMsg:
                            self.fail(errMsg)
                    
                    def testMetadata(self):
                        """Test more advanced metadata handling
                        """
                        config = SnapCombineTask.ConfigClass()
                        config.doRepair = False
                        config.doDiffIm = False
                        # the MISS<N> keys are missing from metadata<N>
                        # and so cannot be summed or averaged
                        # MISS0 keys will be copied without alterate
                        # MISS1 keys will be missing from the result
                        config.averageKeys = ("AVG0", "AVG1", "MISS0AVG", "MISS1AVG")
                        config.sumKeys = ("SUM0", "SUM1", "MISS0SUM", "MISS1SUM")
                        task = SnapCombineTask(config=config)
                
                        snap0 = makeRandomExposure(5, 5, 10000, 5000, 0)
                        snap1 = makeRandomExposure(5, 5, 10000, 5000, 0)
                        
                        metadata0 = snap0.getMetadata()
                        metadata1 = snap1.getMetadata()
                        metadata0.set("NUM0", 45.2)
                        metadata0.set("ASTR", "this is a string")
                        metadata0.set("AVG0", 10.5)
                        metadata1.set("AVG0", 9.5)
                        metadata0.set("AVG1", -0.7)
                        metadata1.set("AVG1", 0.2)
                        metadata0.set("MISS0AVG", 2.3523)
                        metadata1.set("MISS1AVG", 8.23)
                        metadata0.set("SUM0", 1.23)
                        metadata1.set("SUM0", 4.56)
                        metadata0.set("SUM1", 9814)
                        metadata1.set("SUM1", 3)
                        metadata0.set("MISS0SUM", 75.4)
                        metadata1.set("MISS1SUM", -234.3)
                        
                        
                        allKeys = set(metadata0.names()) | set(metadata1.names())
                        miss0Keys = set(key for key in allKeys if key.startswith("MISS0"))
                        miss1Keys = set(key for key in allKeys if key.startswith("MISS1"))
                        missKeys = miss0Keys | miss1Keys
                        avgKeys = set(config.averageKeys) - missKeys # keys that will be averaged
                        sumKeys = set(config.sumKeys) - missKeys # keys that will be summed
                        sameKeys = allKeys - (avgKeys | sumKeys | miss1Keys) # keys that will be the same
                        
                        resExp = task.run(snap0, snap1).exposure
                        resMetadata = resExp.getMetadata()
                        
                        for key in sameKeys:
                            self.assertEqual(resMetadata.get(key), metadata0.get(key))
                        for key in avgKeys:
                            self.assertAlmostEqual(resMetadata.get(key), ((metadata0.get(key) + metadata1.get(key)) / 2.0))
                        for key in sumKeys:
                            self.assertAlmostEqual(resMetadata.get(key), (metadata0.get(key) + metadata1.get(key)))
                        for key in miss1Keys:
                            self.assertFalse(resMetadata.exists(key))
                
                def suite():
                    utilsTests.init()
                    suites = []
                    suites += unittest.makeSuite(SnapCombineTestCase)
                    suites += unittest.makeSuite(utilsTests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(shouldExit=False):
                    utilsTests.run(suite(), shouldExit)
                
                if __name__ == "__main__":
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="5a35f7cb"/></a>5a35f7cb</h3>

<pre>
commit 5a35f7cbb172133b0ceaaecdbe17ec63ff506cdc
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 28 21:17:03 2014 -0500

    make tests deterministic by seeding RNG (DM-1003)
</pre>
<h3><a name="2d6f9e33"/></a>2d6f9e33</h3>

<pre>
commit 2d6f9e334f3c47046468072491ddb29731505480
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jan 11 17:24:35 2013 -0800

    snapCombine now supports metadata fixup and the simple case we plan to use is now tested
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/ticket-2155.py"/></a>tests/ticket-2155.py
### Diff:

<pre>
                #!/usr/bin/env python
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import unittest
                
                import os
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#a038f396">a038f396</a> - import eups</div>
              ?        ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#2763f8f7">2763f8f7</a> + import sys</div>
              ?        ^^
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#a038f396">a038f396</a> - from lsst.meas.algorithms import *</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#a038f396">a038f396</a> - import lsst.pipe.tasks as pipeTasks</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#a038f396">a038f396</a> - import lsst.pipe.tasks.astrometry as pipeTasksAstrom</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#fa0d35c5">fa0d35c5</a> + import lsst.utils</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#bd034e95">bd034e95</a> + import lsst.meas.algorithms as measAlg</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#bd034e95">bd034e95</a> + from lsst.meas.astrom import ANetAstrometryTask, ANetAstrometryConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#cad3bddc">cad3bddc</a> + from lsst.meas.base import SingleFrameMeasurementTask, SingleFrameMeasurementConfig</div>
                import lsst.utils.tests as utilsTests
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#cad3bddc">cad3bddc</a> + import lsst.afw.detection as afwDetection</div>
                import lsst.afw.image   as afwImage
                import lsst.afw.table   as afwTable
                import lsst.pex.logging as pexLog
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#a038f396">a038f396</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#2763f8f7">2763f8f7</a> + try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#2763f8f7">2763f8f7</a> +     import eups</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#2763f8f7">2763f8f7</a> + except ImportError:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
41   <a href="#2763f8f7">2763f8f7</a> +     print "warning: import of eups failed; tests will be skipped"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#2763f8f7">2763f8f7</a> +     sys.exit(0)</div>
                
                class TestForceWcs(unittest.TestCase):
                    def setUp(self):
                        eupsObj = eups.Eups()
                        #ver = 'imsim-2011-08-01-0'
                        # ver = 'sdss-2012-05-01-0'
                        # ok, version, reason = eupsObj.setup('astrometry_net_data', versionName=ver)
                        # if not ok:
                        #     raise ValueError("Failed to setup astrometry_net_data version '%s': %s" % (ver, reason))
                        # print 'Setup astrometry_net_data', ver
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#7c0756a4">7c0756a4</a> -         mypath = eups.productDir("pipe_tasks")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#fa0d35c5">fa0d35c5</a> +         mypath = lsst.utils.getPackageDir('pipe_tasks')</div>
                        datapath = os.path.join(mypath, 'tests', 'astrometry_net_data', 't2155')
                        eupsObj = eups.Eups(root=datapath)
                        ok, version, reason = eupsObj.setup('astrometry_net_data')
                        if not ok:
                            raise ValueError("Need local version of astrometry_net_data (from path: %s): %s" %
                                             (datapath, reason))
                
                    def test1(self):
                        #exposure = afwImage.ExposureF('mini-v85408556-fr-R23-S11.fits')
                        #exposure = afwImage.ExposureF('../afwdata/ImSim/calexp/v85408556-fr/R23/S11.fits')
                        #bb = afwGeom.Box2I(afwGeom.Point2I(0,0), afwGeom.Point2I(511,511))
                        #exposure = afwImage.ExposureF('data/goodSeeingCoadd/r/3/113,0/coadd-r-3-113,0.fits', 0, bb)
                        #exposure.writeFits('mini-r-3-113,0.fits')
                        fn = os.path.join(os.path.dirname(__file__), 'data', 'mini-r-3-113,0.fits.gz')
                        print 'Reading image', fn
                        exposure = afwImage.ExposureF(fn)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#cad3bddc">cad3bddc</a> +         exposure.setPsf(afwDetection.GaussianPsf(15, 15, 3))</div>
                        schema = afwTable.SourceTable.makeMinimalSchema()
                        idFactory = afwTable.IdFactory.makeSimple()
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#a038f396">a038f396</a> -         dconf = SourceDetectionConfig()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#bd034e95">bd034e95</a> +         dconf = measAlg.SourceDetectionConfig()</div>
              ?                 ++++++++
                        dconf.reEstimateBackground = False
                        dconf.includeThresholdMultiplier = 5.
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#a038f396">a038f396</a> -         mconf = SourceMeasurementConfig()</div>
              ?                  ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#cad3bddc">cad3bddc</a> +         mconf = SingleFrameMeasurementConfig()</div>
              ?                  ^^^^^^ ^^
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#a038f396">a038f396</a> -         aconf = pipeTasksAstrom.AstrometryConfig()</div>
              ?                 ^^^ ------- ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#bd034e95">bd034e95</a> +         aconf = ANetAstrometryConfig()</div>
              ?                 ^^
                        aconf.forceKnownWcs = True
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#a038f396">a038f396</a> -         det = SourceDetectionTask(schema=schema, config=dconf)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#bd034e95">bd034e95</a> +         det = measAlg.SourceDetectionTask(schema=schema, config=dconf)</div>
              ?               ++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#a038f396">a038f396</a> -         meas = SourceMeasurementTask(schema, config=mconf)</div>
              ?                 ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#cad3bddc">cad3bddc</a> +         meas = SingleFrameMeasurementTask(schema, config=mconf)</div>
              ?                 ^^^^^^ ^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#a038f396">a038f396</a> -         astrom = pipeTasksAstrom.AstrometryTask(schema, config=aconf, name='astrom')</div>
              ?                  ^^^ ------- ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#bd034e95">bd034e95</a> +         astrom = ANetAstrometryTask(schema, config=aconf, name='astrom')</div>
              ?                  ^^
                
                        astrom.log.setThreshold(pexLog.Log.DEBUG)
                
                        inwcs = exposure.getWcs()
                        print 'inwcs:', inwcs
                        instr = inwcs.getFitsMetadata().toString()
                        print 'inwcs:', instr
                        table = afwTable.SourceTable.make(schema, idFactory)
                        sources = det.makeSourceCatalog(table, exposure, sigma=1).sources
                        meas.measure(exposure, sources)
                
                        for dosip in [False, True]:
                            aconf.solver.calculateSip = dosip
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#5b7d914e">5b7d914e</a> -             ast = astrom.run(exposure, sources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#bd034e95">bd034e95</a> +             ast = astrom.run(sourceCat=sources, exposure=exposure)</div>
                            outwcs = exposure.getWcs()
                            outstr = outwcs.getFitsMetadata().toString()
                            if dosip is False:
                                self.assertEqual(inwcs, outwcs)
                                self.assertEqual(instr, outstr)
                            print 'inwcs:', instr
                            print 'outwcs:', outstr
                            print len(ast.matches), 'matches'
                            self.assertTrue(len(ast.matches) > 10)
                        #exposure.writeFits('out-2155.fits')
                
                def suite():
                    """Returns a suite containing all the test cases in this module."""
                    utilsTests.init()
                    suites = []
                    suites += unittest.makeSuite(TestForceWcs)
                    suites += unittest.makeSuite(utilsTests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(exit=False):
                    """Run the tests"""
                    utilsTests.run(suite(), exit)
                 
                if __name__ == "__main__":
                    run(True)
                    
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="a038f396"/></a>a038f396</h3>

<pre>
commit a038f396b55975b04d2f9fa0cc2c9dca066b9d6f
Author: Dustin Lang <dstn@astro.princeton.edu>
Date:   Wed Jun 13 15:34:15 2012 -0500

    add forceUseWcs config option to use existing WCS
</pre>
<h3><a name="7c0756a4"/></a>7c0756a4</h3>

<pre>
commit 7c0756a401453ec3d98a49e24ce1b62d854e5092
Author: Dustin Lang <dstn@astro.princeton.edu>
Date:   Wed Jun 20 21:21:53 2012 -0500

    Add local astrometry_net_data for tests/ticket-2155.py
</pre>
<h3><a name="5b7d914e"/></a>5b7d914e</h3>

<pre>
commit 5b7d914eee6bf032f0432117e43bcbd8036bed7e
Author: Dustin Lang <dstn@astro.princeton.edu>
Date:   Wed Jun 20 16:15:46 2012 -0500

    add comments and a warning about useKnownWcs and calculateSip, and also run a test -- note that it reports HUGE scatter, possibly from distortion correction with large x0,y0?
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="a038f396"/></a>a038f396</h3>

<pre>
commit a038f396b55975b04d2f9fa0cc2c9dca066b9d6f
Author: Dustin Lang <dstn@astro.princeton.edu>
Date:   Wed Jun 13 15:34:15 2012 -0500

    add forceUseWcs config option to use existing WCS
</pre>
<h3><a name="2763f8f7"/></a>2763f8f7</h3>

<pre>
commit 2763f8f7eede61733a2d62688ed01db70d6d9e25
Author: Joshua Hoblitt <josh@hoblitt.com>
Date:   Fri May 22 12:33:48 2015 -0700

    skip tests/examples if eups is not present
</pre>
<h3><a name="cad3bddc"/></a>cad3bddc</h3>

<pre>
commit cad3bddc91001ef76b99edf7bca71a2c310ed749
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 1 12:48:13 2015 -0700

    Updated tests/ticket-2155 for recent changes to other packages
</pre>
<h3><a name="bd034e95"/></a>bd034e95</h3>

<pre>
commit bd034e95a6664dddfa6762f1e5267e0509bc18c2
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Mar 5 14:40:22 2015 -0800

    Update tests/ticket-2155 for new meas_algorithms AnetAstrometryTask
</pre>
<h3><a name="fa0d35c5"/></a>fa0d35c5</h3>

<pre>
commit fa0d35c5ba45e6d624455a9e29ca2b6d6945f332
Author: Joshua Hoblitt <josh@hoblitt.com>
Date:   Fri May 22 12:33:14 2015 -0700

    replace eups.productDir() calls with lsst.utils.getPackageDir()
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/snapCombine.py"/></a>python/lsst/pipe/tasks/snapCombine.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import numpy as num
                import lsst.pex.config as pexConfig
                import lsst.daf.base as dafBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#84a8a5e8">84a8a5e8</a> - import lsst.afw.detection as afwDet</div>
                import lsst.afw.image as afwImage
                import lsst.afw.table as afwTable
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
29   <a href="#2e88c596">2e88c596</a> - from lsst.coadd.utils import Coadd, addToCoadd, setCoaddEdgeBits</div>
              ?                             -------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#35e3701f">35e3701f</a> + from lsst.coadd.utils import addToCoadd, setCoaddEdgeBits</div>
                from lsst.ip.diffim import SnapPsfMatchTask
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#84190c46">84190c46</a> - from lsst.meas.algorithms import SourceDetectionTask, SourceMeasurementTask</div>
              ?                                                     -----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#e0116f17">e0116f17</a> + from lsst.meas.algorithms import SourceDetectionTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#e0116f17">e0116f17</a> + from lsst.meas.base import SingleFrameMeasurementTask</div>
                import lsst.meas.algorithms as measAlg
                
                from .repair import RepairTask
                from .calibrate import InitialPsfConfig
                
                class SnapCombineConfig(pexConfig.Config):
                    doRepair = pexConfig.Field(
                        dtype = bool,
                        doc = "Repair images (CR reject and interpolate) before combining",
                        default = True,
                    )
                    repairPsfFwhm = pexConfig.Field(
                        dtype = float,
                        doc = "Psf FWHM (pixels) used to detect CRs", 
                        default = 2.5,
                    )
                    doDiffIm = pexConfig.Field(
                        dtype = bool,
                        doc = "Perform difference imaging before combining",
                        default = False,
                    )
                    doPsfMatch = pexConfig.Field(
                        dtype = bool,
                        doc = "Perform PSF matching for difference imaging (ignored if doDiffIm false)",
                        default = True,
                    )
                    doMeasurement = pexConfig.Field(
                        dtype = bool,
                        doc = "Measure difference sources (ignored if doDiffIm false)",
                        default = True,
                    )
                    badMaskPlanes = pexConfig.ListField(
                        dtype = str,
                        doc = "Mask planes that, if set, the associated pixels are not included in the combined exposure; "
                            "DETECTED excludes cosmic rays",
                        default = ("DETECTED",),
                    )
                    averageKeys = pexConfig.ListField(
                        dtype = str,
                        doc = "List of float metadata keys to average when combining snaps, e.g. float positions and dates; "
                            "non-float data must be handled by overriding the fixMetadata method",
                        optional = True,
                        
                    )
                    sumKeys = pexConfig.ListField(
                        dtype = str,
                        doc = "List of float or int metadata keys to sum when combining snaps, e.g. exposure time; "
                            "non-float, non-int data must be handled by overriding the fixMetadata method",
                        optional = True,
                    )
                
                    repair      = pexConfig.ConfigurableField(target = RepairTask, doc = "")
                    diffim      = pexConfig.ConfigurableField(target = SnapPsfMatchTask, doc = "")
                    detection   = pexConfig.ConfigurableField(target = SourceDetectionTask, doc = "")
                    initialPsf  = pexConfig.ConfigField(dtype = InitialPsfConfig, doc = "")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#3ffd87c1">3ffd87c1</a> -     measurement = pexConfig.ConfigurableField(target = SourceMeasurementTask, doc = "")</div>
              ?                                                         ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#e0116f17">e0116f17</a> +     measurement = pexConfig.ConfigurableField(target = SingleFrameMeasurementTask, doc = "")</div>
              ?                                                         ^^^^^^ ^^
                
                    def setDefaults(self):
                        self.detection.thresholdPolarity = "both"
                
                    def validate(self):
                        if self.detection.thresholdPolarity != "both":
                            raise ValueError("detection.thresholdPolarity must be 'both' for SnapCombineTask")
                
                class SnapCombineTask(pipeBase.Task):
                    ConfigClass = SnapCombineConfig
                    _DefaultName = "snapCombine"
                
                    def __init__(self, *args, **kwargs):
                        pipeBase.Task.__init__(self, *args, **kwargs)
                        self.makeSubtask("repair")
                        self.makeSubtask("diffim")
                        self.schema = afwTable.SourceTable.makeMinimalSchema()
                        self.algMetadata = dafBase.PropertyList()
                        self.makeSubtask("detection", schema=self.schema)
                        if self.config.doMeasurement:
                            self.makeSubtask("measurement", schema=self.schema, algMetadata=self.algMetadata)
                 
                    @pipeBase.timeMethod
                    def run(self, snap0, snap1, defects=None):
                        """Combine two snaps
                        
                        @param[in] snap0: snapshot exposure 0
                        @param[in] snap1: snapshot exposure 1
                        @defects[in] defect list (for repair task)
                        @return a pipe_base Struct with fields:
                        - exposure: snap-combined exposure
                        - sources: detected sources, or None if detection not performed
                        """
                        # initialize optional outputs
                        sources = None
                        
                        if self.config.doRepair:
                            self.log.info("snapCombine repair")
                            psf = self.makeInitialPsf(snap0, fwhmPix=self.config.repairPsfFwhm)
                            snap0.setPsf(psf)
                            snap1.setPsf(psf)
                            self.repair.run(snap0, defects=defects, keepCRs=False)
                            self.repair.run(snap1, defects=defects, keepCRs=False)
                            self.display('repair0', exposure=snap0)
                            self.display('repair1', exposure=snap1)
                
                        if self.config.doDiffIm:
                            if self.config.doPsfMatch:
                                self.log.info("snapCombine psfMatch")
                                diffRet  = self.diffim.run(snap0, snap1, "subtractExposures")
                                diffExp  = diffRet.subtractedImage
                
                                # Measure centroid and width of kernel; dependent on ticket #1980
                                # Useful diagnostic for the degree of astrometric shift between snaps.
                                diffKern = diffRet.psfMatchingKernel
                                width, height = diffKern.getDimensions()
                                # TBD...
                                #psfAttr = measAlg.PsfAttributes(diffKern, width//2, height//2)
                
                            else:
                                diffExp  = afwImage.ExposureF(snap0, True)
                                diffMi   = diffExp.getMaskedImage()
                                diffMi  -= snap1.getMaskedImage()
                
                            psf = self.makeInitialPsf(snap0)
                            diffExp.setPsf(psf)
                            table = afwTable.SourceTable.make(self.schema)
                            table.setMetadata(self.algMetadata)
                            detRet = self.detection.makeSourceCatalog(table, diffExp)
                            sources = detRet.sources
                            fpSets = detRet.fpSets
                            if self.config.doMeasurement:
                                self.measurement.measure(diffExp, sources)
                        
                            mask0 = snap0.getMaskedImage().getMask()
                            mask1 = snap1.getMaskedImage().getMask()
                            fpSets.positive.setMask(mask0, "DETECTED")
                            fpSets.negative.setMask(mask1, "DETECTED")
                        
                            maskD = diffExp.getMaskedImage().getMask()
                            fpSets.positive.setMask(maskD, "DETECTED")
                            fpSets.negative.setMask(maskD, "DETECTED_NEGATIVE")
                        
                        combinedExp = self.addSnaps(snap0, snap1)
                
                        return pipeBase.Struct(
                            exposure = combinedExp,
                            sources = sources,
                        )
                    
                    def addSnaps(self, snap0, snap1):
                        """Add two snap exposures together, returning a new exposure
                        
                        @param[in] snap0 snap exposure 0
                        @param[in] snap1 snap exposure 1
                        @return combined exposure
                        """
                        self.log.info("snapCombine addSnaps")
                        
                        combinedExp = snap0.Factory(snap0, True)
                        combinedMi = combinedExp.getMaskedImage()
                        combinedMi.set(0)
                        
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#2d6f9e33">2d6f9e33</a> -         weightMap = combinedMi.getImage().Factory(combinedMi.getBBox(afwImage.PARENT))</div>
              ?                                                                      ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#35e3701f">35e3701f</a> +         weightMap = combinedMi.getImage().Factory(combinedMi.getBBox())</div>
                        weight = 1.0
                        badPixelMask = afwImage.MaskU.getPlaneBitMask(self.config.badMaskPlanes)
                        addToCoadd(combinedMi, weightMap, snap0.getMaskedImage(), badPixelMask, weight)
                        addToCoadd(combinedMi, weightMap, snap1.getMaskedImage(), badPixelMask, weight)
                
                        # pre-scaling the weight map instead of post-scaling the combinedMi saves a bit of time
                        # because the weight map is a simple Image instead of a MaskedImage
                        weightMap *= 0.5 # so result is sum of both images, instead of average
                        combinedMi /= weightMap
                        setCoaddEdgeBits(combinedMi.getMask(), weightMap)
                        
                        # note: none of the inputs has a valid Calib object, so that is not touched
                        # Filter was already copied
                        
                        combinedMetadata = combinedExp.getMetadata()
                        metadata0 = snap0.getMetadata()
                        metadata1 = snap1.getMetadata()
                        self.fixMetadata(combinedMetadata, metadata0, metadata1)
                        
                        return combinedExp
                    
                    def fixMetadata(self, combinedMetadata, metadata0, metadata1):
                        """Fix the metadata of the combined exposure (in place)
                        
                        This implementation handles items specified by config.averageKeys and config.sumKeys,
                        which have data type restrictions. To handle other data types (such as sexagesimal
                        positions and ISO dates) you must supplement this method with your own code.
                        
                        @param[in,out] combinedMetadata metadata of combined exposure;
                            on input this is a deep copy of metadata0 (a PropertySet)
                        @param[in] metadata0 metadata of snap0 (a PropertySet)
                        @param[in] metadata1 metadata of snap1 (a PropertySet)
                        
                        @note the inputs are presently PropertySets due to ticket #2542. However, in some sense
                        they are just PropertyLists that are missing some methods. In particular: comments and order
                        are preserved if you alter an existing value with set(key, value).
                        """
                        keyDoAvgList = []
                        if self.config.averageKeys:
                            keyDoAvgList += [(key, 1) for key in self.config.averageKeys]
                        if self.config.sumKeys:
                            keyDoAvgList += [(key, 0) for key in self.config.sumKeys]
                        for key, doAvg in keyDoAvgList:
                            opStr = "average" if doAvg else "sum"
                            try:
                                val0 = metadata0.get(key)
                                val1 = metadata1.get(key)
                            except Exception:
                                self.log.warn("Could not %s metadata %r: missing from one or both exposures" % (opStr, key,))
                                continue
                
                            try:
                                combinedVal = val0 + val1
                                if doAvg:
                                    combinedVal /= 2.0
                            except Exception:
                                self.log.warn("Could not %s metadata %r: value %r and/or %r not numeric" % \
                                    (opStr, key, val0, val1))
                                continue
                
                            combinedMetadata.set(key, combinedVal)
                
                    def makeInitialPsf(self, exposure, fwhmPix=None):
                        """Initialise the detection procedure by setting the PSF and WCS
                
                        @param exposure Exposure to process
                        @return PSF, WCS
                        """
                        assert exposure, "No exposure provided"
                        wcs = exposure.getWcs()
                        assert wcs, "No wcs in exposure"
                        
                        if fwhmPix is None:
                            fwhmPix = self.config.initialPsf.fwhm / wcs.pixelScale().asArcseconds()
                            
                        size = self.config.initialPsf.size
                        model = self.config.initialPsf.model
                        self.log.info("installInitialPsf fwhm=%s pixels; size=%s pixels" % (fwhmPix, size))
                        psfCls = getattr(measAlg, model + "Psf")
                        psf = psfCls(size, size, fwhmPix/(2.0*num.sqrt(2*num.log(2.0))))
                        return psf
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="84a8a5e8"/></a>84a8a5e8</h3>

<pre>
commit 84a8a5e80ac10d5c228686a2280aa8773c47eb38
Author: Andy Becker <acbecker@gmail.com>
Date:   Tue Feb 28 20:56:53 2012 -0600

    Working on snap diff
</pre>
<h3><a name="2d6f9e33"/></a>2d6f9e33</h3>

<pre>
commit 2d6f9e334f3c47046468072491ddb29731505480
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Jan 11 17:24:35 2013 -0800

    snapCombine now supports metadata fixup and the simple case we plan to use is now tested
</pre>
<h3><a name="3ffd87c1"/></a>3ffd87c1</h3>

<pre>
commit 3ffd87c196f8be99a9ee9305ce2f4acc4a084221
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 3 19:19:47 2012 -0500

    Initial implementation. Needs testing.
</pre>
<h3><a name="2e88c596"/></a>2e88c596</h3>

<pre>
commit 2e88c596d372bb19d444e2926e15d9ad02dc2ce1
Author: Andy Becker <acbecker@gmail.com>
Date:   Mon Mar 12 14:30:20 2012 -0500

    Deep copy of Exposure to include Filter, Detector, Calib, etc...
</pre>
<h3><a name="84190c46"/></a>84190c46</h3>

<pre>
commit 84190c4692bdaf905804e5ad9265e338c935d036
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 15 15:01:38 2012 -0400

    fixed miscellanous problems with last merge conflict resolution; can now run LSST sim data as long as we don't do snapCombine
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="35e3701f"/></a>35e3701f</h3>

<pre>
commit 35e3701f96ea7feae4bd2918ae7dd54d701bfe8d
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 09:02:01 2014 -0700

    Use default image origin=PARENT where possible
</pre>
<h3><a name="e0116f17"/></a>e0116f17</h3>

<pre>
commit e0116f179ec95625b82333a1abe45c424b192bef
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Wed Mar 4 02:55:24 2015 -0800

    DM-420 removal of meas_algorithms measurement
    
    Move all measurement tests to meas_base
    Removed field named for version 0 deblender
    Remove use of tableVersion on measurement task and code tasks which used it.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/mocks/mockObservation.py"/></a>python/lsst/pipe/tasks/mocks/mockObservation.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import numpy
                
                import lsst.pex.config
                import lsst.afw.table
                import lsst.afw.geom
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#94df22ea">94df22ea</a> - import lsst.afw.cameraGeom</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#ea69a5c4">ea69a5c4</a> + from lsst.afw.cameraGeom import PIXELS, FOCAL_PLANE</div>
                import lsst.afw.image
                import lsst.afw.math
                import lsst.afw.detection
                import lsst.pipe.base
                
                class MockObservationConfig(lsst.pex.config.Config):
                    pixelScale = lsst.pex.config.Field(
                        dtype=float, default=0.2, optional=False,
                        doc="Pixel scale for mock WCSs in arcseconds/pixel"
                        )
                    doRotate = lsst.pex.config.Field(
                        dtype=bool, default=True, optional=False,
                        doc="Whether to randomly rotate observations relative to the tract Wcs"
                        )
                    fluxMag0 = lsst.pex.config.Field(
                        dtype=float, default=1E11, optional=False,
                        doc="Flux at zero magnitude used to define Calibs."
                        )
                    fluxMag0Sigma = lsst.pex.config.Field(
                        dtype=float, default=100.0, optional=False,
                        doc="Error on flux at zero magnitude used to define Calibs; used to add scatter as well."
                        )
                    expTime = lsst.pex.config.Field(
                        dtype=float, default=60.0, optional=False,
                        doc="Exposure time set in generated Calibs (does not affect flux or noise level)"
                        )
                    psfImageSize = lsst.pex.config.Field(
                        dtype=int, default=21, optional=False,
                        doc="Image width and height of generated Psfs."
                        )
                    psfMinSigma = lsst.pex.config.Field(
                        dtype=float, default=1.5, optional=False,
                        doc="Minimum radius for generated Psfs."
                        )
                    psfMaxSigma = lsst.pex.config.Field(
                        dtype=float, default=3.0, optional=False,
                        doc="Maximum radius for generated Psfs."
                        )
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#5a35f7cb">5a35f7cb</a> +     seed = lsst.pex.config.Field(dtype=int, default=1, doc="Seed for numpy random number generator")</div>
                
                class MockObservationTask(lsst.pipe.base.Task):
                    """Task to generate mock Exposure parameters (Wcs, Psf, Calib), intended for use as a subtask
                    of MockCoaddTask.
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#ea69a5c4">ea69a5c4</a> +     @todo:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#a5cea3e1">a5cea3e1</a> +     - document "pa" in detail; angle of what to what?</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#ea69a5c4">ea69a5c4</a> +     - document the catalog parameter of the run method</div>
                    """
                
                    ConfigClass = MockObservationConfig
                
                    def __init__(self, **kwds):
                        lsst.pipe.base.Task.__init__(self, **kwds)
                        self.schema = lsst.afw.table.ExposureTable.makeMinimalSchema()
                        self.ccdKey = self.schema.addField("ccd", type=int, doc="CCD number")
                        self.visitKey = self.schema.addField("visit", type=int, doc="visit number")
                        self.pointingKey = self.schema.addField("pointing", type="Coord", doc="center of visit")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#5a35f7cb">5a35f7cb</a> +         self.rng = numpy.random.RandomState(self.config.seed)</div>
                
                    def run(self, butler, n, tractInfo, camera, catalog=None):
                        """Driver that generates an ExposureCatalog of mock observations.
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] butler: a data butler</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] n: number of pointings</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] camera: camera geometry (an lsst.afw.cameraGeom.Camera)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#a5cea3e1">a5cea3e1</a> +         @param[in] catalog: catalog to which to add observations (an ExposureCatalog);</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#a5cea3e1">a5cea3e1</a> +             if None then a new catalog is created.</div>
                        """
                        if catalog is None:
                            catalog = lsst.afw.table.ExposureCatalog(self.schema)
                        else:
                            if not catalog.getSchema().contains(self.schema):
                                raise ValueError("Catalog schema does not match Task schema")
                        visit = 1
                        for position, pa in self.makePointings(n, tractInfo):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#94df22ea">94df22ea</a> -             for raft in camera:</div>
              ?                  ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#ea69a5c4">ea69a5c4</a> +             for detector in camera:</div>
              ?                 +++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#94df22ea">94df22ea</a> -                 raft = lsst.afw.cameraGeom.cast_Raft(raft)</div>
                                calib = self.buildCalib()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#94df22ea">94df22ea</a> -                 for ccd in raft:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#94df22ea">94df22ea</a> -                     ccd = lsst.afw.cameraGeom.cast_Ccd(ccd)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#94df22ea">94df22ea</a> -                     record = catalog.addNew()</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#ea69a5c4">ea69a5c4</a> +                 record = catalog.addNew()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#94df22ea">94df22ea</a> -                     record.setI(self.ccdKey, ccd.getId().getSerial())</div>
              ? ----                                          ^^        ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setI(self.ccdKey, detector.getId())</div>
              ?                                          ++++ ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#94df22ea">94df22ea</a> -                     record.setI(self.visitKey, visit)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setI(self.visitKey, visit)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#94df22ea">94df22ea</a> -                     record.setCoord(self.pointingKey, position)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setCoord(self.pointingKey, position)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#94df22ea">94df22ea</a> -                     record.setWcs(self.buildWcs(position, pa, ccd))</div>
              ? ----                                                           ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setWcs(self.buildWcs(position, pa, detector))</div>
              ?                                                           ++++ ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#94df22ea">94df22ea</a> -                     record.setCalib(calib)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setCalib(calib)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#94df22ea">94df22ea</a> -                     record.setPsf(self.buildPsf(ccd))</div>
              ? ----                                             ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setPsf(self.buildPsf(detector))</div>
              ?                                             ++++ ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#94df22ea">94df22ea</a> -                     record.setBBox(ccd.getAllPixels())</div>
              ? ----                                ^^    ^^^^^ ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#ea69a5c4">ea69a5c4</a> +                 record.setBBox(detector.getBBox())</div>
              ?                                ++++ ^^^    ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#94df22ea">94df22ea</a> -                     record.setId(butler.get("ccdExposureId", visit=visit, ccd=ccd.getId().getSerial(),</div>
              ? ----                                                                           ^^        ^^ ^^^^  ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#60da9600">60da9600</a> +                 record.setId(butler.get("ccdExposureId", visit=visit, ccd=detector.getId(), immediate=True))</div>
              ?                                                                           ++++ ^^^        ^^^^^ ^  ^^^^^^^ ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#94df22ea">94df22ea</a> -                                             immediate=True))</div>
                            visit += 1
                        return catalog
                
                    def makePointings(self, n, tractInfo):
                        """Generate (celestial) positions and rotation angles that define field locations.
                
                        Default implementation draws random pointings that are uniform in the tract's image
                        coordinate system.
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#92647c30">92647c30</a> -         The return value is a Python iterable over (coord, angle) pairs; the default implementation</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#92647c30">92647c30</a> -         is actually an iterator (i.e. the function is a "generator"), but derived-class overrides may</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#92647c30">92647c30</a> -         return any iterable. </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] n: number of pointings</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] tractInfo: skymap tract (a lsst.skymap.TractInfo)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#ea69a5c4">ea69a5c4</a> +         @return a Python iterable over (coord, angle) pairs:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#ea69a5c4">ea69a5c4</a> +         - coord is an object position (an lsst.afw.coord.Coord)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#ea69a5c4">ea69a5c4</a> +         - angle is a position angle (???) (an lsst.afw.geom.Angle)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#a5cea3e1">a5cea3e1</a> +         The default implementation returns an iterator (i.e. the function is a "generator"),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#ea69a5c4">ea69a5c4</a> +         but derived-class overrides may return any iterable.</div>
                        """
                        wcs = tractInfo.getWcs()
                        bbox = lsst.afw.geom.Box2D(tractInfo.getBBox())
                        bbox.grow(lsst.afw.geom.Extent2D(-0.1 * bbox.getWidth(), -0.1 * bbox.getHeight()))
                        for i in xrange(n):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#94df22ea">94df22ea</a> -             x = numpy.random.rand() * bbox.getWidth() + bbox.getMinX()</div>
              ?                 ^^^^^  - ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#5a35f7cb">5a35f7cb</a> +             x = self.rng.rand() * bbox.getWidth() + bbox.getMinX()</div>
              ?                 ^^^^   ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#94df22ea">94df22ea</a> -             y = numpy.random.rand() * bbox.getHeight() + bbox.getMinY()</div>
              ?                 ^^^^^  - ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#5a35f7cb">5a35f7cb</a> +             y = self.rng.rand() * bbox.getHeight() + bbox.getMinY()</div>
              ?                 ^^^^   ^
                            pa = 0.0 * lsst.afw.geom.radians
                            if self.config.doRotate:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#92647c30">92647c30</a> -                 pa = numpy.random.rand() * 2.0 * numpy.pi * lsst.afw.geom.radians</div>
              ?                      ^^^^^  - ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#5a35f7cb">5a35f7cb</a> +                 pa = self.rng.rand() * 2.0 * numpy.pi * lsst.afw.geom.radians</div>
              ?                      ^^^^   ^
                            yield wcs.pixelToSky(x, y), pa
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#94df22ea">94df22ea</a> -     def buildWcs(self, position, pa, ccd):</div>
              ?                                       ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#ea69a5c4">ea69a5c4</a> +     def buildWcs(self, position, pa, detector):</div>
              ?                                      ++++ ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#94df22ea">94df22ea</a> -         """Build a simple TAN Wcs with no distortion and exactly-aligned CCDs."""</div>
              ?                                                                               ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#ea69a5c4">ea69a5c4</a> +         """Build a simple TAN Wcs with no distortion and exactly-aligned CCDs.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] position: object position on sky (an lsst.afw.coord.Coord)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] pa: position angle (an lsst.afw.geom.Angle)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] detector: detector information (an lsst.afw.cameraGeom.Detector)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#ea69a5c4">ea69a5c4</a> +         """</div>
                        crval = position.getPosition(lsst.afw.geom.degrees)
                        pixelScale = (self.config.pixelScale * lsst.afw.geom.arcseconds).asDegrees()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#42ed9764">42ed9764</a> -         cd = (lsst.afw.geom.LinearTransform.makeScaling(pixelScale)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#81d3aaaa">81d3aaaa</a> +         cd = (lsst.afw.geom.LinearTransform.makeScaling(pixelScale) *</div>
              ?                                                                    ++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#42ed9764">42ed9764</a> -               * lsst.afw.geom.LinearTransform.makeRotation(pa))</div>
              ?              --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#2ce9f9be">2ce9f9be</a> +               lsst.afw.geom.LinearTransform.makeRotation(pa))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#94df22ea">94df22ea</a> -         crpix = ccd.getPixelFromPosition(lsst.afw.cameraGeom.FpPoint(0,0))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#60da9600">60da9600</a> +         fpCtr = detector.makeCameraPoint(lsst.afw.geom.Point2D(0, 0), FOCAL_PLANE)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#ea69a5c4">ea69a5c4</a> +         crpix = detector.transform(fpCtr, PIXELS).getPoint()</div>
                        wcs = lsst.afw.image.Wcs(crval, crpix, cd.getMatrix())
                        return wcs
                
                    def buildCalib(self):
                        """Build a simple Calib object with exposure time fixed by config, fluxMag0 drawn from
                        a Gaussian defined by config, and mid-time set to DateTime.now().
                        """
                        calib = lsst.afw.image.Calib()
                        calib.setMidTime(lsst.daf.base.DateTime.now())
                        calib.setExptime(self.config.expTime)
                        calib.setFluxMag0(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#94df22ea">94df22ea</a> -             numpy.random.randn() * self.config.fluxMag0Sigma + self.config.fluxMag0,</div>
              ?             ^^^^^  - ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#5a35f7cb">5a35f7cb</a> +             self.rng.randn() * self.config.fluxMag0Sigma + self.config.fluxMag0,</div>
              ?             ^^^^   ^
                            self.config.fluxMag0Sigma
                            )
                        return calib
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#94df22ea">94df22ea</a> -     def buildPsf(self, ccd):</div>
              ?                         ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#ea69a5c4">ea69a5c4</a> +     def buildPsf(self, detector):</div>
              ?                        ++++ ^^^
                        """Build a simple Gaussian Psf with linearly-varying ellipticity and size.
                
                        The Psf pattern increases sigma_x linearly along the x direction, and sigma_y
                        linearly along the y direction.
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#ea69a5c4">ea69a5c4</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#ea69a5c4">ea69a5c4</a> +         @param[in] detector: detector information (an lsst.afw.cameraGeom.Detector)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#ea69a5c4">ea69a5c4</a> +         @return a psf (an instance of lsst.meas.algorithms.KernelPsf)</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#94df22ea">94df22ea</a> -         bbox = ccd.getAllPixels()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#ea69a5c4">ea69a5c4</a> +         bbox = detector.getBBox()</div>
                        dx = (self.config.psfMaxSigma - self.config.psfMinSigma) / bbox.getWidth()
                        dy = (self.config.psfMaxSigma - self.config.psfMinSigma) / bbox.getHeight()
                        sigmaXFunc = lsst.afw.math.PolynomialFunction2D(1)
                        sigmaXFunc.setParameter(0, self.config.psfMinSigma - dx * bbox.getMinX() - dy * bbox.getMinY())
                        sigmaXFunc.setParameter(1, dx)
                        sigmaXFunc.setParameter(2, 0.0)
                        sigmaYFunc = lsst.afw.math.PolynomialFunction2D(1)
                        sigmaYFunc.setParameter(0, self.config.psfMinSigma)
                        sigmaYFunc.setParameter(1, 0.0)
                        sigmaYFunc.setParameter(2, dy)
                        angleFunc = lsst.afw.math.PolynomialFunction2D(0)
                        spatialFuncList = lsst.afw.math.Function2DList()
                        spatialFuncList.append(sigmaXFunc)
                        spatialFuncList.append(sigmaYFunc)
                        spatialFuncList.append(angleFunc)
                        kernel = lsst.afw.math.AnalyticKernel(
                            self.config.psfImageSize, self.config.psfImageSize,
                            lsst.afw.math.GaussianFunction2D(self.config.psfMinSigma, self.config.psfMinSigma),
                            spatialFuncList
                            )
                        return lsst.meas.algorithms.KernelPsf(kernel)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="92647c30"/></a>92647c30</h3>

<pre>
commit 92647c308ee87866f3a101af5267b7d6b876e42f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Mar 12 15:46:41 2013 -0400

    Rename methods, improve documentation and use Angle a bit more in mocks in response to review for #2524.
</pre>
<h3><a name="42ed9764"/></a>42ed9764</h3>

<pre>
commit 42ed97641bff6bcceba0eddef56554b248c4c0cc
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sun Mar 16 07:54:10 2014 -0400

    LinearTransform.makeRotation now takes an Angle
</pre>
<h3><a name="94df22ea"/></a>94df22ea</h3>

<pre>
commit 94df22eaad3077ba3a8999fa074cf010e1e17c00
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Jan 14 15:58:16 2013 -0500

    Add mapper and tasks for generating extremely simple mock data.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="5a35f7cb"/></a>5a35f7cb</h3>

<pre>
commit 5a35f7cbb172133b0ceaaecdbe17ec63ff506cdc
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 28 21:17:03 2014 -0500

    make tests deterministic by seeding RNG (DM-1003)
</pre>
<h3><a name="a5cea3e1"/></a>a5cea3e1</h3>

<pre>
commit a5cea3e107b3d11ad3c53ebca615ededc801aa5e
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Mar 13 11:42:51 2014 -0700

    Minor cleanups in response to Andy B's review
</pre>
<h3><a name="60da9600"/></a>60da9600</h3>

<pre>
commit 60da960073e5d7bbc2d6601de69ea7c178a1260b
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 11 15:18:38 2014 -0700

    Fix remaining unit test errors.
</pre>
<h3><a name="2ce9f9be"/></a>2ce9f9be</h3>

<pre>
commit 2ce9f9bebd10d2b320614dab06cfdb275a92fc09
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Thu Mar 13 17:11:25 2014 -0500

    makeRotation now takes an angle
</pre>
<h3><a name="81d3aaaa"/></a>81d3aaaa</h3>

<pre>
commit 81d3aaaa2a24868bcc47d623efbcf009d78f34f8
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Feb 11 13:58:40 2014 -0500

    mocks: update following afw API change (#3113)
</pre>
<h3><a name="ea69a5c4"/></a>ea69a5c4</h3>

<pre>
commit ea69a5c4a1645e96b66fd67e16592403479021b1
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Mar 11 11:29:12 2014 -0700

    Mostly done converting code. simpleMapper.py still needs some work.
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/selectImages.py"/></a>python/lsst/pipe/tasks/selectImages.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import lsst.pex.config as pexConfig
                import lsst.pex.exceptions as pexExceptions
                import lsst.afw.geom as afwGeom
                import lsst.pipe.base as pipeBase
                
                __all__ = ["BaseSelectImagesTask", "BaseExposureInfo", "WcsSelectImagesTask", "DatabaseSelectImagesConfig"]
                
                class DatabaseSelectImagesConfig(pexConfig.Config):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#a55e28a9">a55e28a9</a> -     """Configuration for BaseSelectImagesTask, using a database"""</div>
              ?        ^                                     ^   ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#5aa5229d">5aa5229d</a> +     """Base configuration for subclasses of BaseSelectImagesTask that use a database"""</div>
              ?        ^^^^^^                ++++++++++++++                     ^^^^^   ^
                    host = pexConfig.Field(
                        doc = "Database server host name",
                        dtype = str,
                    )
                    port = pexConfig.Field(
                        doc = "Database server port",
                        dtype = int,
                    )
                    database = pexConfig.Field(
                        doc = "Name of database",
                        dtype = str,
                    )
                    maxExposures = pexConfig.Field(
                        doc = "maximum exposures to select; intended for debugging; ignored if None",
                        dtype = int,
                        optional = True,
                    )
                
                class BaseExposureInfo(pipeBase.Struct):
                    """Data about a selected exposure
                    """
                    def __init__(self, dataId, coordList):
                        """Create exposure information that can be used to generate data references
                
                        The object has the following fields:
                        - dataId: data ID of exposure (a dict)
                        - coordList: a list of corner coordinates of the exposure (list of afwCoord.IcrsCoord)
                        plus any others items that are desired
                        """
                        super(BaseExposureInfo, self).__init__(dataId=dataId, coordList=coordList)
                
                
                class BaseSelectImagesTask(pipeBase.Task):
                    """Base task for selecting images suitable for coaddition
                    """
                    ConfigClass = pexConfig.Config
                    _DefaultName = "selectImages"
                    
                    @pipeBase.timeMethod
                    def run(self, coordList):
                        """Select images suitable for coaddition in a particular region
                        
                        @param[in] coordList: list of coordinates defining region of interest; if None then select all images
                        subclasses may add additional keyword arguments, as required
                        
                        @return a pipeBase Struct containing:
                        - exposureInfoList: a list of exposure information objects (subclasses of BaseExposureInfo),
                            which have at least the following fields:
                            - dataId: data ID dictionary
                            - coordList: coordinates of the corner of the exposure (list of afwCoord.IcrsCoord)
                        """
                        raise NotImplementedError()
                    
                    def _runArgDictFromDataId(self, dataId):
                        """Extract keyword arguments for run (other than coordList) from a data ID
                        
                        @return keyword arguments for run (other than coordList), as a dict
                        """
                        raise NotImplementedError()
                    
                    def runDataRef(self, dataRef, coordList, makeDataRefList=True, selectDataList=[]):
                        """Run based on a data reference
                
                        This delegates to run() and _runArgDictFromDataId() to do the actual
                        selection. In the event that the selectDataList is non-empty, this will
                        be used to further restrict the selection, providing the user with
                        additional control over the selection.
                
                        @param[in] dataRef: data reference; must contain any extra keys needed by the subclass
                        @param[in] coordList: list of coordinates defining region of interest; if None, search the whole sky
                        @param[in] makeDataRefList: if True, return dataRefList
                        @param[in] selectDataList: List of SelectStruct with dataRefs to consider for selection
                        @return a pipeBase Struct containing:
                        - exposureInfoList: a list of objects derived from ExposureInfo
                        - dataRefList: a list of data references (None if makeDataRefList False)
                        """
                        runArgDict = self._runArgDictFromDataId(dataRef.dataId)
                        exposureInfoList = self.run(coordList, **runArgDict).exposureInfoList
                
                        if len(selectDataList) > 0 and len(exposureInfoList) > 0:
                            # Restrict the exposure selection further
                            ccdKeys, ccdValues = _extractKeyValue(exposureInfoList)
                            inKeys, inValues = _extractKeyValue([s.dataRef for s in selectDataList], keys=ccdKeys)
                            inValues = set(inValues)
                            newExposureInfoList = []
                            for info, ccdVal in zip(exposureInfoList, ccdValues):
                                if ccdVal in inValues:
                                    newExposureInfoList.append(info)
                                else:
                                    self.log.info("De-selecting exposure %s: not in selectDataList" % info.dataId)
                            exposureInfoList = newExposureInfoList
                
                        if makeDataRefList:
                            butler = dataRef.butlerSubset.butler
                            dataRefList = [butler.dataRef(datasetType = "calexp",
                                                          dataId = expInfo.dataId,
                                                          ) for expInfo in exposureInfoList]
                        else:
                            dataRefList = None
                
                        return pipeBase.Struct(
                            dataRefList = dataRefList,
                            exposureInfoList = exposureInfoList,
                        )
                
                
                def _extractKeyValue(dataList, keys=None):
                    """Extract the keys and values from a list of dataIds
                
                    The input dataList is a list of objects that have 'dataId' members.
                    This allows it to be used for both a list of data references and a
                    list of ExposureInfo
                    """
                    assert len(dataList) > 0
                    if keys is None:
                        keys = sorted(dataList[0].dataId.keys())
                    keySet = set(keys)
                    values = list()
                    for data in dataList:
                        thisKeys = set(data.dataId.keys())
                        if thisKeys != keySet:
                            raise RuntimeError("DataId keys inconsistent: %s vs %s" % (keySet, thisKeys))
                        values.append(tuple(data.dataId[k] for k in keys))
                    return keys, values
                
                
                class SelectStruct(pipeBase.Struct):
                    """A container for data to be passed to the WcsSelectImagesTask"""
                    def __init__(self, dataRef, wcs, dims):
                        super(SelectStruct, self).__init__(dataRef=dataRef, wcs=wcs, dims=dims)
                
                
                class WcsSelectImagesTask(BaseSelectImagesTask):
                    """Select images using their Wcs"""
                    def runDataRef(self, dataRef, coordList, makeDataRefList=True, selectDataList=[]):
                        """Select images in the selectDataList that overlap the patch
                
                        We use the "convexHull" function in the geom package to define
                        polygons on the celestial sphere, and test the polygon of the
                        patch for overlap with the polygon of the image.
                
                        We use "convexHull" instead of generating a SphericalConvexPolygon
                        directly because the standard for the inputs to SphericalConvexPolygon
                        are pretty high and we don't want to be responsible for reaching them.
                        If "convexHull" is found to be too slow, we can revise this.
                
                        @param dataRef: Data reference for coadd/tempExp (with tract, patch)
                        @param coordList: List of Coord specifying boundary of patch
                        @param makeDataRefList: Construct a list of data references?
                        @param selectDataList: List of SelectStruct, to consider for selection
                        """
                        from lsst.geom import convexHull
                
                        dataRefList = []
                        exposureInfoList = []
                
                        patchVertices = [coord.getVector() for coord in coordList]
                        patchPoly = convexHull(patchVertices)
                
                        for data in selectDataList:
                            dataRef = data.dataRef
                            imageWcs = data.wcs
                            nx,ny = data.dims
                
                            imageBox = afwGeom.Box2D(afwGeom.Point2D(0,0), afwGeom.Extent2D(nx, ny))
                            try:
                                imageCorners = [imageWcs.pixelToSky(pix) for pix in imageBox.getCorners()]
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#c17d6f54">c17d6f54</a> -             except pexExceptions.LsstCppException, e:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#94d2ee8c">94d2ee8c</a> +             except (pexExceptions.DomainError, pexExceptions.RuntimeError) as e:</div>
                                # Protecting ourselves from awful Wcs solutions in input images
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#5d07b4d4">5d07b4d4</a> -                 if (not isinstance(e.message, pexExceptions.DomainErrorException) and</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#5d07b4d4">5d07b4d4</a> -                     not isinstance(e.message, pexExceptions.RuntimeErrorException)):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#c17d6f54">c17d6f54</a> -                     raise</div>
                                self.log.logdebug("WCS error in testing calexp %s (%s): deselecting" % (dataRef.dataId, e))
                                continue
                
                            imagePoly = convexHull([coord.getVector() for coord in imageCorners])
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#56666e8f">56666e8f</a> -             if imagePoly is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#56666e8f">56666e8f</a> -                 self.log.logdebug("Unable to create polygon from image %s: deselecting" % dataRef.dataId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#56666e8f">56666e8f</a> -                 continue</div>
                            if patchPoly.intersects(imagePoly): # "intersects" also covers "contains" or "is contained by"
                                self.log.info("Selecting calexp %s" % dataRef.dataId)
                                dataRefList.append(dataRef)
                                exposureInfoList.append(BaseExposureInfo(dataRef.dataId, imageCorners))
                
                        return pipeBase.Struct(
                            dataRefList = dataRefList if makeDataRefList else None,
                            exposureInfoList = exposureInfoList,
                        )
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="a55e28a9"/></a>a55e28a9</h3>

<pre>
commit a55e28a9cdfa2163b60c6b46935fa5bb86f65781
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 20 17:46:33 2013 +0900

    Extensive refactoring of coadd tasks (#2590)
    
    Long methods were divided into smaller parts for ease of subclass+override.
    Common code was consolidated.  Database-specific code was labeled as such.
    Some parts that might be generally useful (coaddHelpers) were pulled out into
    their own package.
    
    Tested bin scripts of coadd.py, makeCoaddTempExp.py and assembleCoadd.py on
    Suprime-Cam data.
</pre>
<h3><a name="56666e8f"/></a>56666e8f</h3>

<pre>
commit 56666e8feba6893ac95fd4982d3e0daf6baf2d34
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Jul 24 03:16:41 2013 +0900

    WcsSelectImagesTask: catch imagePoly is None
    
    The polygon returned from lsst.geom.convexHull may be None if
    the inputs are not suitable for generating a polygon (e.g., they are
    all the same point).  This can happen if the Wcs is not good.
</pre>
<h3><a name="5d07b4d4"/></a>5d07b4d4</h3>

<pre>
commit 5d07b4d43fd99180eccf5ebbcdb733a1eeee1201
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Jul 15 17:48:17 2013 -0400

    WcsSelectImagesTask: use polygons for more precise selection (#2944)
    
    We use lsst.geom.SphericalConvexPolygon to determine overlap between a
    patch and images.  This is much more precise than using bounding boxes,
    which means that we don't waste time reading images that don't overlap
    the patch of interest.
    
    Also added test of WcsSelectImagesTask and the use of its interface
    in CoaddBaseTask.selectExposures.
</pre>
<h3><a name="c17d6f54"/></a>c17d6f54</h3>

<pre>
commit c17d6f54033fd1562e8dee7faf6a3ba30ffd3833
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 1 14:13:54 2013 +0900

    Fix to catch specific exceptions.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="94d2ee8c"/></a>94d2ee8c</h3>

<pre>
commit 94d2ee8cc7fd65289e925e309e069a192b4ddbbf
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Jul 24 15:38:22 2014 -0600

    Adapt to changes in exception Python bindings (DM-827)
</pre>
<h3><a name="5aa5229d"/></a>5aa5229d</h3>

<pre>
commit 5aa5229dea64cf7bc4bc914b5afd2055909c80ac
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Feb 20 17:23:51 2014 -0800

    Fix a doc string
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/coaddBase.py"/></a>python/lsst/pipe/tasks/coaddBase.py
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#c50f9ade">c50f9ade</a> - #!/usr/bin/env python</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#c87f6fe5">c87f6fe5</a> + from __future__ import division, absolute_import</div>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010, 2011, 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#c50f9ade">c50f9ade</a> - import math</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#400f3a8b">400f3a8b</a> - import argparse</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#c50f9ade">c50f9ade</a> - </div>
                import lsst.pex.exceptions as pexExceptions
                import lsst.pex.config as pexConfig
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#c50f9ade">c50f9ade</a> - import lsst.afw.detection as afwDetection</div>
                import lsst.afw.geom as afwGeom
                import lsst.afw.image as afwImage
                import lsst.pipe.base as pipeBase
                import lsst.meas.algorithms as measAlg
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#c17d6f54">c17d6f54</a> - from lsst.afw.fits.fitsLib import FitsError</div>
              ?                   --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#94d2ee8c">94d2ee8c</a> + from lsst.afw.fits import FitsError</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#c066caa3">c066caa3</a> + from lsst.coadd.utils import CoaddDataIdContainer</div>
                from .selectImages import WcsSelectImagesTask, SelectStruct
                from .coaddInputRecorder import CoaddInputRecorderTask
                
                try:
                    from lsst.meas.mosaic import applyMosaicResults
                except ImportError:
                    applyMosaicResults = None
                
                __all__ = ["CoaddBaseTask", "getSkyInfo"]
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#3e137717">3e137717</a> - FwhmPerSigma = 2 * math.sqrt(2 * math.log(2))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#c50f9ade">c50f9ade</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#09d08720">09d08720</a> - class DoubleGaussianPsfConfig(pexConfig.Config):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#09d08720">09d08720</a> -     """Configuration for DoubleGaussian model Psf"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#7c6dc466">7c6dc466</a> -     fwhm = pexConfig.Field(dtype=float, doc="FWHM of core (arcseconds)",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#7c6dc466">7c6dc466</a> -                            default=1.0, check=lambda x: x is None or x > 0.0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
51   <a href="#09d08720">09d08720</a> -     sizeFactor = pexConfig.Field(dtype=float, doc="Multiplier of fwhm for kernel size", default=3.0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#09d08720">09d08720</a> -                                  check=lambda x: x > 0.0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#09d08720">09d08720</a> -     wingFwhmFactor = pexConfig.Field(dtype=float, doc="Multiplier of fwhm for wing fwhm", default=2.5,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#09d08720">09d08720</a> -                                      check=lambda x: x > 0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#09d08720">09d08720</a> -     wingAmplitude = pexConfig.Field(dtype=float, doc="Relative amplitude of wing", default=0.1,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#09d08720">09d08720</a> -                                     check=lambda x: x >= 0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#09d08720">09d08720</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#4192696c">4192696c</a> -     def apply(self, wcs):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#4192696c">4192696c</a> -         """Construct a model PSF</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#4192696c">4192696c</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#4192696c">4192696c</a> -         The model PSF is a double Gaussian with core self.fwhm</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#4192696c">4192696c</a> -         and wings of self.wingAmplitude relative to the core</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#4192696c">4192696c</a> -         and width self.wingFwhmFactor relative to self.fwhm.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#4192696c">4192696c</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#4192696c">4192696c</a> -         @param wcs: Wcs of the image (for pixel scale)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#4192696c">4192696c</a> -         @return model PSF or None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#4192696c">4192696c</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#4192696c">4192696c</a> -         fwhmPixels = self.fwhm / wcs.pixelScale().asArcseconds()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#4192696c">4192696c</a> -         kernelDim = int(self.sizeFactor * fwhmPixels + 0.5)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#4192696c">4192696c</a> -         self.log.logdebug("Create double Gaussian PSF model with core fwhm %0.1f pixels and size %dx%d" %</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#4192696c">4192696c</a> -                           (fwhmPixels, kernelDim, kernelDim))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#4192696c">4192696c</a> -         coreSigma = fwhmPixels / FwhmPerSigma</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#e575a2b0">e575a2b0</a> -         return measAlg.DoubleGaussianPsf(kernelDim, kernelDim, coreSigma,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#e575a2b0">e575a2b0</a> -                                          coreSigma * self.wingFwhmFactor, self.wingAmplitude)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#4192696c">4192696c</a> - </div>
                class CoaddBaseConfig(pexConfig.Config):
                    """Config for CoaddBaseTask
                    """
                    coaddName = pexConfig.Field(
                        doc = "Coadd name: typically one of deep or goodSeeing.",
                        dtype = str,
                        default = "deep",
                    )
                    select = pexConfig.ConfigurableField(
                        doc = "Image selection subtask.",
                        target = WcsSelectImagesTask,
                    )
                    badMaskPlanes = pexConfig.ListField(
                        dtype = str,
                        doc = "Mask planes that, if set, the associated pixel should not be included in the coaddTempExp.",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#8c76c6d8">8c76c6d8</a> -         default = ("NO_DATA",),</div>
              ?                     ^^^ ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#64d30b8a">64d30b8a</a> +         default = ("EDGE",),</div>
              ?                     ^ ^^
                    )
                    inputRecorder = pexConfig.ConfigurableField(
                        doc = "Subtask that helps fill CoaddInputs catalogs added to the final Exposure",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#f19cb686">f19cb686</a> -         target = CoaddInputRecorderTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#58f5f207">58f5f207</a> +         target = CoaddInputRecorderTask,</div>
              ?                                        +
                    )
                    doPsfMatch = pexConfig.Field(dtype=bool, doc="Match to modelPsf?", default=False)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#4192696c">4192696c</a> -     modelPsf = pexConfig.ConfigField(dtype=DoubleGaussianPsfConfig, doc="Model Psf specification")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#8a8ae718">8a8ae718</a> +     modelPsf = measAlg.GaussianPsfFactory.makeField(doc = "Model Psf factory")</div>
                    doApplyUberCal = pexConfig.Field(
                        dtype = bool,
                        doc = "Apply meas_mosaic ubercal results to input calexps?",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#8792006c">8792006c</a> -         default = True</div>
              ?                   ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#58f5f207">58f5f207</a> +         default = False,</div>
              ?                   ^^^^ +
                    )
                
                class CoaddTaskRunner(pipeBase.TaskRunner):
                    @staticmethod
                    def getTargetList(parsedCmd, **kwargs):
                        return pipeBase.TaskRunner.getTargetList(parsedCmd, selectDataList=parsedCmd.selectId.dataList,
                                                                 **kwargs)
                
                class CoaddBaseTask(pipeBase.CmdLineTask):
                    """Base class for coaddition.
                    
                    Subclasses must specify _DefaultName
                    """
                    ConfigClass = CoaddBaseConfig
                    RunnerClass = CoaddTaskRunner
                    
                    def __init__(self, *args, **kwargs):
                        pipeBase.Task.__init__(self, *args, **kwargs)
                        self.makeSubtask("select")
                        self.makeSubtask("inputRecorder")
                
                    def selectExposures(self, patchRef, skyInfo=None, selectDataList=[]):
                        """Select exposures to coadd
                        
                        @param patchRef: data reference for sky map patch. Must include keys "tract", "patch",
                            plus the camera-specific filter key (e.g. "filter" or "band")
                        @param[in] skyInfo: geometry for the patch; output from getSkyInfo
                        @return a list of science exposures to coadd, as butler data references
                        """
                        if skyInfo is None:
                            skyInfo = self.getSkyInfo(patchRef)
                        cornerPosList = afwGeom.Box2D(skyInfo.bbox).getCorners()
                        coordList = [skyInfo.wcs.pixelToSky(pos) for pos in cornerPosList]
                        return self.select.runDataRef(patchRef, coordList, selectDataList=selectDataList).dataRefList
                    
                    def getSkyInfo(self, patchRef):
                        """Return SkyMap, tract and patch
                
                        @param patchRef: data reference for sky map. Must include keys "tract" and "patch"
                        
                        @return pipe_base Struct containing:
                        - skyMap: sky map
                        - tractInfo: information for chosen tract of sky map
                        - patchInfo: information about chosen patch of tract
                        - wcs: WCS of tract
                        - bbox: outer bbox of patch, as an afwGeom Box2I
                        """
                        return getSkyInfo(coaddName=self.config.coaddName, patchRef=patchRef)
                
                    def getCalExp(self, dataRef, bgSubtracted):
                        """Return one "calexp" calibrated exposure
                
                        @param dataRef: a sensor-level data reference
                        @param bgSubtracted: return calexp with background subtracted? If False
                            get the calexp's background background model and add it to the calexp.
                        @return calibrated exposure
                
                        If config.doApplyUberCal, meas_mosaic calibrations will be applied to
                        the returned exposure using applyMosaicResults.
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#20333c64">20333c64</a> -         exposure = dataRef.get("calexp", immediate=True)            </div>
              ?                                                         ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#a55e28a9">a55e28a9</a> +         exposure = dataRef.get("calexp", immediate=True)</div>
                        if not bgSubtracted:
                            background = dataRef.get("calexpBackground", immediate=True)
                            mi = exposure.getMaskedImage()
                            mi += background.getImage()
                            del mi
                        if not self.config.doApplyUberCal:
                            return exposure
                        if applyMosaicResults is None:
                            raise RuntimeError(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#8792006c">8792006c</a> -                 ("Cannot use improved calibrations for %s because meas_mosaic could not be imported; "</div>
              ?                 -                                                                                  ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#2e0210af">2e0210af</a> +                 "Cannot use improved calibrations for %s because meas_mosaic could not be imported."</div>
              ?                                                                                                   ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#8792006c">8792006c</a> -                  "either run meas_mosaic or set doApplyUberCal = False")</div>
                                % dataRef.dataId
                                )
                        else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#8792006c">8792006c</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#8792006c">8792006c</a> -                 applyMosaicResults(dataRef, calexp=exposure)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#0adef9d4">0adef9d4</a> +             applyMosaicResults(dataRef, calexp=exposure)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#8792006c">8792006c</a> -             except Exception as err:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#8792006c">8792006c</a> -                 raise RuntimeError(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#8792006c">8792006c</a> -                     ("Cannot use improved calibrations for %s (%s); "</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#8792006c">8792006c</a> -                      "either run meas_mosaic or set doApplyUberCal = False")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#8792006c">8792006c</a> -                     % (dataRef.dataId, err)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#8792006c">8792006c</a> -                     )</div>
                        return exposure
                
                    def getCoaddDatasetName(self):
                        return self.config.coaddName + "Coadd"
                
                    def getTempExpDatasetName(self):
                        return self.config.coaddName + "Coadd_tempExp"
                
                    @classmethod
                    def _makeArgumentParser(cls):
                        """Create an argument parser
                        """
                        parser = pipeBase.ArgumentParser(name=cls._DefaultName)
                        parser.add_id_argument("--id", "deepCoadd", help="data ID, e.g. --id tract=12345 patch=1,2",
                                               ContainerClass=CoaddDataIdContainer)
                        parser.add_id_argument("--selectId", "calexp", help="data ID, e.g. --selectId visit=6789 ccd=0..9",
                                               ContainerClass=SelectDataIdContainer)
                        return parser
                
                    def _getConfigName(self):
                        """Return the name of the config dataset
                        """
                        return "%s_%s_config" % (self.config.coaddName, self._DefaultName)
                    
                    def _getMetadataName(self):
                        """Return the name of the metadata dataset
                        """
                        return "%s_%s_metadata" % (self.config.coaddName, self._DefaultName)
                
                    def getBadPixelMask(self):
                        """Convenience method to provide the bitmask from the mask plane names"""
                        return afwImage.MaskU.getPlaneBitMask(self.config.badMaskPlanes)
                
                    def writeCoaddOutput(self, dataRef, obj, suffix=None):
                        """Write a coadd product through the butler
                
                        @param dataRef: data reference for coadd
                        @param obj: coadd product to write
                        @param suffix: suffix to apply to coadd dataset name
                        """
                        objName = self.getCoaddDatasetName()
                        if suffix is not None:
                            objName += "_" + suffix
                        self.log.info("Persisting %s" % objName)
                        dataRef.put(obj, objName)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#b847d5b6">b847d5b6</a> - class CoaddDataIdContainer(pipeBase.DataIdContainer):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#b847d5b6">b847d5b6</a> -     """A version of lsst.pipe.base.DataIdContainer specialized for coaddition.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#c50f9ade">c50f9ade</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#c50f9ade">c50f9ade</a> -     Required because butler.subset does not support patch and tract</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#c50f9ade">c50f9ade</a> -     """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#0c23c6ae">0c23c6ae</a> -     def getSkymap(self, namespace, datasetType):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#0c23c6ae">0c23c6ae</a> -         """Only retrieve skymap if required"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#0c23c6ae">0c23c6ae</a> -         if not hasattr(self, "_skymap"):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#0c23c6ae">0c23c6ae</a> -             self._skymap = namespace.butler.get(datasetType + "_skyMap")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
241  <a href="#0c23c6ae">0c23c6ae</a> -         return self._skymap</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#0c23c6ae">0c23c6ae</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#c00b7bd9">c00b7bd9</a> -     def makeDataRefList(self, namespace):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#b847d5b6">b847d5b6</a> -         """Make self.refList from self.idList</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#c50f9ade">c50f9ade</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#c50f9ade">c50f9ade</a> -         datasetType = namespace.config.coaddName + "Coadd"</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#b847d5b6">b847d5b6</a> -         validKeys = namespace.butler.getKeys(datasetType=datasetType, level=self.level)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#c50f9ade">c50f9ade</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#b847d5b6">b847d5b6</a> -         for dataId in self.idList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#c50f9ade">c50f9ade</a> -             for key in validKeys:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#0c23c6ae">0c23c6ae</a> -                 if key in ("tract", "patch"):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#0c23c6ae">0c23c6ae</a> -                     # Will deal with these explicitly</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
253  <a href="#0c23c6ae">0c23c6ae</a> -                     continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#c50f9ade">c50f9ade</a> -                 if key not in dataId:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#400f3a8b">400f3a8b</a> -                     raise argparse.ArgumentError(None, "--id must include " + key)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#0c23c6ae">0c23c6ae</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#0c23c6ae">0c23c6ae</a> -             # tract and patch are required; iterate over them if not provided</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#0c23c6ae">0c23c6ae</a> -             if not "tract" in dataId:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#0c23c6ae">0c23c6ae</a> -                 if "patch" in dataId:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#0c23c6ae">0c23c6ae</a> -                     raise RuntimeError("'patch' cannot be specified without 'tract'")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#0c23c6ae">0c23c6ae</a> -                 addList = [dict(tract=tract.getId(), patch="%d,%d" % patch.getIndex(), **dataId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#0c23c6ae">0c23c6ae</a> -                            for tract in self.getSkymap(namespace, datasetType) for patch in tract]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#0c23c6ae">0c23c6ae</a> -             elif not "patch" in dataId:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#0c23c6ae">0c23c6ae</a> -                 tract = self.getSkymap(namespace, datasetType)[dataId["tract"]]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#0c23c6ae">0c23c6ae</a> -                 addList = [dict(patch="%d,%d" % patch.getIndex(), **dataId) for patch in tract]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#0c23c6ae">0c23c6ae</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#0c23c6ae">0c23c6ae</a> -                 addList = [dataId]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#0c23c6ae">0c23c6ae</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#0c23c6ae">0c23c6ae</a> -             self.refList += [namespace.butler.dataRef(datasetType=datasetType, dataId=addId)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#0c23c6ae">0c23c6ae</a> -                              for addId in addList]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#1ac80a12">1ac80a12</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#1ab95d8f">1ab95d8f</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#1ab95d8f">1ab95d8f</a> - class ExistingCoaddDataIdContainer(CoaddDataIdContainer):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#1ab95d8f">1ab95d8f</a> -     """A version of CoaddDataIdContainer that only produces references that exist"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#1ab95d8f">1ab95d8f</a> -     def makeDataRefList(self, namespace):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#1ab95d8f">1ab95d8f</a> -         super(ExistingCoaddDataIdContainer, self).makeDataRefList(namespace)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#1ab95d8f">1ab95d8f</a> -         self.refList = [ref for ref in self.refList if ref.datasetExists()]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#1ab95d8f">1ab95d8f</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#1ab95d8f">1ab95d8f</a> - </div>
                class SelectDataIdContainer(pipeBase.DataIdContainer):
                    """A dataId container for inputs to be selected.
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#1ac80a12">1ac80a12</a> -     We will read the header (including the size and Wcs) for all specified</div>
              ?     ^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#e2e77eef">e2e77eef</a> +     Read the header (including the size and Wcs) for all specified</div>
              ?     ^
                    inputs and pass those along, ultimately for the SelectImagesTask.
                    This is most useful when used with multiprocessing, as input headers are
                    only read once.
                    """
                    def makeDataRefList(self, namespace):
                        """Add a dataList containing useful information for selecting images"""
                        super(SelectDataIdContainer, self).makeDataRefList(namespace)
                        self.dataList = []
                        for ref in self.refList:
                            try:
                                md = ref.get("calexp_md", immediate=True)
                                wcs = afwImage.makeWcs(md)
                                data = SelectStruct(dataRef=ref, wcs=wcs, dims=(md.get("NAXIS1"), md.get("NAXIS2")))
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#94d2ee8c">94d2ee8c</a> +             except FitsError as e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#c17d6f54">c17d6f54</a> -             except pexExceptions.LsstCppException, e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
298  <a href="#1640332e">1640332e</a> -                 if not isinstance(e.message, FitsError): # Unable to open file</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#c17d6f54">c17d6f54</a> -                     raise</div>
                                namespace.log.warn("Unable to construct Wcs from %s" % (ref.dataId))
                                continue
                            self.dataList.append(data)
                
                def getSkyInfo(coaddName, patchRef):
                    """Return SkyMap, tract and patch
                
                    @param coaddName: coadd name; typically one of deep or goodSeeing
                    @param patchRef: data reference for sky map. Must include keys "tract" and "patch"
                    
                    @return pipe_base Struct containing:
                    - skyMap: sky map
                    - tractInfo: information for chosen tract of sky map
                    - patchInfo: information about chosen patch of tract
                    - wcs: WCS of tract
                    - bbox: outer bbox of patch, as an afwGeom Box2I
                    """
                    skyMap = patchRef.get(coaddName + "Coadd_skyMap")
                    tractId = patchRef.dataId["tract"]
                    tractInfo = skyMap[tractId]
                
                    # patch format is "xIndex,yIndex"
                    patchIndex = tuple(int(i) for i in patchRef.dataId["patch"].split(","))
                    patchInfo = tractInfo.getPatchInfo(patchIndex)
                    
                    return pipeBase.Struct(
                        skyMap = skyMap,
                        tractInfo = tractInfo,
                        patchInfo = patchInfo,
                        wcs = tractInfo.getWcs(),
                        bbox = patchInfo.getOuterBBox(),
                    )
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="0c23c6ae"/></a>0c23c6ae</h3>

<pre>
commit 0c23c6ae76bf2cea52f9484938e6da7de58313e4
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Jun 25 15:42:44 2013 -0400

    coaddBase: allow iteration over unspecified tract,patch
    
    CoaddDataIdContainer (which produces dataRef for patches) has
    required tract and patch be specified explicitly.  Instead,
    generate dataRef for all tract,patch not specified explicitly,
    allowing iteration over these.
</pre>
<h3><a name="400f3a8b"/></a>400f3a8b</h3>

<pre>
commit 400f3a8b3fb3f8043e43ff3567112c0cfa6cc98a
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Mar 5 15:51:36 2013 -0500

    Can't use self.error when self isn't an ArgumentParser; throw an exception instead.
</pre>
<h3><a name="c50f9ade"/></a>c50f9ade</h3>

<pre>
commit c50f9adeb2f59f7f7150c5812c53215c1c096ff8
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Oct 1 15:21:31 2012 -0500

    Refactor coaddition to move common code to a pair of base classes
</pre>
<h3><a name="4192696c"/></a>4192696c</h3>

<pre>
commit 4192696c95be5ef4067836bbfe1f8e89cc54a4a7
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat Mar 30 14:53:40 2013 -0400

    Move PSF-matching config options into CoaddBase.
    
    AssembleCoadd will need access to these options so it can install the
    correct PSF into the final Exposure.
    
    Also moved the CoaddBase.makeModelPsf function to an apply() method
    on the config itself; in the future we'll probably want to make a registry for
    model PSFs, and this is a step towards that (#2781).
</pre>
<h3><a name="1ab95d8f"/></a>1ab95d8f</h3>

<pre>
commit 1ab95d8fd0aadf5be3349a901392b1ac4d4d3ec6
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue May 21 05:57:11 2013 +0900

    only processCoadd/forcedPhotCoadd on existing data
    
    Added an ExistingCoaddDataIdContainer which tosses data references
    that don't exist.  Using this in ProcessCoaddTask and ForcedPhotCoaddTask
    means we don't get unnecessary backtraces when we know the data doesn't
    exist.
</pre>
<h3><a name="1ac80a12"/></a>1ac80a12</h3>

<pre>
commit 1ac80a1288f380380fc3f9ebf33d072f73fcd701
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Feb 21 22:55:46 2013 +0900

    Add task to select images from command-line, with associated plumbing (#2674).
    
    WcsSelectImagesTask selects images by comparing their Wcs with the provided
    patch coordinates.  This replaces BadSelectImagesTask as the default, as it's
    much more useful.
    
    Wcses are read at parse-time, so that when multiprocessing they are only read
    once.  They are passed to the appropriate coadd Task, and then into the
    WcsSelectImagesTask.  Existing SelectImagesTasks should not need to be updated,
    since they do not implement the method whose signature has changed.  The
    behaviour of the BaseSelectImagesTask when data identifiers are specified on
    the command-line is to further restrict whatever the (presumably)
    database-based SelectImagesTask returns, giving the user a bit more control.
    
    Removed database-specific elements from BaseExposureInfo (assuming an
    implementation is not appropriate for a 'Base' class; the _ind and _nextInd
    members are for tracking values in a list of columns from a database query,
    and getColumnNames() is clearly database-specific and unused in pipe_tasks).
</pre>
<h3><a name="b847d5b6"/></a>b847d5b6</h3>

<pre>
commit b847d5b6422999a3f10cb1eb4b5a0ae33f2c0a76
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Feb 18 23:14:57 2013 +0900

    Convert CmdLineTasks to #2144 (multiple identifier arguments).
</pre>
<h3><a name="c17d6f54"/></a>c17d6f54</h3>

<pre>
commit c17d6f54033fd1562e8dee7faf6a3ba30ffd3833
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 1 14:13:54 2013 +0900

    Fix to catch specific exceptions.
</pre>
<h3><a name="c00b7bd9"/></a>c00b7bd9</h3>

<pre>
commit c00b7bd9946044bcfea098251f90ce27b485aad9
Merge: 0cd2da5 a55e28a
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Feb 25 21:13:47 2013 +0900

    Merge remote-tracking branch 'lsst/tickets/2590' into stage-ncsa-3
    
    Refactor coadd Tasks
    
    Conflicts:
    	python/lsst/pipe/tasks/coaddBase.py
</pre>
<h3><a name="7c6dc466"/></a>7c6dc466</h3>

<pre>
commit 7c6dc4660b2083550121b50dfb8684cb26e24d7a
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 29 12:54:21 2013 -0400

    Clean up refactoring of model PSF.
    
    Having an entry in the config be None is not a clear way of turning off
    PSF-matching, so added an explicit switch.
    Removed all mention of desiredFwhm.
</pre>
<h3><a name="f19cb686"/></a>f19cb686</h3>

<pre>
commit f19cb68618003f45c2559ee4832faec713ab7a2f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Mar 29 17:42:58 2013 -0400

    Rewrite coadd tasks to use CoaddInputRecorderTask.
</pre>
<h3><a name="20333c64"/></a>20333c64</h3>

<pre>
commit 20333c64c8a02a78d43a419f317b0663b21086c3
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Feb 27 16:42:31 2013 +0900

    Apply meas_mosaic results to calexp to update photometric, astrometric calibration before making coadds.
</pre>
<h3><a name="e575a2b0"/></a>e575a2b0</h3>

<pre>
commit e575a2b0190b2837fd40593d7fe4be583e6dad6c
Merge: 267cbcb 3bde86d
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Mon Apr 1 12:24:09 2013 -0400

    Merge branch 'tickets/2747' into next
    
    Conflicts:
    	python/lsst/pipe/tasks/coaddBase.py
    	python/lsst/pipe/tasks/warpAndPsfMatch.py
</pre>
<h3><a name="1640332e"/></a>1640332e</h3>

<pre>
commit 1640332eee6769f91a7114ab5e60ec733afa8c6d
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Apr 19 12:19:25 2013 -0400

    coaddBase: fix check for FitsError
    
    Wasn't checking the correct object (of COURSE 'e' isn't a FitsError: we
    caught it as an LsstCppException).
</pre>
<h3><a name="8792006c"/></a>8792006c</h3>

<pre>
commit 8792006c2b7a80a638dce3d1eeb7cf0d36c8184b
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Apr 10 14:22:45 2013 -0400

    Use meas_mosaic outputs in coadds by default, improve error messages.
</pre>
<h3><a name="09d08720"/></a>09d08720</h3>

<pre>
commit 09d08720fc56a566a128fb06dab9866f05c7a5a3
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Mar 22 14:00:42 2013 -0400

    Make model Psf more configurable.
    
    The model Psf is now specified by a Config, rather than a list of
    parameters.  This makes it easier to override.
</pre>
<h3><a name="3e137717"/></a>3e137717</h3>

<pre>
commit 3e137717e46b83936867eab5a1926c0bbea9c313
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Oct 3 15:18:06 2012 -0700

    Response to review, including experimental mixin classes
</pre>
<h3><a name="8c76c6d8"/></a>8c76c6d8</h3>

<pre>
commit 8c76c6d86ebd0f5649adf222130842dbfb21be57
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 23 15:25:59 2014 -0400

    Adapt to new mask bit NO_DATA replacing EDGE (DM-669)
    
    NO_DATA means a warp/coadd pixel doesn't map to a CCD.
    EDGE means a pixel is near the edge and couldn't be searched
    for sources.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="c87f6fe5"/></a>c87f6fe5</h3>

<pre>
commit c87f6fe514160e604e1c64c97b4160bfa743b11c
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 29 11:21:47 2014 -0700

    Cleaned up the code based on final decisions on units (pixels) and FWHM vs sigma (FWHM).
</pre>
<h3><a name="8a8ae718"/></a>8a8ae718</h3>

<pre>
commit 8a8ae7187b479588318764f61783ff1b0339ca6b
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Feb 24 07:40:33 2014 -0800

    Use the new PSF model registry
</pre>
<h3><a name="e2e77eef"/></a>e2e77eef</h3>

<pre>
commit e2e77eefefd668ad4a9e7145789f9369eaaf0092
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Jul 24 11:27:56 2014 -0700

    Responded to RHL's review of 7/18
    
    Removed many doxygen marker comments.
    Expand the section on custom argument parsers.
</pre>
<h3><a name="2e0210af"/></a>2e0210af</h3>

<pre>
commit 2e0210af7bcd30093e6bdd03c9f34f4dbb9c7ed2
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Feb 27 16:42:31 2013 +0900

    Apply meas_mosaic results to calexp before making coadds.
</pre>
<h3><a name="a55e28a9"/></a>a55e28a9</h3>

<pre>
commit a55e28a9cdfa2163b60c6b46935fa5bb86f65781
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 20 17:46:33 2013 +0900

    Extensive refactoring of coadd tasks (#2590)
    
    Long methods were divided into smaller parts for ease of subclass+override.
    Common code was consolidated.  Database-specific code was labeled as such.
    Some parts that might be generally useful (coaddHelpers) were pulled out into
    their own package.
    
    Tested bin scripts of coadd.py, makeCoaddTempExp.py and assembleCoadd.py on
    Suprime-Cam data.
</pre>
<h3><a name="64d30b8a"/></a>64d30b8a</h3>

<pre>
commit 64d30b8a6a2cf9cdcffa3d5d0e5e87aeb0c8b67b
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Oct 3 17:56:31 2012 -0500

    Finish refactoring to use mixin classes
</pre>
<h3><a name="0adef9d4"/></a>0adef9d4</h3>

<pre>
commit 0adef9d49c0c4c3ea43b1fd65630cbbea8b91ccd
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Apr 5 12:25:40 2013 -0400

    Add config option to decide whether to apply meas_mosaic results.
    
    If config says we should use meas_mosaic, failure is now a fatal error,
    not a warning.
</pre>
<h3><a name="94d2ee8c"/></a>94d2ee8c</h3>

<pre>
commit 94d2ee8cc7fd65289e925e309e069a192b4ddbbf
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Jul 24 15:38:22 2014 -0600

    Adapt to changes in exception Python bindings (DM-827)
</pre>
<h3><a name="58f5f207"/></a>58f5f207</h3>

<pre>
commit 58f5f207d61b72d4f3a2788072502b84abe087a9
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Feb 20 18:01:32 2014 -0800

    Use analyticPsfRegistry in some existing code.
</pre>
<h3><a name="c066caa3"/></a>c066caa3</h3>

<pre>
commit c066caa3335c97cc59566fa0cd1c03822a3796ad
Author: pgee <pgee@pgeepc2.gateway.2wire.net>
Date:   Wed Feb 12 11:41:45 2014 -0800

    Changes to move CoaddDataIdContainer to coadd.utils
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/processCcd.py"/></a>python/lsst/pipe/tasks/processCcd.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                from .processImage import ProcessImageTask
                from lsst.ip.isr import IsrTask
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
25   <a href="#08a8ec02">08a8ec02</a> - from lsst.pipe.tasks.calibrate import CalibrateTask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
26   <a href="#08a8ec02">08a8ec02</a> - import lsst.afw.geom as afwGeom</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#08a8ec02">08a8ec02</a> - import lsst.afw.math as afwMath</div>
                import lsst.afw.table as afwTable
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#fb15153f">fb15153f</a> - from .fakes import DummyFakeSourcesTask</div>
                
                class ProcessCcdConfig(ProcessImageTask.ConfigClass):
                    """Config for ProcessCcd"""
                    doIsr = pexConfig.Field(dtype=bool, default=True, doc = "Perform ISR?")
                    isr = pexConfig.ConfigurableField(
                        target = IsrTask,
                        doc = "Instrumental Signature Removal",
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#3ffd87c1">3ffd87c1</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
40   <a href="#08a8ec02">08a8ec02</a> -     doCalibrate = pexConfig.Field(dtype=bool, default=True, doc = "Perform calibration?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
41   <a href="#08a8ec02">08a8ec02</a> -     doWriteCalibrate = pexConfig.Field(dtype=bool, default=True, doc = "Write calibration results?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
42   <a href="#08a8ec02">08a8ec02</a> -     doWriteCalibrateMatches = pexConfig.Field(dtype=bool, default=True,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#08a8ec02">08a8ec02</a> -                                               doc = "Write icSrc to reference matches?")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
44   <a href="#08a8ec02">08a8ec02</a> -     calibrate = pexConfig.ConfigurableField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#08a8ec02">08a8ec02</a> -         target = CalibrateTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#08a8ec02">08a8ec02</a> -         doc = "Calibration (inc. high-threshold detection and measurement)",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#08a8ec02">08a8ec02</a> -     )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#fb15153f">fb15153f</a> -     fakes = pexConfig.ConfigurableField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#fb15153f">fb15153f</a> -         target = DummyFakeSourcesTask,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
50   <a href="#fb15153f">fb15153f</a> -         doc = "Injection of fake sources for test purposes (retarget to enable)"</div>
                    )
                
                class ProcessCcdTask(ProcessImageTask):
                    """Process a CCD
                    
                    Available steps include:
                    - instrument signature removal (ISR)
                    - calibrate
                    - detect sources
                    - measure sources
                    """
                    ConfigClass = ProcessCcdConfig
                    _DefaultName = "processCcd"
                    dataPrefix = ""
                
                    def __init__(self, **kwargs):
                        ProcessImageTask.__init__(self, **kwargs)
                        self.makeSubtask("isr")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#08a8ec02">08a8ec02</a> -         self.makeSubtask("calibrate")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#fb15153f">fb15153f</a> -         self.makeSubtask("fakes")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#08a8ec02">08a8ec02</a> -         # Setup our schema by starting with fields we want to propagate from icSrc.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#08a8ec02">08a8ec02</a> -         calibSchema = self.calibrate.schema</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#08a8ec02">08a8ec02</a> -         self.schemaMapper = afwTable.SchemaMapper(calibSchema, self.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#08a8ec02">08a8ec02</a> -         # Add fields needed to identify stars used in the calibration step</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#08a8ec02">08a8ec02</a> -         self.calibSourceKey = self.schemaMapper.addOutputField(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#08a8ec02">08a8ec02</a> -             afwTable.Field["Flag"]("calib.detected", "Source was detected as an icSrc")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#08a8ec02">08a8ec02</a> -             )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#08a8ec02">08a8ec02</a> -         for key in self.calibrate.getCalibKeys():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#08a8ec02">08a8ec02</a> -             self.schemaMapper.addMapping(key)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#e078d72d">e078d72d</a> -         self.schema = self.schemaMapper.getOutputSchema()</div>
                
                    def makeIdFactory(self, sensorRef):
                        expBits = sensorRef.get("ccdExposureId_bits")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#08a8ec02">08a8ec02</a> -         expId = self.getExpId(sensorRef)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#af675928">af675928</a> +         expId = long(sensorRef.get("ccdExposureId"))</div>
                        return afwTable.IdFactory.makeSource(expId, 64 - expBits)        
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#0494ead9">0494ead9</a> -     def getExpId(self, dataRef):</div>
              ?                        ^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
59   <a href="#671f4e40">671f4e40</a> +     def getExposureId(self, sensorRef):</div>
              ?               +++++         ^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#08a8ec02">08a8ec02</a> -         return long(dataRef.get("ccdExposureId", immediate=True))</div>
              ?                     ^^^^                       ----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
60   <a href="#671f4e40">671f4e40</a> +         return long(sensorRef.get("ccdExposureId"))</div>
              ?                     ^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#08a8ec02">08a8ec02</a> -     def getAstrometer(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#08a8ec02">08a8ec02</a> -         return self.calibrate.astrometry.astrometer</div>
                
                    @pipeBase.timeMethod
                    def run(self, sensorRef):
                        """Process one CCD
                        
                        @param sensorRef: sensor-level butler data reference
                        @return pipe_base Struct containing these fields:
                        - postIsrExposure: exposure after ISR performed if calib.doIsr or config.doCalibrate, else None
                        - exposure: calibrated exposure (calexp): as computed if config.doCalibrate,
                            else as upersisted and updated if config.doDetection, else None
                        - calib: object returned by calibration process if config.doCalibrate, else None
                        - sources: detected source if config.doPhotometry, else None
                        """
                        self.log.info("Processing %s" % (sensorRef.dataId))
                
                        # initialize outputs
                        postIsrExposure = None
                        
                        if self.config.doIsr:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#e0204f92">e0204f92</a> -             postIsrExposure = self.isr.run(sensorRef).exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#cf1ec40f">cf1ec40f</a> +             postIsrExposure = self.isr.runDataRef(sensorRef).exposure</div>
              ?                                           +++++++
                        elif self.config.doCalibrate:
                            postIsrExposure = sensorRef.get(self.dataPrefix + "postISRCCD")
                        
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#08a8ec02">08a8ec02</a> -         # initialize outputs</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#08a8ec02">08a8ec02</a> -         calib = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#08a8ec02">08a8ec02</a> -         backgrounds = afwMath.BackgroundList()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#08a8ec02">08a8ec02</a> -         if self.config.doCalibrate:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#08a8ec02">08a8ec02</a> -             idFactory = self.makeIdFactory(sensorRef)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#08a8ec02">08a8ec02</a> -             calib = self.calibrate.run(postIsrExposure, idFactory=idFactory, expId=self.getExpId(sensorRef))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#08a8ec02">08a8ec02</a> -             calExposure = calib.exposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#08a8ec02">08a8ec02</a> -             if self.config.doWriteCalibrate:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#08a8ec02">08a8ec02</a> -                 sensorRef.put(calib.sources, self.dataPrefix + "icSrc")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#08a8ec02">08a8ec02</a> -                 if calib.matches is not None and self.config.doWriteCalibrateMatches:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#08a8ec02">08a8ec02</a> -                     normalizedMatches = afwTable.packMatches(calib.matches)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#08a8ec02">08a8ec02</a> -                     normalizedMatches.table.setMetadata(calib.matchMeta)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#08a8ec02">08a8ec02</a> -                     sensorRef.put(normalizedMatches, self.dataPrefix + "icMatch")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#08a8ec02">08a8ec02</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#08a8ec02">08a8ec02</a> -                 for bg in calib.backgrounds:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#08a8ec02">08a8ec02</a> -                     backgrounds.append(bg)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#08a8ec02">08a8ec02</a> -             except TypeError:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#08a8ec02">08a8ec02</a> -                 backgrounds.append(calib.backgrounds)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#08a8ec02">08a8ec02</a> -             except AttributeError:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#08a8ec02">08a8ec02</a> -                 self.log.warn("The calibration task did not return any backgrounds. " +</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#08a8ec02">08a8ec02</a> -                     "Any background subtracted in the calibration process cannot be persisted.")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#08a8ec02">08a8ec02</a> -         elif sensorRef.datasetExists("calexp"):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#08a8ec02">08a8ec02</a> -             calExposure = sensorRef.get("calexp", immediate=True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#08a8ec02">08a8ec02</a> -         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#08a8ec02">08a8ec02</a> -             raise RuntimeError("No calibrated exposure available for processing")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#fb15153f">fb15153f</a> -         # add fake sources to exposure (if enabled)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#fb15153f">fb15153f</a> -         self.fakes.run(calExposure, background=backgrounds)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#fb15153f">fb15153f</a> - </div>
                        # delegate most of the work to ProcessImageTask
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#08a8ec02">08a8ec02</a> -         result = self.process(sensorRef, calExposure)</div>
              ?                                          ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#af675928">af675928</a> +         result = self.process(sensorRef, postIsrExposure)</div>
              ?                                          ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#06be1452">06be1452</a> -         # combine the differential background we estimated while detecting the main src catalog</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#06be1452">06be1452</a> -         # with the background estimated in the calibrate step</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#06be1452">06be1452</a> -         for bg in result.backgrounds:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#06be1452">06be1452</a> -             backgrounds.append(bg)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#06be1452">06be1452</a> -         result.backgrounds = backgrounds</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#06be1452">06be1452</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#08a8ec02">08a8ec02</a> -         if self.config.doCalibrate and self.config.doWriteCalibrate:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#08a8ec02">08a8ec02</a> -             # wait until after detection and measurement, since detection sets detected mask bits</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#08a8ec02">08a8ec02</a> -             # and both require a background subtracted exposure;</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#08a8ec02">08a8ec02</a> -             if self.config.persistBackgroundModel:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#08a8ec02">08a8ec02</a> -                 self.writeBackgrounds(sensorRef, backgrounds)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#08a8ec02">08a8ec02</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#08a8ec02">08a8ec02</a> -                 self.restoreBackgrounds(calExposure, backgrounds)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#08a8ec02">08a8ec02</a> -             sensorRef.put(calExposure, self.dataPrefix + "calexp")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#08a8ec02">08a8ec02</a> -         if calib is not None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#56769da7">56769da7</a> -             self.propagateCalibFlags(calib.sources, result.sources)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#08a8ec02">08a8ec02</a> -         return pipeBase.Struct(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#08a8ec02">08a8ec02</a> -             postIsrExposure = postIsrExposure,</div>
              ?         ^^^^                                 -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#af675928">af675928</a> +         result.postIsrExposure = postIsrExposure</div>
              ?         ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#08a8ec02">08a8ec02</a> -             calib = calib,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#08a8ec02">08a8ec02</a> -             **result.getDict()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#08a8ec02">08a8ec02</a> -         )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#08a8ec02">08a8ec02</a> -     def propagateCalibFlags(self, icSources, sources, matchRadius=1):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#08a8ec02">08a8ec02</a> -         """Match the icSources and sources, and propagate Interesting Flags (e.g. PSF star) to the sources</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#08a8ec02">08a8ec02</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#56769da7">56769da7</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#56769da7">56769da7</a> -         if icSources is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#56769da7">56769da7</a> -             self.log.warn("Not matching icSource and Source catalogs, because the former is None")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#56769da7">56769da7</a> -             return</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#56769da7">56769da7</a> -         if sources is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#56769da7">56769da7</a> -             self.log.warn("Not matching icSource and Source catalogs, because the latter is None")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#08a8ec02">08a8ec02</a> -             return</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#56769da7">56769da7</a> -         self.log.info("Matching icSource and Source catalogs to propagate flags.")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#56769da7">56769da7</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#08a8ec02">08a8ec02</a> -         closest = False                 # return all matched objects</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#08a8ec02">08a8ec02</a> -         matched = afwTable.matchRaDec(icSources, sources, matchRadius*afwGeom.arcseconds, closest)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#08a8ec02">08a8ec02</a> -         if self.config.doDeblend:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#08a8ec02">08a8ec02</a> -             matched = [m for m in matched if m[1].get("deblend.nchild") == 0] # if deblended, keep children</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#08a8ec02">08a8ec02</a> -         # Because we had to allow multiple matches to handle parents, we now need to</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#08a8ec02">08a8ec02</a> -         # prune to the best matches</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#08a8ec02">08a8ec02</a> -         bestMatches = {}</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#08a8ec02">08a8ec02</a> -         for m0, m1, d in matched:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#08a8ec02">08a8ec02</a> -             id0 = m0.getId()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#08a8ec02">08a8ec02</a> -             if bestMatches.has_key(id0):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#08a8ec02">08a8ec02</a> -                 if d > bestMatches[id0][2]:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#08a8ec02">08a8ec02</a> -                     continue</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#08a8ec02">08a8ec02</a> -             bestMatches[id0] = (m0, m1, d)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#08a8ec02">08a8ec02</a> -         matched = bestMatches.values()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#08a8ec02">08a8ec02</a> -         # Check that we got it right</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#08a8ec02">08a8ec02</a> -         if len(set(m[0].getId() for m in matched)) != len(matched):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#08a8ec02">08a8ec02</a> -             self.log.warn("At least one icSource is matched to more than one Source")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#56769da7">56769da7</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#56769da7">56769da7</a> -         if len(matched) == 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#56769da7">56769da7</a> -             self.log.warn("No matches found between icSource and Source catalogs.")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#56769da7">56769da7</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#08a8ec02">08a8ec02</a> -         # Copy over the desired flags</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#08a8ec02">08a8ec02</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#08a8ec02">08a8ec02</a> -         for ics, s, d in matched:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
218  <a href="#08a8ec02">08a8ec02</a> -             s.setFlag(self.calibSourceKey, True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
219  <a href="#08a8ec02">08a8ec02</a> -             # We don't want to overwrite s's footprint with ics's; DM-407</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#08a8ec02">08a8ec02</a> -             icsFootprint = ics.getFootprint()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#08a8ec02">08a8ec02</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#08a8ec02">08a8ec02</a> -                 ics.setFootprint(s.getFootprint())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#08a8ec02">08a8ec02</a> -                 s.assign(ics, self.schemaMapper)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#08a8ec02">08a8ec02</a> -             finally:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#08a8ec02">08a8ec02</a> -                 ics.setFootprint(icsFootprint)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#08a8ec02">08a8ec02</a> -     def getSchemaCatalogs(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
228  <a href="#08a8ec02">08a8ec02</a> -         """Return a dict of empty catalogs for each catalog dataset produced by this task."""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#08a8ec02">08a8ec02</a> -         d = ProcessImageTask.getSchemaCatalogs(self)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#08a8ec02">08a8ec02</a> -         icSrc = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#08a8ec02">08a8ec02</a> -         icSrc = afwTable.SourceCatalog(self.calibrate.schema)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#08a8ec02">08a8ec02</a> -         icSrc.getTable().setMetadata(self.calibrate.algMetadata)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#08a8ec02">08a8ec02</a> -         d[self.dataPrefix + "icSrc"] = icSrc</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#08a8ec02">08a8ec02</a> -         return d</div>
              ?                ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#af675928">af675928</a> +         return result</div>
              ?                ^^^^^^
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="e078d72d"/></a>e078d72d</h3>

<pre>
commit e078d72d8803fe3286dc1431b27be02bfb01981a
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Nov 12 13:50:56 2014 -0500

    Need to reset ProcessCcdTask's schema to include fields propagated from calibrate
    
    SchemaMapper doesn't modify the output Schema it's given in-place - it makes a
    copy and modifies that.  Because ProcessImageTask was looking at self.schema,
    which did not include the flag fields propagated from output fields, when we were
    setting those we'd be mucking up the data in the next record (and if we ever tried
    to do this on the last record, we'd could get a segfault).
</pre>
<h3><a name="08a8ec02"/></a>08a8ec02</h3>

<pre>
commit 08a8ec029dd52ac55e47b707a6905df061a40506
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:54:36 2014 +0900

    move CalibrateTask from ProcessImageTask into ProcessCcdTask
    
    CalibrateTask seems to have been included in ProcessImageTask before the
    days of CoaddPsf, when we needed to be able to generate a Psf for a coadd
    using the coadd; this is no longer necessary, and its presence in
    ProcessImageTask stands in the way of further refactoring to support the
    plan for coadd multi-band deblending and measurement.
    
    In order to implement matching between the detected sources and the
    reference catalog, I've added an AstrometryTask to ProcessCoaddTask, since
    it can no longer rely on the one in CalibrateTask.  This change does
    change the config hierarchy, and so will break use of processCcd on
    data repositories with existing data (if not using "--clobber-config").
</pre>
<h3><a name="e0204f92"/></a>e0204f92</h3>

<pre>
commit e0204f922656979dd7be323cafbf4de41420c27f
Author: Russell Owen <rowen@uw.edu>
Date:   Wed May 16 15:15:24 2012 -0500

    Rename visitCCD to postISRCCD and visitExposure to postIsrExposure
</pre>
<h3><a name="fb15153f"/></a>fb15153f</h3>

<pre>
commit fb15153f567bb8707223a31b2afa1e7c6afa18d9
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Oct 30 10:17:22 2014 +0900

    Add support for injecting fake sources in processCcd
    
    This commit adds a new subtask interface for adding fake sources
    in fakes.py, and a call to that interface in ProcessCcdTask (which
    defaults to a dummy subtask that does nothing).
    
    Third-party code can not retarget the 'fakes' subtask to add their
    own simulation code into the pipeline.
</pre>
<h3><a name="56769da7"/></a>56769da7</h3>

<pre>
commit 56769da75b2677e3b3e077140f7888d90bd51158
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Nov 12 16:48:46 2014 -0500

    Fix bug preventing icSrc flags from being propagated to src
    
    A relic "sources" variable that was only ever initialized to
    None was being used instead of "result.sources", which actually
    had what we wanted.
    
    Also improved documentation in propagateCalibFlags to help prevent
    this sort of thing from flying by unnoticed in the future.
</pre>
<h3><a name="3ffd87c1"/></a>3ffd87c1</h3>

<pre>
commit 3ffd87c196f8be99a9ee9305ce2f4acc4a084221
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 3 19:19:47 2012 -0500

    Initial implementation. Needs testing.
</pre>
<h3><a name="06be1452"/></a>06be1452</h3>

<pre>
commit 06be14522b403cd8862964a0285bc852249db88f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Nov 11 15:29:50 2014 -0500

    Include differential background from detection phase in persisted backgrounds
</pre>
<h3><a name="0494ead9"/></a>0494ead9</h3>

<pre>
commit 0494ead9c5c4fc97f8f48aa1a138cec9ec552bdf
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Aug 27 09:46:59 2014 -0400

    measurePSF: Allow for option to reserve PSF candidates from fitting for cross-validation
    
    To get a unique random seed for each CCD this required adding expId method for processImage
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="671f4e40"/></a>671f4e40</h3>

<pre>
commit 671f4e407a2db21cb99ef70d743df739a692fa17
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Fri Feb 6 14:12:03 2015 -0800

    modify processCoadd and Ccd to pass the unique exposure Id to the measurement.run()
    
    This is being used to set the noise seed.
</pre>
<h3><a name="cf1ec40f"/></a>cf1ec40f</h3>

<pre>
commit cf1ec40f876098c38b77afc790fa0b2bc8b9177b
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 9 16:46:15 2015 -0500

    processCcd: Reflect ip.isr.IsrTask API change
    IsrTask.runDataRef() takes a ButlerDataRef
</pre>
<h3><a name="af675928"/></a>af675928</h3>

<pre>
commit af6759285e5c8383e74f2e40dcee7d6fbd08b769
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 31 17:11:25 2012 +0900

    refactored processCcd and processCoadd to remove duplicate coadd; now both inherit from processImage
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/pipe/tasks/processImage.py"/></a>python/lsst/pipe/tasks/processImage.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import lsst.pex.config as pexConfig
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#06003ae8">06003ae8</a> + import lsst.pex.exceptions as pexExceptions</div>
                import lsst.pipe.base as pipeBase
                import lsst.daf.base as dafBase
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
27   <a href="#92f25fb2">92f25fb2</a> + import lsst.afw.geom as afwGeom</div>
                import lsst.afw.math as afwMath
                import lsst.afw.table as afwTable
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
28   <a href="#5eb58011">5eb58011</a> - from lsst.meas.algorithms import SourceDetectionTask, SourceMeasurementTask</div>
              ?                                                     -----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
30   <a href="#4f2984d1">4f2984d1</a> + from lsst.meas.algorithms import SourceDetectionTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#db3e8e3f">db3e8e3f</a> + from lsst.meas.base import SingleFrameMeasurementTask</div>
                from lsst.meas.deblender import SourceDeblendTask
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#af675928">af675928</a> + from lsst.ip.isr import IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
34   <a href="#af675928">af675928</a> + from lsst.pipe.tasks.calibrate import CalibrateTask</div>
                
                class ProcessImageConfig(pexConfig.Config):
                    """Config for ProcessImage"""
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#af675928">af675928</a> +     doCalibrate = pexConfig.Field(dtype=bool, default=True, doc = "Perform calibration?")</div>
                    doDetection = pexConfig.Field(dtype=bool, default=True, doc = "Detect sources?")
                    ## NOTE, default this to False until it is fully vetted; #2138
                    doDeblend = pexConfig.Field(dtype=bool, default=False, doc = "Deblend sources?")
                    doMeasurement = pexConfig.Field(dtype=bool, default=True, doc = "Measure sources?")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
43   <a href="#af675928">af675928</a> +     doWriteCalibrate = pexConfig.Field(dtype=bool, default=True, doc = "Write calibration results?")</div>
                    persistBackgroundModel = pexConfig.Field(dtype=bool, default=True, doc = "If True persist background model with background subtracted calexp.  \
                        If False persist calexp with the background included.")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
46   <a href="#af675928">af675928</a> +     doWriteCalibrateMatches = pexConfig.Field(dtype=bool, default=True,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
47   <a href="#af675928">af675928</a> +                                               doc = "Write icSrc to reference matches?")</div>
                    doWriteSources = pexConfig.Field(dtype=bool, default=True, doc = "Write sources?")
                    doWriteSourceMatches = pexConfig.Field(dtype=bool, default=False,
                                                           doc = "Compute and write src to reference matches?")
                    doWriteHeavyFootprintsInSources = pexConfig.Field(dtype=bool, default=False,
                                                                      doc = "Include HeavyFootprint data in source table?")
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#af675928">af675928</a> +     calibrate = pexConfig.ConfigurableField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#af675928">af675928</a> +         target = CalibrateTask,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#af675928">af675928</a> +         doc = "Calibration (inc. high-threshold detection and measurement)",</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#af675928">af675928</a> +     )</div>
                    detection = pexConfig.ConfigurableField(
                        target = SourceDetectionTask,
                        doc = "Low-threshold detection for final measurement",
                    )
                    deblend = pexConfig.ConfigurableField(
                        target = SourceDeblendTask,
                        doc = "Split blended sources into their components",
                    )
                    measurement = pexConfig.ConfigurableField(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#9c9c4d2a">9c9c4d2a</a> -         target = SourceMeasurementTask,</div>
              ?                   ^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#4f2984d1">4f2984d1</a> +         target = SingleFrameMeasurementTask,</div>
              ?                   ^^^^^^ ^^
                        doc = "Final source measurement on low-threshold detections",
                    )
                
                    def validate(self):
                        pexConfig.Config.validate(self)
                        if self.doMeasurement:
                            if not self.doDetection:
                                raise ValueError("Cannot run source measurement without source detection.")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#cb0cca56">cb0cca56</a> -             if "skycoord" not in self.measurement.algorithms.names:</div>
              ?                                                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#02df497d">02df497d</a> +             if ("skycoord" not in self.measurement.algorithms.names</div>
              ?                +
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#02df497d">02df497d</a> +                 and "base_SkyCoord" not in self.measurement.algorithms.names):</div>
                                raise ValueError("If you run source measurement you must let it run the skycoord algorithm.")
                        if self.doDeblend and not self.doDetection:
                            raise ValueError("Cannot run source deblending without source detection.")
                        if self.doWriteHeavyFootprintsInSources and not self.doWriteSources:
                            raise ValueError("Cannot write HeavyFootprints (doWriteHeavyFootprintsInSources) without doWriteSources")
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#0888abcd">0888abcd</a> -     def setDefaults(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#0888abcd">0888abcd</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#0888abcd">0888abcd</a> -         # Stop flux.gaussian recomputing the Gaussian's weights (as shape.sdss already did that)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#0888abcd">0888abcd</a> -         #</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#0888abcd">0888abcd</a> -         try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#0888abcd">0888abcd</a> -             self.measurement.algorithms['flux.gaussian'].fixed = True</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#0888abcd">0888abcd</a> -         except pexConfig.FieldValidationError: # "flux.gaussian" isn't there</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#0888abcd">0888abcd</a> -             pass</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#0888abcd">0888abcd</a> - </div>
                class ProcessImageTask(pipeBase.CmdLineTask):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#08a8ec02">08a8ec02</a> -     """An abstract base class for tasks to do detection, deblending, and measurement</div>
              ?                                         ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#af675928">af675928</a> +     """An abstract base class for tasks do simple calibration, detection, deblending, and measurement</div>
              ?                                           ++++++++++++++++++++
                    on individual images.
                
                    Other command-line Process***Tasks (such as ProcessCcdTask and ProcessCoaddTask) rely on
                    ProcessImageTask for their main algorithmic code, and only need to add pre- and post- processing
                    and serialization.
                
                    Subclasses are responsible for meeting the requirements of CmdLineTask.
                    """
                    ConfigClass = ProcessImageConfig
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#9c9c4d2a">9c9c4d2a</a> - </div>
                    dataPrefix = ""  # Name to prepend to all input and output datasets (e.g. 'goodSeeingCoadd_')
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#08a8ec02">08a8ec02</a> -     def __init__(self, schema=None, **kwargs):</div>
              ?                        -------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#af675928">af675928</a> +     def __init__(self, **kwargs):</div>
                        pipeBase.CmdLineTask.__init__(self, **kwargs)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#ee85f9b2">ee85f9b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#02df497d">02df497d</a> +         self.makeSubtask("calibrate")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#af675928">af675928</a> +         # Setup our schema by starting with fields we want to propagate from icSrc.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#af675928">af675928</a> +         calibSchema = self.calibrate.schema</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#af675928">af675928</a> +         self.schemaMapper = afwTable.SchemaMapper(calibSchema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#af675928">af675928</a> +         self.schemaMapper.addMinimalSchema(afwTable.SourceTable.makeMinimalSchema(), False)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#cb0cca56">cb0cca56</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#cb0cca56">cb0cca56</a> +         # Add fields needed to identify stars used in the calibration step</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#e0116f17">e0116f17</a> +         self.calibSourceKey = self.schemaMapper.addOutputField(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#e0116f17">e0116f17</a> +             afwTable.Field["Flag"]("calib_detected", "Source was detected as an icSrc")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#e0116f17">e0116f17</a> +             )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#ee85f9b2">ee85f9b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#af675928">af675928</a> +         for key in self.calibrate.getCalibKeys():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#af675928">af675928</a> +             self.schemaMapper.addMapping(key)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#af675928">af675928</a> +         self.schema = self.schemaMapper.getOutputSchema()</div>
                        self.algMetadata = dafBase.PropertyList()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#08a8ec02">08a8ec02</a> -         if schema is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#08a8ec02">08a8ec02</a> -             schema = afwTable.SourceTable.makeMinimalSchema()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#08a8ec02">08a8ec02</a> -         self.schema = schema</div>
                        if self.config.doDetection:
                            self.makeSubtask("detection", schema=self.schema)
                        if self.config.doDeblend:
                            self.makeSubtask("deblend", schema=self.schema)
                        if self.config.doMeasurement:
                            self.makeSubtask("measurement", schema=self.schema, algMetadata=self.algMetadata)
                
                    def makeIdFactory(self, sensorRef):
                        raise NotImplementedError()
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#671f4e40">671f4e40</a> +     def getExposureId(self, sensorRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#671f4e40">671f4e40</a> +         raise NotImplementedError()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#08a8ec02">08a8ec02</a> -     def getAstrometer(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#08a8ec02">08a8ec02</a> -         """Return an astrometer for matching sources to the reference catalog"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#08a8ec02">08a8ec02</a> -         raise NotImplementedError("Not implemented in base class")</div>
                
                    @pipeBase.timeMethod
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#08a8ec02">08a8ec02</a> -     def process(self, dataRef, inputExposure, backgrounds=None, enableWriteSources=True):</div>
              ?                                              ------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#cb0cca56">cb0cca56</a> +     def process(self, dataRef, inputExposure, enableWriteSources=True):</div>
                        """Process an Image
                        
                        @param dataRef: data reference that corresponds to the input image
                        @param inputExposure:  exposure to process
                        @param enableWriteSources: if True then writing sources is allowed.
                            Set False if you need to postprocess sources before writing them.
                
                        @return pipe_base Struct containing these fields:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#08a8ec02">08a8ec02</a> -         - exposure: input exposure (as modified in the course of processing)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#af675928">af675928</a> +         - postIsrExposure: exposure after ISR performed if calib.doIsr or config.doCalibrate, else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#af675928">af675928</a> +         - exposure: calibrated exposure (calexp): as computed if config.doCalibrate,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#af675928">af675928</a> +             else as upersisted and updated if config.doDetection, else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#af675928">af675928</a> +         - calib: object returned by calibration process if config.doCalibrate, else None</div>
                        - sources: detected source if config.doPhotometry, else None
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#08a8ec02">08a8ec02</a> -         - matches: matches between detected sources and astrometric reference catalog</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#08a8ec02">08a8ec02</a> -         - matchMeta: metadata for matches</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#08a8ec02">08a8ec02</a> -         - backgrounds: background list (input as modified)</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#08a8ec02">08a8ec02</a> -         if backgrounds is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#af675928">af675928</a> +         idFactory = self.makeIdFactory(dataRef)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#af675928">af675928</a> +         # initialize outputs</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#240e68c6">240e68c6</a> +         calExposure = inputExposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#af675928">af675928</a> +         calib = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#af675928">af675928</a> +         sources = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#08a8ec02">08a8ec02</a> -             backgrounds = afwMath.BackgroundList()</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#631d2f66">631d2f66</a> +         backgrounds = afwMath.BackgroundList()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#af675928">af675928</a> +         if self.config.doCalibrate:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#af675928">af675928</a> +             calib = self.calibrate.run(inputExposure, idFactory=idFactory)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#af675928">af675928</a> +             calExposure = calib.exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#af675928">af675928</a> +             if self.config.doWriteCalibrate:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#af675928">af675928</a> +                 dataRef.put(calib.sources, self.dataPrefix + "icSrc")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#af675928">af675928</a> +                 if calib.matches is not None and self.config.doWriteCalibrateMatches:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#af675928">af675928</a> +                     normalizedMatches = afwTable.packMatches(calib.matches)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#af675928">af675928</a> +                     normalizedMatches.table.setMetadata(calib.matchMeta)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#af675928">af675928</a> +                     dataRef.put(normalizedMatches, self.dataPrefix + "icMatch")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#b5273ed4">b5273ed4</a> +             try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#b5273ed4">b5273ed4</a> +                 for bg in calib.backgrounds:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#b5273ed4">b5273ed4</a> +                     backgrounds.append(bg)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#4e8e515b">4e8e515b</a> +             except TypeError:     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#4e8e515b">4e8e515b</a> +                 backgrounds.append(calib.backgrounds)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#4e8e515b">4e8e515b</a> +             except AttributeError:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#cb0cca56">cb0cca56</a> +                 self.log.warn("The calibration task did not return any backgrounds. " +</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#cb0cca56">cb0cca56</a> +                     "Any background subtracted in the calibration process cannot be persisted.")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#af675928">af675928</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#af675928">af675928</a> +             calib = None</div>
                
                        if self.config.doDetection:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#08a8ec02">08a8ec02</a> -             idFactory = self.makeIdFactory(dataRef)</div>
                            table = afwTable.SourceTable.make(self.schema, idFactory)
                            table.setMetadata(self.algMetadata)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#08a8ec02">08a8ec02</a> -             detections = self.detection.makeSourceCatalog(table, inputExposure)</div>
              ?                                         ^^^^^^ ^^^^^^^^^^        ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#75be6566">75be6566</a> +             detections = self.detection.run(table, calExposure)</div>
              ?                                         ^ ^        ^^^
                            sources = detections.sources
                            fpSets = detections.fpSets
                            if fpSets.background:           
                                backgrounds.append(fpSets.background)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#cb5b933c">cb5b933c</a> -         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#cb5b933c">cb5b933c</a> -             sources = None</div>
                
                        if self.config.doDeblend:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#08a8ec02">08a8ec02</a> -             self.deblend.run(inputExposure, sources, inputExposure.getPsf())</div>
              ?                              ^^^^^                   ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#240e68c6">240e68c6</a> +             self.deblend.run(calExposure, sources, calExposure.getPsf())</div>
              ?                              ^^^                   ^^^
                
                        if self.config.doMeasurement:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#08a8ec02">08a8ec02</a> -             self.measurement.run(inputExposure, sources)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#671f4e40">671f4e40</a> +             self.measurement.run(calExposure, sources, exposureId=self.getExposureId(dataRef))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#34220f48">34220f48</a> +         if self.config.doWriteCalibrate:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#cb0cca56">cb0cca56</a> +             # wait until after detection and measurement, since detection sets detected mask bits</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#cb0cca56">cb0cca56</a> +             # and both require a background subtracted exposure;</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#34220f48">34220f48</a> +             # note that this overwrites an existing calexp if doCalibrate false</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#34220f48">34220f48</a> +                </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#34220f48">34220f48</a> +             if calExposure is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#34220f48">34220f48</a> +                 self.log.warn("calibrated exposure is None; cannot save it")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#34220f48">34220f48</a> +             else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#34220f48">34220f48</a> +                 if self.config.persistBackgroundModel:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#8e58eb18">8e58eb18</a> +                     self.writeBackgrounds(dataRef, backgrounds)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#34220f48">34220f48</a> +                 else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#8e58eb18">8e58eb18</a> +                     self.restoreBackgrounds(calExposure, backgrounds)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#34220f48">34220f48</a> +                 dataRef.put(calExposure, self.dataPrefix + "calexp")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#34220f48">34220f48</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#af675928">af675928</a> +         if calib is not None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#af675928">af675928</a> +             self.propagateCalibFlags(calib.sources, sources)</div>
                
                        if sources is not None and self.config.doWriteSources:
                            sourceWriteFlags = (0 if self.config.doWriteHeavyFootprintsInSources
                                                else afwTable.SOURCE_IO_NO_HEAVY_FOOTPRINTS)
                            if enableWriteSources:
                                dataRef.put(sources, self.dataPrefix + 'src', flags=sourceWriteFlags)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#af675928">af675928</a> +             </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#08a8ec02">08a8ec02</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#08a8ec02">08a8ec02</a> -         srcMatches = None; srcMatchMeta = None</div>
                        if self.config.doMeasurement and self.config.doWriteSourceMatches:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#cf5724b8">cf5724b8</a> -             self.log.info("Matching src to reference catalogue")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#e7ea683d">e7ea683d</a> +             self.log.info("Matching src to reference catalogue" % (dataRef.dataId))</div>
              ?                                                                +++++++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#cf5724b8">cf5724b8</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#cf5724b8">cf5724b8</a> -                 srcMatches, srcMatchMeta = self.matchSources(inputExposure, sources)</div>
              ? ----                                                         ^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#af675928">af675928</a> +             srcMatches, srcMatchMeta = self.matchSources(calExposure, sources)</div>
              ?                                                          ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#c0c78506">c0c78506</a> -                 if srcMatches is not None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#af675928">af675928</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#c0c78506">c0c78506</a> -                     normalizedSrcMatches = afwTable.packMatches(srcMatches)</div>
              ? --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#af675928">af675928</a> +             normalizedSrcMatches = afwTable.packMatches(srcMatches)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#c0c78506">c0c78506</a> -                     normalizedSrcMatches.table.setMetadata(srcMatchMeta)</div>
              ? --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#af675928">af675928</a> +             normalizedSrcMatches.table.setMetadata(srcMatchMeta)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#c0c78506">c0c78506</a> -                     dataRef.put(normalizedSrcMatches, self.dataPrefix + "srcMatch")</div>
              ? --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#af675928">af675928</a> +             dataRef.put(normalizedSrcMatches, self.dataPrefix + "srcMatch")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#cf5724b8">cf5724b8</a> -             except Exception as e:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#cf5724b8">cf5724b8</a> -                 self.log.warn("Unable to match to reference catalog: %s" % e)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#af675928">af675928</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#af675928">af675928</a> +             srcMatches = None; srcMatchMeta = None</div>
                
                        return pipeBase.Struct(
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#08a8ec02">08a8ec02</a> -             exposure = inputExposure,</div>
              ?             ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#af675928">af675928</a> +             inputExposure = inputExposure,</div>
              ?             ^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#af675928">af675928</a> +             exposure = calExposure,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#af675928">af675928</a> +             calib = calib,</div>
                            sources = sources,
                            matches = srcMatches,
                            matchMeta = srcMatchMeta,
                            backgrounds = backgrounds,
                        )
                
                    def matchSources(self, exposure, sources):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#08a8ec02">08a8ec02</a> -         """Match the sources to the astrometric reference catalog"""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#af675928">af675928</a> +         """Match the sources to the reference object loaded by the calibrate task"""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#af675928">af675928</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#af675928">af675928</a> +             astrometer = self.calibrate.astrometry.astrometer</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#f43ae1cf">f43ae1cf</a> +             if astrometer is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#f43ae1cf">f43ae1cf</a> +                 raise AttributeError("No astrometer")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#af675928">af675928</a> +         except AttributeError:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#e7ea683d">e7ea683d</a> +             self.log.warn("Failed to find an astrometer in calibrate's astronomy task")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#af675928">af675928</a> +             return None, None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#af675928">af675928</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#08a8ec02">08a8ec02</a> -         astromRet = self.getAstrometer().useKnownWcs(sources, exposure=exposure)</div>
              ?                     ^^^^^^^^^         --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#af675928">af675928</a> +         astromRet = astrometer.useKnownWcs(sources, exposure=exposure)</div>
              ?                     ^
                        # N.b. yes, this is what useKnownWcs calls the returned values
                        return astromRet.matches, astromRet.matchMetadata
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#af675928">af675928</a> +     def propagateCalibFlags(self, icSources, sources, matchRadius=1):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#af675928">af675928</a> +         """Match the icSources and sources, and propagate Interesting Flags (e.g. PSF star) to the sources</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#af675928">af675928</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#e7ea683d">e7ea683d</a> +         self.log.info("Matching icSource and Source catalogs to propagate flags.")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#af675928">af675928</a> +         if icSources is None or sources is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#af675928">af675928</a> +             return</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#af675928">af675928</a> +         closest = False                 # return all matched objects</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#af675928">af675928</a> +         matched = afwTable.matchRaDec(icSources, sources, matchRadius*afwGeom.arcseconds, closest)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#af675928">af675928</a> +         if self.config.doDeblend:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
253  <a href="#e0116f17">e0116f17</a> +             matched = [m for m in matched if m[1].get("deblend_nChild") == 0] # if deblended, keep children</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#af675928">af675928</a> +         # Because we had to allow multiple matches to handle parents, we now need to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#af675928">af675928</a> +         # prune to the best matches</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#af675928">af675928</a> +         bestMatches = {}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#af675928">af675928</a> +         for m0, m1, d in matched:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#af675928">af675928</a> +             id0 = m0.getId()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#af675928">af675928</a> +             if bestMatches.has_key(id0):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#af675928">af675928</a> +                 if d > bestMatches[id0][2]:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#af675928">af675928</a> +                     continue</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#af675928">af675928</a> +             bestMatches[id0] = (m0, m1, d)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#af675928">af675928</a> +         matched = bestMatches.values()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#af675928">af675928</a> +         # Check that we got it right</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#af675928">af675928</a> +         if len(set(m[0].getId() for m in matched)) != len(matched):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#e7ea683d">e7ea683d</a> +             self.log.warn("At least one icSource is matched to more than one Source")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#af675928">af675928</a> +         # Copy over the desired flags</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#af675928">af675928</a> +         #</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#af675928">af675928</a> +         for ics, s, d in matched:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#af675928">af675928</a> +             s.setFlag(self.calibSourceKey, True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#af675928">af675928</a> +             s.assign(ics, self.schemaMapper)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#af675928">af675928</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#af675928">af675928</a> +         return</div>
                
                    def getSchemaCatalogs(self):
                        """Return a dict of empty catalogs for each catalog dataset produced by this task."""
                        src = afwTable.SourceCatalog(self.schema)
                        src.getTable().setMetadata(self.algMetadata)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#08a8ec02">08a8ec02</a> -         return {self.dataPrefix + "src": src}</div>
              ?         ^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#43a7016f">43a7016f</a> +         d = {self.dataPrefix + "src": src}</div>
              ?         ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
287  <a href="#43a7016f">43a7016f</a> +         icSrc = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
288  <a href="#43a7016f">43a7016f</a> +         try:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#43a7016f">43a7016f</a> +             icSrc = afwTable.SourceCatalog(self.calibrate.schema)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#43a7016f">43a7016f</a> +             icSrc.getTable().setMetadata(self.calibrate.algMetadata)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
291  <a href="#43a7016f">43a7016f</a> +         except AttributeError:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
292  <a href="#43a7016f">43a7016f</a> +             pass</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
293  <a href="#43a7016f">43a7016f</a> +         if icSrc is not None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#43a7016f">43a7016f</a> +             d[self.dataPrefix + "icSrc"] = icSrc</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#43a7016f">43a7016f</a> +         return d</div>
                
                    def writeBackgrounds(self, dataRef, backgrounds):
                        """Backgrounds are persisted via the butler
                
                        @param dataRef: Data reference
                        @param backgrounds: List of background models
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#bf2aaa36">bf2aaa36</a> -         self.log.info("Persisting background models")</div>
              ?                  ^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
303  <a href="#631d2f66">631d2f66</a> +         self.log.warn("Persisting background models")</div>
              ?                  ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
304  <a href="#631d2f66">631d2f66</a> +         </div>
                        dataRef.put(backgrounds, self.dataPrefix+"calexpBackground")
                
                    def restoreBackgrounds(self, exp, backgrounds):
                        """Add backgrounds back in to an exposure
                
                        @param exp: Exposure to which to add backgrounds
                        @param backgrounds: List of background models
                        """
                        mi = exp.getMaskedImage()
                        mi += backgrounds.getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#0494ead9">0494ead9</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#0494ead9">0494ead9</a> -     def getExpId(self, dataRef):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#0494ead9">0494ead9</a> -         raise NotImplementedError()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#0494ead9">0494ead9</a> - </div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/pipe_tasks/</h2>
<h3><a name="bf2aaa36"/></a>bf2aaa36</h3>

<pre>
commit bf2aaa365c772a3dbee33456ad36d837dd673308
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Nov 11 15:30:15 2014 -0500

    Persisting the backgrounds does not merit a warning.
</pre>
<h3><a name="08a8ec02"/></a>08a8ec02</h3>

<pre>
commit 08a8ec029dd52ac55e47b707a6905df061a40506
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:54:36 2014 +0900

    move CalibrateTask from ProcessImageTask into ProcessCcdTask
    
    CalibrateTask seems to have been included in ProcessImageTask before the
    days of CoaddPsf, when we needed to be able to generate a Psf for a coadd
    using the coadd; this is no longer necessary, and its presence in
    ProcessImageTask stands in the way of further refactoring to support the
    plan for coadd multi-band deblending and measurement.
    
    In order to implement matching between the detected sources and the
    reference catalog, I've added an AstrometryTask to ProcessCoaddTask, since
    it can no longer rely on the one in CalibrateTask.  This change does
    change the config hierarchy, and so will break use of processCcd on
    data repositories with existing data (if not using "--clobber-config").
</pre>
<h3><a name="9c9c4d2a"/></a>9c9c4d2a</h3>

<pre>
commit 9c9c4d2aef51581d1ec95c9f222cc3b5b5bd627e
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 31 17:11:25 2012 +0900

    refactored processCcd and processCoadd to remove duplicate coadd; now both inherit from processImage
</pre>
<h3><a name="cb0cca56"/></a>cb0cca56</h3>

<pre>
commit cb0cca56b54ba2fb0be63d7f02da64b5899a8dd2
Author: Russell Owen <rowen@uw.edu>
Date:   Thu May 23 14:21:03 2013 -0700

    Modify ProcessCoaddTask to add flags to sources indicating is in inner region of patch
    and is inner region of tract.
</pre>
<h3><a name="cf5724b8"/></a>cf5724b8</h3>

<pre>
commit cf5724b852937cfcef1b71b7a372552011fda670
Author: Paul Price <price@astro.princeton.edu>
Date:   Sat Oct 25 16:57:59 2014 +0900

    make failure to match sources non-fatal
    
    Allows us to push forward with processing, providing something that might
    be useful.
</pre>
<h3><a name="0888abcd"/></a>0888abcd</h3>

<pre>
commit 0888abcdbaa85521876c37f3ddec4ca8dd8463e2
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Apr 24 15:23:45 2013 -0400

    config: Have flux.gaussian use Gaussians from shape.sdss
    
    This results in a significant speed saving, according to RHL.
</pre>
<h3><a name="0494ead9"/></a>0494ead9</h3>

<pre>
commit 0494ead9c5c4fc97f8f48aa1a138cec9ec552bdf
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Wed Aug 27 09:46:59 2014 -0400

    measurePSF: Allow for option to reserve PSF candidates from fitting for cross-validation
    
    To get a unique random seed for each CCD this required adding expId method for processImage
</pre>
<h3><a name="c0c78506"/></a>c0c78506</h3>

<pre>
commit c0c785061debf0de8a309681687e8a77a94d2e97
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 25 10:55:47 2015 -0500

    ProcessImageTask: catch case that srcMatches is None
    
    Matching with the reference catalog may return None (e.g., there's
    no matches at all, or it failed), so we need to catch this before
    we use srcMatches.
</pre>
<h3><a name="cb5b933c"/></a>cb5b933c</h3>

<pre>
commit cb5b933cd24451a094a831ad3a411e28c85459e8
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 21 10:08:14 2015 -0400

    ProcessImageTask: ensure 'sources' is defined
    
    It may not be if we've turned off detection.
</pre>
<h3><a name="5eb58011"/></a>5eb58011</h3>

<pre>
commit 5eb580119b3c296ddc210196542ef9ccb5b26617
Author: Dustin Lang <dstndstn@gmail.com>
Date:   Mon Jun 10 11:34:11 2013 -0400

    SourceDeblendTask moved to meas_deblender
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/pipe_tasks/</h2>
<h3><a name="e7ea683d"/></a>e7ea683d</h3>

<pre>
commit e7ea683d5c3d957fec4c42be6716bffbd809bd95
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Sep 19 16:31:19 2012 -0400

    switch to newer log syntax in all tasks
</pre>
<h3><a name="4e8e515b"/></a>4e8e515b</h3>

<pre>
commit 4e8e515bde38f6a55fafe025bde33f23dabeefa7
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Oct 16 13:40:45 2012 -0500

    Specifically check for Type and Attribute errors in the backgrounds object returned from calibration
</pre>
<h3><a name="02df497d"/></a>02df497d</h3>

<pre>
commit 02df497d06a29888edaa0cdbaae72b27c16cc7ef
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Aug 20 15:27:41 2014 -0400

    Use measurement subtask to determine tableVersion in CalibrateTask.
    
    Instead of passing the tableVersion from ProcessImageTask to CalibrateTask,
    CalibrateTask now looks at its own measurement task to determine which
    tableVersion to use.  Both tasks now also explicitly require that the tableVersions
    of their measurement subtasks are the same.  I believe this was de-facto required
    before.
</pre>
<h3><a name="cb0cca56"/></a>cb0cca56</h3>

<pre>
commit cb0cca56b54ba2fb0be63d7f02da64b5899a8dd2
Author: Russell Owen <rowen@uw.edu>
Date:   Thu May 23 14:21:03 2013 -0700

    Modify ProcessCoaddTask to add flags to sources indicating is in inner region of patch
    and is inner region of tract.
</pre>
<h3><a name="34220f48"/></a>34220f48</h3>

<pre>
commit 34220f48979d5a7d4c857c2010632327539038d4
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Thu Sep 27 19:26:32 2012 -0500

    Keep a list of backgrounds so that non-background subtracted calexps can be persisted
</pre>
<h3><a name="06003ae8"/></a>06003ae8</h3>

<pre>
commit 06003ae8d343b1b2dedc7f9c54e24f8e35e947fd
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Feb 19 19:08:47 2013 +0900

    If we want to process data without estimating the PSF, use the guessed initial
    psf if we're unable to read an updated one from disk.
    
    We should probably add a config option to control whether we even try to
    read the old one.  This should be part of the rethink that means that the
    code tries to continue when you've disabled something upstream rather than
    aborting (e.g. aperture corrections if you've disabled PSF measurements)
</pre>
<h3><a name="8e58eb18"/></a>8e58eb18</h3>

<pre>
commit 8e58eb18fc01464b8946a1e44862e8787b1c8a8a
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Feb 27 18:35:23 2013 +0900

    Pull background handling into separate methods (#2704).
</pre>
<h3><a name="e0116f17"/></a>e0116f17</h3>

<pre>
commit e0116f179ec95625b82333a1abe45c424b192bef
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Wed Mar 4 02:55:24 2015 -0800

    DM-420 removal of meas_algorithms measurement
    
    Move all measurement tests to meas_base
    Removed field named for version 0 deblender
    Remove use of tableVersion on measurement task and code tasks which used it.
</pre>
<h3><a name="240e68c6"/></a>240e68c6</h3>

<pre>
commit 240e68c6b25a6a5ec0d61ce5d7e817223a9cfccf
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Apr 9 18:59:59 2013 -0400

    More fixes for ProcessCoadd so it works when there's a valid input PSF.
</pre>
<h3><a name="f43ae1cf"/></a>f43ae1cf</h3>

<pre>
commit f43ae1cf98ac99028f62eea806f8ba969b9f309c
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 9 18:08:10 2013 -0400

    Catch case that astrometer is None.
</pre>
<h3><a name="db3e8e3f"/></a>db3e8e3f</h3>

<pre>
commit db3e8e3fa77ee187cd1393c609f8b96bc6727829
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Thu Oct 2 21:58:10 2014 -0700

    Change to package path for SingleFrameMeasurement
</pre>
<h3><a name="671f4e40"/></a>671f4e40</h3>

<pre>
commit 671f4e407a2db21cb99ef70d743df739a692fa17
Author: pgee <pgee@pgeepc2.physics.ucdavis.edu>
Date:   Fri Feb 6 14:12:03 2015 -0800

    modify processCoadd and Ccd to pass the unique exposure Id to the measurement.run()
    
    This is being used to set the noise seed.
</pre>
<h3><a name="75be6566"/></a>75be6566</h3>

<pre>
commit 75be6566dab1d895a4e1fdb523898958a9efcd33
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Wed Jul 2 15:49:44 2014 -1000

    More work on Task docs
</pre>
<h3><a name="43a7016f"/></a>43a7016f</h3>

<pre>
commit 43a7016ff9cbba540fc727b6c71ab38efebaf71f
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 14 18:58:19 2013 -0400

    Implement hooks to save schemas for src, icSrc, and diaSrc (#2724).
</pre>
<h3><a name="b5273ed4"/></a>b5273ed4</h3>

<pre>
commit b5273ed47232640da4a637ab3beba88a4f5805b3
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Mon Oct 15 18:09:53 2012 -0500

    Check that the calibration phase returns background objects
</pre>
<h3><a name="631d2f66"/></a>631d2f66</h3>

<pre>
commit 631d2f66da5f1a9a56fe198a29f790256d54eac7
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Thu Mar 14 06:30:25 2013 +0900

    Persist a BackgroundList, not an image.  #2732
</pre>
<h3><a name="92f25fb2"/></a>92f25fb2</h3>

<pre>
commit 92f25fb20a53788a90e7b133c8fb208a9c2623dc
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Jun 3 16:58:56 2013 -0700

    Add missing import
</pre>
<h3><a name="4f2984d1"/></a>4f2984d1</h3>

<pre>
commit 4f2984d1056e419ca5bc14ae7ed351c5b6e9dae6
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Thu Sep 25 03:07:12 2014 -0500

    DM-1071  Change default measurement task to meas_base
</pre>
<h3><a name="ee85f9b2"/></a>ee85f9b2</h3>

<pre>
commit ee85f9b2668760e360700dd38d683e6c4e00f798
Author: Perry Gee <pgee@physics.ucdavis.edu>
Date:   Thu Jun 19 20:30:53 2014 -0500

    Changes to processImage to allow to run with either tableVersion
</pre>
<h3><a name="af675928"/></a>af675928</h3>

<pre>
commit af6759285e5c8383e74f2e40dcee7d6fbd08b769
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Tue Jul 31 17:11:25 2012 +0900

    refactored processCcd and processCoadd to remove duplicate coadd; now both inherit from processImage
</pre>
</div>


[Return to list](#homelist)
