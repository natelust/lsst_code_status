# Comparison of the ip_isr repository


<div style="background-color:Aquamarine; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Summary of Repositories</h1>
<p>
Comparison run at 02:20PM on June 09, 2015<br>
There are <b>1425</b> differences between the two repositories<br><br>
Repository <b>/Users/nate/repos_hsc/ip_isr/</b> <br> Revision <b>195388fc0aa5ca29cf055d269125a5ebd92ef821</b><br> Branch <b>master</b><br>Last commit was on <b>2015-05-04 13:04:59 -0400</b><br><br>
Repository <b>/Users/nate/repos_lsst/ip_isr/</b> <br> Revision <b>19f7783320e387a5966b5f46d9de07a3268b2180</b><br> Branch <b>master</b><br>Last commit was on <b>2015-05-01 16:43:35 -0500</b><br><br>
</p>
</div>



___
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Files only in /Users/nate/repos_hsc/ip_isr/</h1>
<h2>tests/testSdqa.py</h2>
<pre>
commit 195388fc0aa5ca29cf055d269125a5ebd92ef821
Merge: b853db2 1a942b2
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon May 4 13:04:59 2015 -0400

    Merge branch 'tickets/HSC-1231': ValueError from over-exposed frame in flat construction</pre>
<h2>tests/testAssembleAmpList.py</h2>
<pre>
commit 195388fc0aa5ca29cf055d269125a5ebd92ef821
Merge: b853db2 1a942b2
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon May 4 13:04:59 2015 -0400

    Merge branch 'tickets/HSC-1231': ValueError from over-exposed frame in flat construction</pre>
</div>

<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
<h1>Files only in /Users/nate/repos_lsst/ip_isr/</h1>
<h2>examples/exampleUtils.py</h2>
<pre>
commit 19f7783320e387a5966b5f46d9de07a3268b2180
Merge: 14174d3 4e182ec
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 1 16:43:35 2015 -0500

    Merge branch 'tickets/DM-1151'</pre>
<h2>tests/testDefect.py</h2>
<pre>
commit 19f7783320e387a5966b5f46d9de07a3268b2180
Merge: 14174d3 4e182ec
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 1 16:43:35 2015 -0500

    Merge branch 'tickets/DM-1151'</pre>
<h2>examples/runAssembleTask.py</h2>
<pre>
commit 19f7783320e387a5966b5f46d9de07a3268b2180
Merge: 14174d3 4e182ec
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 1 16:43:35 2015 -0500

    Merge branch 'tickets/DM-1151'</pre>
<h2>examples/runIsrTask.py</h2>
<pre>
commit 19f7783320e387a5966b5f46d9de07a3268b2180
Merge: 14174d3 4e182ec
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 1 16:43:35 2015 -0500

    Merge branch 'tickets/DM-1151'</pre>
</div>




# List of the files in common<a name="homelist"></a>
Files without links do not differ

* [```doc/doxygen.conf.in```](#doc/doxygen.conf.in)
* [```python/lsst/ip/isr/isrTask.py```](#python/lsst/ip/isr/isrTask.py)
* ```examples/policy/input_policy.paf```
* ```examples/isr.py```
* ```examples/policy/isr_policy.paf```
* ```tests/testFlatAndIlluminationCorrection.py```
* ```SConstruct```
* ```tests/test.fits.gz```
* ```tests/SConscript```
* ```tests/test_amp.fits.gz```
* ```examples/SConscript```
* ```tests/testBiasAndDarkCorrection.py```
* ```python/lsst/ip/isr/SConscript```
* ```.gitignore```
* ```tests/test_comp.fits.gz```
* [```python/lsst/ip/isr/assembleCcdTask.py```](#python/lsst/ip/isr/assembleCcdTask.py)
* ```examples/policy/output_policy.paf```
* [```tests/testFringes.py```](#tests/testFringes.py)
* ```ups/ip_isr.build```
* ```tests/imsim_85751839_R23_S11_C00_E000.fits.gz```
* ```tests/maskNans.py```
* ```include/lsst/ip/isr.h```
* ```ups/timeline```
* ```doc/SConscript```
* ```examples/policy/idcals_policy.paf```
* [```tests/testOverscanCorrection.py```](#tests/testOverscanCorrection.py)
* ```pipeline/linearizationLookupTable.paf```
* ```lib/SConscript```
* ```python/lsst/__init__.py```
* [```src/Isr.cc```](#src/Isr.cc)
* [```python/lsst/ip/isr/fringe.py```](#python/lsst/ip/isr/fringe.py)
* [```python/lsst/ip/isr/isrLib.i```](#python/lsst/ip/isr/isrLib.i)
* ```pipeline/isrPolicy.paf```
* ```tests/test_comp_trimmed.fits.gz```
* ```python/lsst/ip/isr/__init__.py```
* ```ups/manifest.list```
* ```ups/ip_isr.cfg```
* ```tests/testSaturationCorrection.py```
* [```python/lsst/ip/isr/isr.py```](#python/lsst/ip/isr/isr.py)
* ```python/lsst/ip/__init__.py```
* [```ups/ip_isr.table```](#ups/ip_isr.table)

# <a name="python/lsst/ip/isr/isrTask.py"/></a>python/lsst/ip/isr/isrTask.py
### Diff:

<pre>
                #
                # LSST Data Management System
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
3    <a href="#ff1a4e33">ff1a4e33</a> - # Copyright 2008, 2009, 2010 LSST Corporation.</div>
              ?                 ^^^^^^^^   ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
3    <a href="#73bd6734">73bd6734</a> + # Copyright 2008-2015 LSST Corporation.</div>
              ?                 ^   ^
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import lsst.afw.image as afwImage
                import lsst.meas.algorithms as measAlg
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#0142cbbb">0142cbbb</a> - import lsst.afw.cameraGeom as cameraGeom</div>
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                from . import isr
                from .isrLib import maskNans
                from .assembleCcdTask import AssembleCcdTask
                from .fringe import FringeTask
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
31   <a href="#6739c63b">6739c63b</a> - import lsst.afw.geom as afwGeom</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
32   <a href="#6739c63b">6739c63b</a> - import lsst.afw.cameraGeom as afwCG</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
33   <a href="#6739c63b">6739c63b</a> - from lsst.afw.geom.polygon import Polygon</div>
                
                class IsrTaskConfig(pexConfig.Config):
                    doBias = pexConfig.Field(
                        dtype = bool,
                        doc = "Apply bias frame correction?",
                        default = True,
                    )
                    doDark = pexConfig.Field(
                        dtype = bool,
                        doc = "Apply dark frame correction?",
                        default = True,
                    )
                    doFlat = pexConfig.Field(
                        dtype = bool,
                        doc = "Apply flat field correction?",
                        default = True,
                    )
                    doFringe = pexConfig.Field(
                        dtype = bool,
                        doc = "Apply fringe correction?",
                        default = True,
                        )
                    doWrite = pexConfig.Field(
                        dtype = bool,
                        doc = "Persist postISRCCD?",
                        default = True,
                    )
                    assembleCcd = pexConfig.ConfigurableField(
                        target = AssembleCcdTask,
                        doc = "CCD assembly task",
                    )
                    fringeAfterFlat = pexConfig.Field(
                        dtype = bool,
                        doc = "Do fringe subtraction after flat-fielding?",
                        default = True,
                        )
                    fringe = pexConfig.ConfigurableField(
                        target = FringeTask,
                        doc = "Fringe subtraction task",
                        )
                    fwhm = pexConfig.Field(
                        dtype = float,
                        doc = "FWHM of PSF (arcsec)",
                        default = 1.0,
                    )
                    saturatedMaskName = pexConfig.Field(
                        dtype = str,
                        doc = "Name of mask plane to use in saturation detection and interpolation",
                        default = "SAT",
                    )
                    flatScalingType = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "The method for scaling the flat on the fly.",
                        default = 'USER',
                        allowed = {
                            "USER":   "Scale by flatUserScale",
                            "MEAN":   "Scale by the inverse of the mean",
                            "MEDIAN": "Scale by the inverse of the median",
                        },
                    )
                    flatUserScale = pexConfig.Field(
                        dtype = float,
                        doc = "If flatScalingType is 'USER' then scale flat by this amount; ignored otherwise",
                        default = 1.0,
                    )
                    overscanFitType = pexConfig.ChoiceField(
                        dtype = str,
                        doc = "The method for fitting the overscan bias level.",
                        default = 'MEDIAN',
                        allowed = {
                            "POLY": "Fit ordinary polynomial to the longest axis of the overscan region",
                            "CHEB": "Fit Chebyshev polynomial to the longest axis of the overscan region",
                            "LEG":  "Fit Legendre polynomial to the longest axis of the overscan region",
                            "NATURAL_SPLINE": "Fit natural spline to the longest axis of the overscan region",
                            "CUBIC_SPLINE": "Fit cubic spline to the longest axis of the overscan region",
                            "AKIMA_SPLINE": "Fit Akima spline to the longest axis of the overscan region",
                            "MEAN": "Correct using the mean of the overscan region",
                            "MEDIAN": "Correct using the median of the overscan region",
                        },
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#32531ffd">32531ffd</a> -     overscanPolyOrder = pexConfig.Field(</div>
              ?             ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#bc212058">bc212058</a> +     overscanOrder = pexConfig.Field(</div>
                        dtype = int,
                        doc = ("Order of polynomial or to fit if overscan fit type is a polynomial, " +
                               "or number of spline knots if overscan fit type is a spline."),
                        default = 1,
                    )
                    overscanRej = pexConfig.Field(
                        dtype = float,
                        doc = "Rejection threshold (sigma) for collapsing overscan before fit",
                        default = 3.0,
                    )
                    growSaturationFootprintSize = pexConfig.Field(
                        dtype = int,
                        doc = "Number of pixels by which to grow the saturation footprints",
                        default = 1,
                    )
                    fluxMag0T1 = pexConfig.Field(
                        dtype = float,
                        doc = "The approximate flux of a zero-magnitude object in a one-second exposure",
                        default = 1e10,
                    )
                    setGainAssembledCcd = pexConfig.Field(
                        dtype = bool,
                        doc = "update exposure metadata in the assembled ccd to reflect the effective gain of the assembled chip",
                        default = True,
                    )
                    keysToRemoveFromAssembledCcd = pexConfig.ListField(
                        dtype = str,
                        doc = "fields to remove from the metadata of the assembled ccd.",
                        default = [],
                    )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#b7c620a8">b7c620a8</a> -     doAssembleDetrends = pexConfig.Field(</div>
              ?               ^^^  --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#73bd6734">73bd6734</a> +     doAssembleIsrExposures = pexConfig.Field(</div>
              ?               ^^^^^^^^^
                        dtype = bool,
                        default = False,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#b7c620a8">b7c620a8</a> -         doc = "Assemble detrend/calibration frames?"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#73bd6734">73bd6734</a> +         doc = "Assemble amp-level calibration exposures into ccd-level exposure?"</div>
                        )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#f1cee734">f1cee734</a> -     fallbackFilterName = pexConfig.Field(dtype=str, doc="Fallback default filter name for calibrations",</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#f1cee734">f1cee734</a> -                                          optional=True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#cc0b857a">cc0b857a</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#73bd6734">73bd6734</a> +     doAssembleCcd = pexConfig.Field(</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#73bd6734">73bd6734</a> +         dtype = bool,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#73bd6734">73bd6734</a> +         default = True,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#73bd6734">73bd6734</a> +         doc = "Assemble amp-level exposures into a ccd-level exposure?"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#b7c620a8">b7c620a8</a> +         )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#374928b2">374928b2</a> + ## \addtogroup LSST_task_documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#374928b2">374928b2</a> + ## \{</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#374928b2">374928b2</a> + ## \page IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#374928b2">374928b2</a> + ## \ref IsrTask_ "IsrTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#374928b2">374928b2</a> + ## \copybrief IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#374928b2">374928b2</a> + ## \}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#374928b2">374928b2</a> + </div>
                class IsrTask(pipeBase.CmdLineTask):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#374928b2">374928b2</a> +     """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#374928b2">374928b2</a> +     \anchor IsrTask_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#374928b2">374928b2</a> +     \brief Apply common instrument signature correction algorithms to a raw frame.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Contents Contents</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_Purpose</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_Initialize</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_IO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_Config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_Debug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#374928b2">374928b2</a> +      - \ref ip_isr_isr_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Purpose Description</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#374928b2">374928b2</a> +     The process for correcting imaging data is very similar from camera to camera.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#73bd6734">73bd6734</a> +     This task provides a vanilla implementation of doing these corrections, including</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#73bd6734">73bd6734</a> +     the ability to turn certain corrections off if they are not needed.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#73bd6734">73bd6734</a> +     The inputs to the primary method, run, are a raw exposure to be corrected and the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#73bd6734">73bd6734</a> +     calibration data products. The raw input is a single chip sized mosaic of all amps</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#73bd6734">73bd6734</a> +     including overscans and other non-science pixels.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#73bd6734">73bd6734</a> +     The method runDataRef() is intended for use by a lsst.pipe.base.cmdLineTask.CmdLineTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#73bd6734">73bd6734</a> +     and takes as input only a daf.persistence.butlerSubset.ButlerDataRef.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#73bd6734">73bd6734</a> +     This task may not meet all needs and it is expected that it will be subclassed for</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#73bd6734">73bd6734</a> +     specific applications.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Initialize Task initialization</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#d545ee27">d545ee27</a> +     \copydoc \_\_init\_\_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#73bd6734">73bd6734</a> +     \section ip_isr_isr_IO Inputs/Outputs to the run method</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#374928b2">374928b2</a> +     \copydoc run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Config Configuration parameters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#374928b2">374928b2</a> +     See \ref IsrTaskConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Debug Debug variables</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#374928b2">374928b2</a> +     The \link lsst.pipe.base.cmdLineTask.CmdLineTask command line task\endlink interface supports a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#178c7528">178c7528</a> +     flag \c --debug, \c -d to import \b debug.py from your \c PYTHONPATH; see <a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#374928b2">374928b2</a> +     href="http://lsst-web.ncsa.illinois.edu/~buildbot/doxygen/x_masterDoxyDoc/base_debug.html"></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#374928b2">374928b2</a> +     Using lsstDebug to control debugging output</a> for more about \b debug.py files.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#178c7528">178c7528</a> +     The available variables in IsrTask are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#374928b2">374928b2</a> +     <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#374928b2">374928b2</a> +       <DT> \c display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#374928b2">374928b2</a> +       <DD> A dictionary containing debug point names as keys with frame number as value. Valid keys are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#374928b2">374928b2</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#374928b2">374928b2</a> +           <DT> postISRCCD </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#374928b2">374928b2</a> +           <DD> display exposure after ISR has been applied </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#374928b2">374928b2</a> +         </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#374928b2">374928b2</a> +     </DL>  </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#178c7528">178c7528</a> +     For example, put something like</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#178c7528">178c7528</a> +     \code{.py}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
218  <a href="#178c7528">178c7528</a> +     import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
219  <a href="#178c7528">178c7528</a> +     def DebugInfo(name):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#178c7528">178c7528</a> +         di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#178c7528">178c7528</a> +         if name == "lsst.ip.isr.isrTask":</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#178c7528">178c7528</a> +             di.display = {'postISRCCD':2}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#178c7528">178c7528</a> +         return di</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#178c7528">178c7528</a> +     lsstDebug.Info = DebugInfo</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#178c7528">178c7528</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#178c7528">178c7528</a> +     into your debug.py file and run the commandline task with the \c --debug flag.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
228  <a href="#374928b2">374928b2</a> +     \section ip_isr_isr_Example A complete example of using IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#178c7528">178c7528</a> +     This code is in runIsrTask.py in the examples directory and can be run as \em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#374928b2">374928b2</a> +     \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
232  <a href="#374928b2">374928b2</a> +     python examples/runIsrTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#178c7528">178c7528</a> +     # optional arguments:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
235  <a href="#178c7528">178c7528</a> +     # --debug, -d  Load debug.py?</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#178c7528">178c7528</a> +     # --ds9        Display the result?</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#178c7528">178c7528</a> +     # --write      Write the result?</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#374928b2">374928b2</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
240  <a href="#178c7528">178c7528</a> +     <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
241  <a href="#178c7528">178c7528</a> +     Stepping through the example:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
242  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
243  <a href="#374928b2">374928b2</a> +     \dontinclude runIsrTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
244  <a href="#374928b2">374928b2</a> +     Import the task.  There are other imports.  Read the source file for more info.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#374928b2">374928b2</a> +     \skipline IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#178c7528">178c7528</a> +     \skipline exampleUtils</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#178c7528">178c7528</a> +     Create the raw input data with the help of some utilities in \link exampleUtils.py \endlink</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#178c7528">178c7528</a> +     also in the examples directory.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#374928b2">374928b2</a> +     \dontinclude runIsrTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#178c7528">178c7528</a> +     We will only do overscan, dark and flat correction.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#178c7528">178c7528</a> +     The data are constructed by hand so that all effects will be corrected for essentially perfectly.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
253  <a href="#178c7528">178c7528</a> +     \skip DARKVAL</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#178c7528">178c7528</a> +     \until rawExposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#178c7528">178c7528</a> +     The above numbers can be changed to modify the gradient in the flat, for example.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#178c7528">178c7528</a> +     For the parameters in this particular example,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#178c7528">178c7528</a> +     the image after ISR will be a constant 5000 counts</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#178c7528">178c7528</a> +     (with some variation in floating point represenation).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#178c7528">178c7528</a> +     \note  Alternatively, images can be read from disk, either using the Butler or manually:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#178c7528">178c7528</a> +     \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#178c7528">178c7528</a> +     import lsst.afw.image as afwImage</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#178c7528">178c7528</a> +     darkExposure = afwImage.ExposureF("/path/to/dark.fits")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#178c7528">178c7528</a> +     flatExposure = afwImage.ExposureF("/path/to/flat.fits")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#178c7528">178c7528</a> +     rawExposure = afwImage.ExposureF("/path/to/raw.fits")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#178c7528">178c7528</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#178c7528">178c7528</a> +     However, IsrTask.run() requires Exposures which have a \link lsst.afw.cameraGeom.Detector \endlink.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#178c7528">178c7528</a> +     Detector objects describe details such as data dimensions, number of amps,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#178c7528">178c7528</a> +     orientation and overscan dimensions.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#178c7528">178c7528</a> +     If requesting images from the Butler, Exposures will automatically have detector information.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
271  <a href="#178c7528">178c7528</a> +     If running IsrTask on arbitrary images from a camera without an obs_ package,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
272  <a href="#178c7528">178c7528</a> +     a lsst.afw.cameraGeom.Detector can be generated using lsst.afw.cameraGeom.fitsUtils.DetectorBuilder</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
273  <a href="#178c7528">178c7528</a> +     and set by calling</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
274  <a href="#178c7528">178c7528</a> +     \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#178c7528">178c7528</a> +     rawExposure.setDetector(myDetectorObject)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#178c7528">178c7528</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#178c7528">178c7528</a> +     See \link lsst.afw.cameraGeom.fitsUtils.DetectorBuilder \endlink for more details.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#178c7528">178c7528</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#178c7528">178c7528</a> +      \dontinclude runIsrTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#374928b2">374928b2</a> +     Construct the task and set some config parameters.  Specifically, we don't want to</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#374928b2">374928b2</a> +     do zero or fringe correction.  We also don't want the assembler messing with the gain.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#178c7528">178c7528</a> +     \skip Create</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#374928b2">374928b2</a> +     \until config=isrConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
284  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#178c7528">178c7528</a> +     Finally, run the exposures through ISR.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#178c7528">178c7528</a> +     \skipline isrTask.run</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
287  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
288  <a href="#374928b2">374928b2</a> +     <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#374928b2">374928b2</a> +     """</div>
                    ConfigClass = IsrTaskConfig
                    _DefaultName = "isr"
                
                    def __init__(self, *args, **kwargs):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#374928b2">374928b2</a> +         '''!Constructor for IsrTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#374928b2">374928b2</a> +         \param[in] *args -- a list of positional arguments passed on to the Task constructor</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
296  <a href="#374928b2">374928b2</a> +         \param[in] **kwargs -- a dictionary of keyword arguments passed on to the Task constructor</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#374928b2">374928b2</a> +         Call the lsst.pipe.base.task.Task.__init__ method</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
298  <a href="#374928b2">374928b2</a> +         Then setup the assembly and fringe correction subtasks</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#374928b2">374928b2</a> +         '''</div>
                        pipeBase.Task.__init__(self, *args, **kwargs)
                        self.makeSubtask("assembleCcd")
                        self.makeSubtask("fringe")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#c37b4e85">c37b4e85</a> -         self.transposeForInterpolation = False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
303  <a href="#ff1a4e33">ff1a4e33</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
304  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
305  <a href="#73bd6734">73bd6734</a> +     def readIsrData(self, dataRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
306  <a href="#73bd6734">73bd6734</a> +         """!Retrieve necessary frames for instrument signature removal</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
307  <a href="#73bd6734">73bd6734</a> +         \param[in] dataRef -- a daf.persistence.butlerSubset.ButlerDataRef</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
308  <a href="#73bd6734">73bd6734</a> +                               of the detector data to be processed</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
309  <a href="#73bd6734">73bd6734</a> +         \return a pipeBase.Struct with fields containing kwargs expected by run()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#73bd6734">73bd6734</a> +          - bias: exposure of bias frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#73bd6734">73bd6734</a> +          - dark: exposure of dark frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#73bd6734">73bd6734</a> +          - flat: exposure of flat field</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
313  <a href="#73bd6734">73bd6734</a> +          - defects: list of detects</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#73bd6734">73bd6734</a> +          - fringes: exposure of fringe frame or list of fringe exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
315  <a href="#73bd6734">73bd6734</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#73bd6734">73bd6734</a> +         biasExposure = self.getIsrExposure(dataRef, "bias") if self.config.doBias else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#73bd6734">73bd6734</a> +         darkExposure = self.getIsrExposure(dataRef, "dark") if self.config.doDark else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#73bd6734">73bd6734</a> +         flatExposure = self.getIsrExposure(dataRef, "flat") if self.config.doFlat else None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#73bd6734">73bd6734</a> +         defectList = dataRef.get("defects")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#73bd6734">73bd6734</a> +         if self.config.doFringe:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#73bd6734">73bd6734</a> +             fringes = self.fringe.readFringes(dataRef, assembler=self.assembleCcd \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#73bd6734">73bd6734</a> +                                               if self.config.doAssembleIsrExposures else None)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
325  <a href="#73bd6734">73bd6734</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#73bd6734">73bd6734</a> +             fringes = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
327  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
328  <a href="#73bd6734">73bd6734</a> +         #Struct should include only kwargs to run()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#73bd6734">73bd6734</a> +         return pipeBase.Struct(bias = biasExposure,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#73bd6734">73bd6734</a> +                                dark = darkExposure,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#73bd6734">73bd6734</a> +                                flat = flatExposure,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#73bd6734">73bd6734</a> +                                defects = defectList,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#73bd6734">73bd6734</a> +                                fringes = fringes,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#73bd6734">73bd6734</a> +                                )</div>
                
                    @pipeBase.timeMethod
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#c37b4e85">c37b4e85</a> -     def run(self, sensorRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#73bd6734">73bd6734</a> +     def run(self, ccdExposure, bias=None, dark=None,  flat=None, defects=None, fringes=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#a3afbee1">a3afbee1</a> -         """Perform instrument signature removal on an exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#374928b2">374928b2</a> +         """!Perform instrument signature removal on an exposure</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#a21c7f73">a21c7f73</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#35683577">35683577</a> + </div>
                        Steps include:
                        - Detect saturation, apply overscan correction, bias, dark and flat
                        - Perform CCD assembly
                        - Interpolate over defects, saturated pixels and all NaNs
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#f95415ac">f95415ac</a> -         - Persist the ISR-corrected exposure as "postISRCCD" if config.doWrite is True</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#c37b4e85">c37b4e85</a> -         @param sensorRef daf.persistence.butlerSubset.ButlerDataRef of the data to be processed</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#73bd6734">73bd6734</a> +         \param[in] ccdExposure  -- lsst.afw.image.exposure of detector data</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#73bd6734">73bd6734</a> +         \param[in] bias -- exposure of bias frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#73bd6734">73bd6734</a> +         \param[in] dark -- exposure of dark frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#73bd6734">73bd6734</a> +         \param[in] flat -- exposure of flatfield</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#73bd6734">73bd6734</a> +         \param[in] defects -- list of detects</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#73bd6734">73bd6734</a> +         \param[in] fringes -- exposure of fringe frame or list of fringe exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#98bda3aa">98bda3aa</a> -         @return a pipeBase.Struct with fields:</div>
              ?         ^                                   -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#73bd6734">73bd6734</a> +         \return a pipeBase.Struct with field:</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#27f1ad34">27f1ad34</a> -         - exposure: the exposure after application of ISR</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
353  <a href="#73bd6734">73bd6734</a> +          - exposure</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#a21c7f73">a21c7f73</a> -         self.log.log(self.log.INFO, "Performing ISR on sensor %s" % (sensorRef.dataId))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#55827ae3">55827ae3</a> -         ccdExposure = sensorRef.get('raw')</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#35683577">35683577</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#357088e3">357088e3</a> +         #Validate Input</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#357088e3">357088e3</a> +         if self.config.doBias and bias is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#357088e3">357088e3</a> +             raise RuntimeError("Must supply a bias exposure if config.doBias True")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#357088e3">357088e3</a> +         if self.config.doDark and dark is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#357088e3">357088e3</a> +             raise RuntimeError("Must supply a dark exposure if config.doDark True")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#357088e3">357088e3</a> +         if self.config.doFlat and flat is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#357088e3">357088e3</a> +             raise RuntimeError("Must supply a flat exposure if config.doFlat True")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#357088e3">357088e3</a> +         if self.config.doFringe and fringes is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#357088e3">357088e3</a> +             raise RuntimeError("Must supply fringe list or exposure if config.doFringe True")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#357088e3">357088e3</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
366  <a href="#357088e3">357088e3</a> +         defects = [] if defects is None else defects</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#357088e3">357088e3</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#55827ae3">55827ae3</a> -         ccd = cameraGeom.cast_Ccd(ccdExposure.getDetector())</div>
              ?               --------------------                         -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#73bd6734">73bd6734</a> +         ccd = ccdExposure.getDetector()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#0e2f0e0a">0e2f0e0a</a> -     </div>
                        ccdExposure = self.convertIntToFloat(ccdExposure)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#c37b4e85">c37b4e85</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#35683577">35683577</a> + </div>
                        for amp in ccd:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#73bd6734">73bd6734</a> +             #if ccdExposure is one amp, check for coverage to prevent performing ops multiple times</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#73bd6734">73bd6734</a> +             if ccdExposure.getBBox().contains(amp.getBBox()):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#3797fb0c">3797fb0c</a> -             self.saturationDetection(ccdExposure, amp)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#73bd6734">73bd6734</a> +                 self.saturationDetection(ccdExposure, amp)</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#98bda3aa">98bda3aa</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#3797fb0c">3797fb0c</a> -             self.overscanCorrection(ccdExposure, amp)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#73bd6734">73bd6734</a> +                 self.overscanCorrection(ccdExposure, amp)</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#8b0a9a2d">8b0a9a2d</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#35683577">35683577</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#73bd6734">73bd6734</a> +         if self.config.doAssembleCcd:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#8b0a9a2d">8b0a9a2d</a> -         ccdExposure = self.assembleCcd.assembleCcd(ccdExposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#73bd6734">73bd6734</a> +             ccdExposure = self.assembleCcd.assembleCcd(ccdExposure)</div>
              ? ++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#f95415ac">f95415ac</a> -         ccd = cameraGeom.cast_Ccd(ccdExposure.getDetector())</div>
                
                        if self.config.doBias:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#55827ae3">55827ae3</a> -             self.biasCorrection(ccdExposure, sensorRef)</div>
              ?                                               --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#73bd6734">73bd6734</a> +             self.biasCorrection(ccdExposure, bias)</div>
              ?                                              +++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#c37b4e85">c37b4e85</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#35683577">35683577</a> + </div>
                        if self.config.doDark:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#55827ae3">55827ae3</a> -             self.darkCorrection(ccdExposure, sensorRef)</div>
              ?                                              ^^^^^ ^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#73bd6734">73bd6734</a> +             self.darkCorrection(ccdExposure, dark)</div>
              ?                                              ^^ ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#c37b4e85">c37b4e85</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#35683577">35683577</a> + </div>
                        for amp in ccd:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
387  <a href="#73bd6734">73bd6734</a> +             #if ccdExposure is one amp, check for coverage to prevent performing ops multiple times</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
388  <a href="#73bd6734">73bd6734</a> +             if ccdExposure.getBBox().contains(amp.getBBox()):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#f95415ac">f95415ac</a> -             ampExposure = ccdExposure.Factory(ccdExposure, amp.getAllPixels(True), afwImage.PARENT)</div>
              ?                                                                   ^^^^^ --- ---- -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
389  <a href="#73bd6734">73bd6734</a> +                 ampExposure = ccdExposure.Factory(ccdExposure, amp.getBBox())</div>
              ? ++++                                                                  ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#0e2f0e0a">0e2f0e0a</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#0e2f0e0a">0e2f0e0a</a> -             self.updateVariance(ampExposure, amp)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
390  <a href="#73bd6734">73bd6734</a> +                 self.updateVariance(ampExposure, amp)</div>
              ? ++++
                
                        if self.config.doFringe and not self.config.fringeAfterFlat:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#b7c620a8">b7c620a8</a> -             self.fringe.run(ccdExposure, sensorRef,</div>
              ?                          ^                ^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#73bd6734">73bd6734</a> +             self.fringe.removeFringe(ccdExposure, fringes)</div>
              ?                          ^^^^^^^^ ++              ++++++ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#b7c620a8">b7c620a8</a> -                             assembler=self.assembleCcd if self.config.doAssembleDetrends else None)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#0e2f0e0a">0e2f0e0a</a> -         </div>
                        if self.config.doFlat:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#55827ae3">55827ae3</a> -             self.flatCorrection(ccdExposure, sensorRef)</div>
              ?                                              --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#73bd6734">73bd6734</a> +             self.flatCorrection(ccdExposure, flat)</div>
              ?                                               +++
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#ff3f43ba">ff3f43ba</a> -         self.maskAndInterpDefect(ccdExposure)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#99ed5a35">99ed5a35</a> +         self.maskAndInterpDefect(ccdExposure, defects)</div>
              ?                                             +++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#c37b4e85">c37b4e85</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#35683577">35683577</a> + </div>
                        self.saturationInterpolation(ccdExposure)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#ff3f43ba">ff3f43ba</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#35683577">35683577</a> + </div>
                        self.maskAndInterpNan(ccdExposure)
                
                        if self.config.doFringe and self.config.fringeAfterFlat:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#b7c620a8">b7c620a8</a> -             self.fringe.run(ccdExposure, sensorRef,</div>
              ?                          ^                ^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#73bd6734">73bd6734</a> +             self.fringe.removeFringe(ccdExposure, fringes)</div>
              ?                          ^^^^^^^^ ++              ++++++ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#b7c620a8">b7c620a8</a> -                             assembler=self.assembleCcd if self.config.doAssembleDetrends else None)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
218  <a href="#2081540b">2081540b</a> -         </div>
                        ccdExposure.getCalib().setFluxMag0(self.config.fluxMag0T1 * ccdExposure.getCalib().getExptime())
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#6f588bbd">6f588bbd</a> -         if self.config.doWrite:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#f95415ac">f95415ac</a> -             sensorRef.put(ccdExposure, "postISRCCD")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#32531ffd">32531ffd</a> -         </div>
                        self.display("postISRCCD", ccdExposure)
                
                        return pipeBase.Struct(
                            exposure = ccdExposure,
                        )
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
230  <a href="#a3afbee1">a3afbee1</a> -     def checkIsAmp(self, amp):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
231  <a href="#a3afbee1">a3afbee1</a> -         """Check if a amp is of type cameraGeom.Amp</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
233  <a href="#25aa8a8a">25aa8a8a</a> -         @param Detector cameraGeom.Detector to be checked</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
234  <a href="#25aa8a8a">25aa8a8a</a> -         @return True if Amp, else False</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
416  <a href="#73bd6734">73bd6734</a> +     @pipeBase.timeMethod</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#73bd6734">73bd6734</a> +     def runDataRef(self, sensorRef):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
418  <a href="#73bd6734">73bd6734</a> +         """!Perform instrument signature removal on a ButlerDataRef of a Sensor</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
419  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
420  <a href="#73bd6734">73bd6734</a> +         - Read in necessary detrending/isr/calibration data</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
421  <a href="#73bd6734">73bd6734</a> +         - Process raw exposure in run()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
422  <a href="#73bd6734">73bd6734</a> +         - Persist the ISR-corrected exposure as "postISRCCD" if config.doWrite is True</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
423  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
424  <a href="#73bd6734">73bd6734</a> +         \param[in] sensorRef -- daf.persistence.butlerSubset.ButlerDataRef of the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#73bd6734">73bd6734</a> +                                 detector data to be processed</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
426  <a href="#73bd6734">73bd6734</a> +         \return a pipeBase.Struct with fields:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
427  <a href="#73bd6734">73bd6734</a> +         - exposure: the exposure after application of ISR</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
236  <a href="#a3afbee1">a3afbee1</a> -         return isinstance(amp, cameraGeom.Amp)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
429  <a href="#73bd6734">73bd6734</a> +         self.log.info("Performing ISR on sensor %s" % (sensorRef.dataId))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
430  <a href="#73bd6734">73bd6734</a> +         ccdExposure = sensorRef.get('raw')</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
431  <a href="#73bd6734">73bd6734</a> +         isrData = self.readIsrData(sensorRef)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
432  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
433  <a href="#4e182ec8">4e182ec8</a> +         result = self.run(ccdExposure, **isrData.getDict())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
434  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
435  <a href="#6f588bbd">6f588bbd</a> +         if self.config.doWrite:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
436  <a href="#4e182ec8">4e182ec8</a> +             sensorRef.put(result.exposure, "postISRCCD")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#35683577">35683577</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
438  <a href="#4e182ec8">4e182ec8</a> +         return result</div>
                
                    def convertIntToFloat(self, exposure):
                        """Convert an exposure from uint16 to float, set variance plane to 1 and mask plane to 0
                        """
                        if isinstance(exposure, afwImage.ExposureF):
                            # Nothing to be done
                            return exposure
                        if not hasattr(exposure, "convertF"):
                            raise RuntimeError("Unable to convert exposure (%s) to float" % type(exposure))
                
                        newexposure = exposure.convertF()
                        maskedImage = newexposure.getMaskedImage()
                        varArray = maskedImage.getVariance().getArray()
                        varArray[:,:] = 1
                        maskArray = maskedImage.getMask().getArray()
                        maskArray[:,:] = 0
                        return newexposure
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
255  <a href="#0142cbbb">0142cbbb</a> -     def biasCorrection(self, exposure, dataRef):</div>
              ?                                        ^ ^^^ -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
457  <a href="#73bd6734">73bd6734</a> +     def biasCorrection(self, exposure, biasExposure):</div>
              ?                                        ^^ ^^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#a3afbee1">a3afbee1</a> -         """Apply bias correction in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
458  <a href="#374928b2">374928b2</a> +         """!Apply bias correction in place</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
257  <a href="#a3afbee1">a3afbee1</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
459  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
258  <a href="#a3afbee1">a3afbee1</a> -         @param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
460  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#a3afbee1">a3afbee1</a> -         @param[in]      dataRef         data reference at same level as exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
461  <a href="#73bd6734">73bd6734</a> +         \param[in]      biasExposure    bias exposure of same size as exposure</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#b7c620a8">b7c620a8</a> -         bias = self.getDetrend(dataRef, "bias")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#b7c620a8">b7c620a8</a> -         isr.biasCorrection(exposure.getMaskedImage(), bias.getMaskedImage())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
463  <a href="#73bd6734">73bd6734</a> +         isr.biasCorrection(exposure.getMaskedImage(), biasExposure.getMaskedImage())</div>
              ?                                                           ++++++++
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#c37b4e85">c37b4e85</a> -     def darkCorrection(self, exposure, dataRef):</div>
              ?                                          ^^^ -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
465  <a href="#73bd6734">73bd6734</a> +     def darkCorrection(self, exposure, darkExposure):</div>
              ?                                          ^^^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#a3afbee1">a3afbee1</a> -         """Apply dark correction in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
466  <a href="#374928b2">374928b2</a> +         """!Apply dark correction in place</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#a3afbee1">a3afbee1</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
467  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
267  <a href="#a3afbee1">a3afbee1</a> -         @param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
468  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#a3afbee1">a3afbee1</a> -         @param[in]      dataRef         data reference at same level as exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
469  <a href="#73bd6734">73bd6734</a> +         \param[in]      darkExposure    dark exposure of same size as exposure</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
270  <a href="#b7c620a8">b7c620a8</a> -         darkExposure = self.getDetrend(dataRef, "dark")</div>
                        darkCalib = darkExposure.getCalib()
                        isr.darkCorrection(
                            maskedImage = exposure.getMaskedImage(),
                            darkMaskedImage = darkExposure.getMaskedImage(),
                            expScale = exposure.getCalib().getExptime(),
                            darkScale = darkCalib.getExptime(),
                        )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
278  <a href="#25aa8a8a">25aa8a8a</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
478  <a href="#35683577">35683577</a> + </div>
                    def updateVariance(self, ampExposure, amp):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#0e2f0e0a">0e2f0e0a</a> -         """Set the variance plane based on the image plane, plus amplifier gain and read noise</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
480  <a href="#374928b2">374928b2</a> +         """!Set the variance plane based on the image plane, plus amplifier gain and read noise</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#a3afbee1">a3afbee1</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
481  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
282  <a href="#0e2f0e0a">0e2f0e0a</a> -         @param[in,out]  ampExposure     exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
482  <a href="#374928b2">374928b2</a> +         \param[in,out]  ampExposure     exposure to process</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#0e2f0e0a">0e2f0e0a</a> -         @param[in]      amp             amplifier detector information</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
483  <a href="#374928b2">374928b2</a> +         \param[in]      amp             amplifier detector information</div>
              ?         ^
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#0e2f0e0a">0e2f0e0a</a> -         if not self.checkIsAmp(amp):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#0e2f0e0a">0e2f0e0a</a> -             raise RuntimeError("This method must be executed on an amp.")</div>
                        isr.updateVariance(
                            maskedImage = ampExposure.getMaskedImage(),
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#0e2f0e0a">0e2f0e0a</a> -             gain = amp.getElectronicParams().getGain(),</div>
              ?                       ----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#99ed5a35">99ed5a35</a> +             gain = amp.getGain(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#0e2f0e0a">0e2f0e0a</a> -             readNoise = amp.getElectronicParams().getReadNoise(),</div>
              ?                            ----------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
488  <a href="#99ed5a35">99ed5a35</a> +             readNoise = amp.getReadNoise(),</div>
                        )
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
293  <a href="#c37b4e85">c37b4e85</a> -     def flatCorrection(self, exposure, dataRef):</div>
              ?                                        ^  ^^ -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
491  <a href="#73bd6734">73bd6734</a> +     def flatCorrection(self, exposure, flatExposure):</div>
              ?                                        ^^  ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#a3afbee1">a3afbee1</a> -         """Apply flat correction in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
492  <a href="#374928b2">374928b2</a> +         """!Apply flat correction in place</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#a3afbee1">a3afbee1</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
493  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
296  <a href="#a3afbee1">a3afbee1</a> -         @param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
494  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#a3afbee1">a3afbee1</a> -         @param[in]      dataRef         data reference at same level as exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
495  <a href="#73bd6734">73bd6734</a> +         \param[in]      flatExposure    flatfield exposure same size as exposure</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#b7c620a8">b7c620a8</a> -         flatfield = self.getDetrend(dataRef, "flat")</div>
                        isr.flatCorrection(
                            maskedImage = exposure.getMaskedImage(),
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
302  <a href="#a21c7f73">a21c7f73</a> -             flatMaskedImage = flatfield.getMaskedImage(),</div>
              ?                                   ^^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
499  <a href="#73bd6734">73bd6734</a> +             flatMaskedImage = flatExposure.getMaskedImage(),</div>
              ?                                   ^^^^^^^
                            scalingType = self.config.flatScalingType,
                            userScale = self.config.flatUserScale,
                        )
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
307  <a href="#e68e6bd8">e68e6bd8</a> -     def getDetrend(self, dataRef, detrend, immediate=True):</div>
              ?            ^^^  --                   ^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
504  <a href="#73bd6734">73bd6734</a> +     def getIsrExposure(self, dataRef, datasetType, immediate=True):</div>
              ?            ^^^^^^^^^                   ++++  ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
308  <a href="#b7c620a8">b7c620a8</a> -         """Get a detrend exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
505  <a href="#73bd6734">73bd6734</a> +         """!Retrieve a calibration dataset for removing instrument signature</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
310  <a href="#b7c620a8">b7c620a8</a> -         @param[in]      dataRef         data reference for exposure</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
507  <a href="#374928b2">374928b2</a> +         \param[in]      dataRef         data reference for exposure</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
311  <a href="#b7c620a8">b7c620a8</a> -         @param[in]      detrend         detrend/calibration to read</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
508  <a href="#73bd6734">73bd6734</a> +         \param[in]      datasetType     type of dataset to retrieve (e.g. 'bias', 'flat')</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
312  <a href="#ab11e342">ab11e342</a> -         @param[in]      immediate       if True, disable butler proxies to enable error</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
509  <a href="#374928b2">374928b2</a> +         \param[in]      immediate       if True, disable butler proxies to enable error</div>
              ?         ^
                                                        handling within this routine
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
314  <a href="#b7c620a8">b7c620a8</a> -         @return Detrend exposure</div>
              ?         ^      --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
511  <a href="#73bd6734">73bd6734</a> +         \return exposure</div>
              ?         ^
                        """
                        try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#e68e6bd8">e68e6bd8</a> -             exp = dataRef.get(detrend, immediate=immediate)</div>
              ?                                  ^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
514  <a href="#73bd6734">73bd6734</a> +             exp = dataRef.get(datasetType, immediate=immediate)</div>
              ?                                ++++  ^^^
                        except Exception, e:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#f1cee734">f1cee734</a> -             try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#f1cee734">f1cee734</a> -                 exp = dataRef.get(detrend, filter=self.config.fallbackFilterName, immediate=immediate)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#f1cee734">f1cee734</a> -                 self.log.warn("Using fallback calibration from filter %s" % self.config.fallbackFilterName)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
322  <a href="#f1cee734">f1cee734</a> -             except:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#f1cee734">f1cee734</a> -                 raise RuntimeError("Unable to retrieve %s for %s: %s" % (detrend, dataRef.dataId, e))</div>
              ? ----                                                                        ^ --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
516  <a href="#73bd6734">73bd6734</a> +             raise RuntimeError("Unable to retrieve %s for %s: %s" % (datasetType, dataRef.dataId, e))</div>
              ?                                                                       ++++  ^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
324  <a href="#b7c620a8">b7c620a8</a> -         if self.config.doAssembleDetrends:</div>
              ?                                  ^^^  --
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
517  <a href="#73bd6734">73bd6734</a> +         if self.config.doAssembleIsrExposures:</div>
              ?                                  ^^^^^^^^^
                            exp = self.assembleCcd.assembleCcd(exp)
                        return exp
                
                    def saturationDetection(self, exposure, amp):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#ff3f43ba">ff3f43ba</a> -         """Detect saturated pixels and mask them using mask plane "SAT", in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
522  <a href="#374928b2">374928b2</a> +         """!Detect saturated pixels and mask them using mask plane "SAT", in place</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
330  <a href="#a3afbee1">a3afbee1</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
523  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
331  <a href="#3797fb0c">3797fb0c</a> -         @param[in,out]  exposure    exposure to process; only the amp DataSec is processed</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
524  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure    exposure to process; only the amp DataSec is processed</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
332  <a href="#a3afbee1">a3afbee1</a> -         @param[in]      amp         amplifier device data</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
525  <a href="#374928b2">374928b2</a> +         \param[in]      amp         amplifier device data</div>
              ?         ^
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#a3afbee1">a3afbee1</a> -         if not self.checkIsAmp(amp):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#cc0b857a">cc0b857a</a> -             raise RuntimeError("This method must be executed on an amp.")</div>
                        maskedImage = exposure.getMaskedImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
337  <a href="#f2ffadb1">f2ffadb1</a> -         for box in (amp.getDiskDataSec(), amp.getDiskBiasSec()):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
338  <a href="#89cd629b">89cd629b</a> -             dataView = maskedImage.Factory(maskedImage, box, afwImage.PARENT)</div>
              ? ----                                                    ^  ^^^^^^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
528  <a href="#9749e104">9749e104</a> +         dataView = maskedImage.Factory(maskedImage, amp.getRawBBox())</div>
              ?                                                     ^^^^^^^^^^^^  ^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
339  <a href="#89cd629b">89cd629b</a> -             isr.makeThresholdMask(</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
529  <a href="#a21c7f73">a21c7f73</a> +         isr.makeThresholdMask(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
340  <a href="#89cd629b">89cd629b</a> -                 maskedImage = dataView,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
530  <a href="#3797fb0c">3797fb0c</a> +             maskedImage = dataView,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#89cd629b">89cd629b</a> -                 threshold = amp.getElectronicParams().getSaturationLevel(),</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
531  <a href="#99ed5a35">99ed5a35</a> +             threshold = amp.getSaturation(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#89cd629b">89cd629b</a> -                 growFootprints = 0,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
532  <a href="#a21c7f73">a21c7f73</a> +             growFootprints = 0,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#89cd629b">89cd629b</a> -                 maskName = self.config.saturatedMaskName,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
533  <a href="#a3afbee1">a3afbee1</a> +             maskName = self.config.saturatedMaskName,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
344  <a href="#89cd629b">89cd629b</a> -             )</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
534  <a href="#a21c7f73">a21c7f73</a> +         )</div>
                
                    def saturationInterpolation(self, ccdExposure):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#a3afbee1">a3afbee1</a> -         """Interpolate over saturated pixels, in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
537  <a href="#374928b2">374928b2</a> +         """!Interpolate over saturated pixels, in place</div>
              ?            +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
348  <a href="#a3afbee1">a3afbee1</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
538  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
349  <a href="#2d7d9d9f">2d7d9d9f</a> -         @param[in,out]  ccdExposure     exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
539  <a href="#374928b2">374928b2</a> +         \param[in,out]  ccdExposure     exposure to process</div>
              ?         ^
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#a3afbee1">a3afbee1</a> -         @warning:</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
541  <a href="#374928b2">374928b2</a> +         \warning:</div>
              ?         ^
                        - Call saturationDetection first, so that saturated pixels have been identified in the "SAT" mask.
                        - Call this after CCD assembly, since saturated regions may cross amplifier boundaries
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#c37b4e85">c37b4e85</a> -         if self.transposeForInterpolation:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#55827ae3">55827ae3</a> -             maskedImage = isr.transposeMaskedImage(ccdExposure.getMaskedImage())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#a3afbee1">a3afbee1</a> -             isr.interpolateFromMask(</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
545  <a href="#ef668c93">ef668c93</a> +         isr.interpolateFromMask(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#55827ae3">55827ae3</a> -                 maskedImage = maskedImage,</div>
              ? ----                          ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
546  <a href="#ef668c93">ef668c93</a> +             maskedImage = ccdExposure.getMaskedImage(),</div>
              ?                           ^^^^^^^^^^^^^^^^          ++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#a3afbee1">a3afbee1</a> -                 fwhm = self.config.fwhm,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
547  <a href="#ef668c93">ef668c93</a> +             fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#a3afbee1">a3afbee1</a> -                 growFootprints = self.config.growSaturationFootprintSize,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
548  <a href="#ef668c93">ef668c93</a> +             growFootprints = self.config.growSaturationFootprintSize,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#a3afbee1">a3afbee1</a> -                 maskName = self.config.saturatedMaskName,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
549  <a href="#ef668c93">ef668c93</a> +             maskName = self.config.saturatedMaskName,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#a3afbee1">a3afbee1</a> -             )</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
550  <a href="#ef668c93">ef668c93</a> +         )</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
551  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#55827ae3">55827ae3</a> -             maskedImage = isr.transposeMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#55827ae3">55827ae3</a> -             ccdExposure.setMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#3d8e4321">3d8e4321</a> -         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
366  <a href="#a3afbee1">a3afbee1</a> -             isr.interpolateFromMask(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#2d7d9d9f">2d7d9d9f</a> -                 maskedImage = ccdExposure.getMaskedImage(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#a3afbee1">a3afbee1</a> -                 fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#a3afbee1">a3afbee1</a> -                 growFootprints = self.config.growSaturationFootprintSize,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#a3afbee1">a3afbee1</a> -                 maskName = self.config.saturatedMaskName,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#a3afbee1">a3afbee1</a> -             )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#eb7f581c">eb7f581c</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#ff3f43ba">ff3f43ba</a> -     def maskAndInterpDefect(self, ccdExposure):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
552  <a href="#99ed5a35">99ed5a35</a> +     def maskAndInterpDefect(self, ccdExposure, defectBaseList):</div>
              ?                                              ++++++++++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#ff3f43ba">ff3f43ba</a> -         """Mask defects using mask plane "BAD" and interpolate over them, in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
553  <a href="#374928b2">374928b2</a> +         """!Mask defects using mask plane "BAD" and interpolate over them, in place</div>
              ?            +
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#2d7d9d9f">2d7d9d9f</a> -         @param[in,out]  ccdExposure     exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
555  <a href="#374928b2">374928b2</a> +         \param[in,out]  ccdExposure     exposure to process</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#a3afbee1">a3afbee1</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
556  <a href="#374928b2">374928b2</a> +         \param[in] defectBaseList a list of defects to mask and interpolate</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
557  <a href="#35683577">35683577</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#a3afbee1">a3afbee1</a> -         @warning: call this after CCD assembly, since defects may cross amplifier boundaries</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
558  <a href="#374928b2">374928b2</a> +         \warning: call this after CCD assembly, since defects may cross amplifier boundaries</div>
              ?         ^
                        """
                        maskedImage = ccdExposure.getMaskedImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#55827ae3">55827ae3</a> -         ccd = cameraGeom.cast_Ccd(ccdExposure.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
382  <a href="#a3afbee1">a3afbee1</a> -         defectBaseList = ccd.getDefects()</div>
                        defectList = measAlg.DefectListT()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
384  <a href="#8b0a9a2d">8b0a9a2d</a> -         # mask bad pixels in the camera class</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
385  <a href="#8b0a9a2d">8b0a9a2d</a> -         # create master list of defects and add those from the camera class</div>
                        for d in defectBaseList:
                            bbox = d.getBBox()
                            nd = measAlg.Defect(bbox)
                            defectList.append(nd)
                        isr.maskPixelsFromDefectList(maskedImage, defectList, maskName='BAD')
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
391  <a href="#c37b4e85">c37b4e85</a> -         if self.transposeForInterpolation:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
392  <a href="#55827ae3">55827ae3</a> -             maskedImage = isr.transposeMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
393  <a href="#c37b4e85">c37b4e85</a> -             defectList = isr.transposeDefectList(defectList)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
394  <a href="#55827ae3">55827ae3</a> -             isr.interpolateDefectList(</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
567  <a href="#da4824f6">da4824f6</a> +         isr.interpolateDefectList(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
395  <a href="#55827ae3">55827ae3</a> -                 maskedImage = maskedImage,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
568  <a href="#da4824f6">da4824f6</a> +             maskedImage = maskedImage,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
396  <a href="#55827ae3">55827ae3</a> -                 defectList = defectList,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
569  <a href="#da4824f6">da4824f6</a> +             defectList = defectList,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
397  <a href="#8b0a9a2d">8b0a9a2d</a> -                 fwhm = self.config.fwhm,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
570  <a href="#da4824f6">da4824f6</a> +             fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
398  <a href="#55827ae3">55827ae3</a> -             )</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
571  <a href="#da4824f6">da4824f6</a> +         )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
399  <a href="#55827ae3">55827ae3</a> -             maskedImage = isr.transposeMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
400  <a href="#55827ae3">55827ae3</a> -             ccdExposure.setMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
401  <a href="#3d8e4321">3d8e4321</a> -         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#8b0a9a2d">8b0a9a2d</a> -             isr.interpolateDefectList(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
403  <a href="#8b0a9a2d">8b0a9a2d</a> -                 maskedImage = maskedImage,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
404  <a href="#8b0a9a2d">8b0a9a2d</a> -                 defectList = defectList,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
405  <a href="#8b0a9a2d">8b0a9a2d</a> -                 fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
406  <a href="#8b0a9a2d">8b0a9a2d</a> -             )</div>
                
                    def maskAndInterpNan(self, exposure):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
409  <a href="#c230e0f5">c230e0f5</a> -         """Mask NaNs using mask plane "UNMASKEDNAN" and interpolate over them, in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
574  <a href="#374928b2">374928b2</a> +         """!Mask NaNs using mask plane "UNMASKEDNAN" and interpolate over them, in place</div>
              ?            +
                
                        We mask and interpolate over all NaNs, including those
                        that are masked with other bits (because those may or may
                        not be interpolated over later, and we want to remove all
                        NaNs).  Despite this behaviour, the "UNMASKEDNAN" mask plane
                        is used to preserve the historical name.
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
417  <a href="#ff3f43ba">ff3f43ba</a> -         @param[in,out]  exposure        exposure to process</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
582  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure        exposure to process</div>
              ?         ^
                        """
                        maskedImage = exposure.getMaskedImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
420  <a href="#108fd376">108fd376</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
585  <a href="#35683577">35683577</a> + </div>
                        # Find and mask NaNs
                        maskedImage.getMask().addMaskPlane("UNMASKEDNAN") 
                        maskVal = maskedImage.getMask().getPlaneBitMask("UNMASKEDNAN")
                        numNans = maskNans(maskedImage, maskVal)
                        self.metadata.set("NUMNANS", numNans)
                
                        # Interpolate over these previously-unmasked NaNs
                        if numNans > 0:
                            self.log.log(self.log.WARN, "There were %i unmasked NaNs" % (numNans,))
                            nanDefectList = isr.getDefectListFromMask(
                                maskedImage = maskedImage,
                                maskName = 'UNMASKEDNAN',
                                growFootprints = 0,
                            )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
435  <a href="#c37b4e85">c37b4e85</a> -             if self.transposeForInterpolation:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
436  <a href="#55827ae3">55827ae3</a> -                 maskedImage = isr.transposeMaskedImage(exposure.getMaskedImage())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#55827ae3">55827ae3</a> -                 defectList = isr.transposeDefectList(nanDefectList)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
438  <a href="#55827ae3">55827ae3</a> -                 isr.interpolateDefectList(</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
600  <a href="#ef668c93">ef668c93</a> +             isr.interpolateDefectList(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
439  <a href="#55827ae3">55827ae3</a> -                     maskedImage = maskedImage,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
440  <a href="#34e55246">34e55246</a> -                     defectList = defectList,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
441  <a href="#55827ae3">55827ae3</a> -                     fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
442  <a href="#55827ae3">55827ae3</a> -                 )</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
443  <a href="#55827ae3">55827ae3</a> -                 maskedImage = isr.transposeMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
444  <a href="#55827ae3">55827ae3</a> -                 exposure.setMaskedImage(maskedImage)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
445  <a href="#3d8e4321">3d8e4321</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
446  <a href="#55827ae3">55827ae3</a> -                 isr.interpolateDefectList(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
447  <a href="#55827ae3">55827ae3</a> -                     maskedImage = exposure.getMaskedImage(),</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
601  <a href="#ef668c93">ef668c93</a> +                 maskedImage = exposure.getMaskedImage(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
448  <a href="#55827ae3">55827ae3</a> -                     defectList = nanDefectList,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
602  <a href="#ef668c93">ef668c93</a> +                 defectList = nanDefectList,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
449  <a href="#55827ae3">55827ae3</a> -                     fwhm = self.config.fwhm,</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
603  <a href="#ef668c93">ef668c93</a> +                 fwhm = self.config.fwhm,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
450  <a href="#55827ae3">55827ae3</a> -                 )</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
604  <a href="#ef668c93">ef668c93</a> +             )</div>
                
                    def overscanCorrection(self, exposure, amp):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
453  <a href="#a3afbee1">a3afbee1</a> -         """Apply overscan correction, in place</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
607  <a href="#374928b2">374928b2</a> +         """!Apply overscan correction, in place</div>
              ?            +
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
455  <a href="#3797fb0c">3797fb0c</a> -         @param[in,out]  exposure    exposure to process; must include both DataSec and BiasSec pixels</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
609  <a href="#374928b2">374928b2</a> +         \param[in,out]  exposure    exposure to process; must include both DataSec and BiasSec pixels</div>
              ?         ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
456  <a href="#a3afbee1">a3afbee1</a> -         @param[in]      amp         amplifier device data</div>
              ?         ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
610  <a href="#374928b2">374928b2</a> +         \param[in]      amp         amplifier device data</div>
              ?         ^
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
458  <a href="#a3afbee1">a3afbee1</a> -         if not self.checkIsAmp(amp):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
612  <a href="#da4824f6">da4824f6</a> +         if not amp.getHasRawInfo():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
459  <a href="#cc0b857a">cc0b857a</a> -             raise RuntimeError("This method must be executed on an amp.")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
613  <a href="#99ed5a35">99ed5a35</a> +             raise RuntimeError("This method must be executed on an amp with raw information.")</div>
              ?                                                                       +++++++++++++++++++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
614  <a href="#357088e3">357088e3</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
615  <a href="#178c7528">178c7528</a> +         if amp.getRawHorizontalOverscanBBox().isEmpty():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
616  <a href="#357088e3">357088e3</a> +             self.log.info("No Overscan region. Not performing Overscan Correction.")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
617  <a href="#357088e3">357088e3</a> +             return None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
618  <a href="#357088e3">357088e3</a> + </div>
                        maskedImage = exposure.getMaskedImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
461  <a href="#3797fb0c">3797fb0c</a> -         dataView = maskedImage.Factory(maskedImage, amp.getDiskDataSec(), afwImage.PARENT)</div>
              ?                                                            ^^^^    ^^^  -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
620  <a href="#219584a3">219584a3</a> +         dataView = maskedImage.Factory(maskedImage, amp.getRawDataBBox())</div>
              ?                                                            ^^^    ^^^^
                
                        expImage = exposure.getMaskedImage().getImage()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
464  <a href="#0e2f0e0a">0e2f0e0a</a> -         overscanImage = expImage.Factory(expImage, amp.getDiskBiasSec(), afwImage.PARENT)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
623  <a href="#219584a3">219584a3</a> +         overscanImage = expImage.Factory(expImage, amp.getRawHorizontalOverscanBBox())</div>
                
                        isr.overscanCorrection(
                            ampMaskedImage = dataView,
                            overscanImage = overscanImage,
                            fitType = self.config.overscanFitType,
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
470  <a href="#a3afbee1">a3afbee1</a> -             polyOrder = self.config.overscanPolyOrder,</div>
              ?             - ---                           ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
629  <a href="#bc212058">bc212058</a> +             order = self.config.overscanOrder,</div>
                            collapseRej = self.config.overscanRej,
                        )
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
473  <a href="#6739c63b">6739c63b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
474  <a href="#6739c63b">6739c63b</a> -     def setValidPolygonIntersect(self, ccdExposure, fpPolygon):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
475  <a href="#6739c63b">6739c63b</a> -         """Set the valid polygon as the intersection of fpPolygon and the ccd corners</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
476  <a href="#6739c63b">6739c63b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
477  <a href="#6739c63b">6739c63b</a> -         @param[in,out]  exposure    exposure to process</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
478  <a href="#6739c63b">6739c63b</a> -         @param[in]      fpPolygon   Polygon in focal plane coordinates</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
479  <a href="#6739c63b">6739c63b</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
480  <a href="#6739c63b">6739c63b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
481  <a href="#6739c63b">6739c63b</a> -         # Get ccd corners in focal plane coordinates</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
482  <a href="#6739c63b">6739c63b</a> -         ccd = cameraGeom.cast_Ccd(ccdExposure.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
483  <a href="#6739c63b">6739c63b</a> -         corners = ccd.getAllPixels().getCorners()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
484  <a href="#6739c63b">6739c63b</a> -         fpCorners = [ccd.getPositionFromPixel(afwGeom.Point2D(i)).getMm() for i in corners]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
485  <a href="#6739c63b">6739c63b</a> -         ccdPolygon = Polygon(fpCorners)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
486  <a href="#6739c63b">6739c63b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#6739c63b">6739c63b</a> -         # Get intersection of ccd corners with fpPolygon</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
488  <a href="#6739c63b">6739c63b</a> -         intersect = ccdPolygon.intersectionSingle(fpPolygon)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
489  <a href="#6739c63b">6739c63b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
490  <a href="#6739c63b">6739c63b</a> -         # Transform back to pixel positions and build new polygon</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
491  <a href="#6739c63b">6739c63b</a> -         ccdPoints = [ccd.getPixelFromPosition(afwCG.FpPoint(x)) for x in intersect]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
492  <a href="#6739c63b">6739c63b</a> -         validPolygon = Polygon(ccdPoints)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
493  <a href="#6739c63b">6739c63b</a> -         ccdExposure.getInfo().setValidPolygon(validPolygon)</div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="c230e0f5"/></a>c230e0f5</h3>

<pre>
commit c230e0f54fbdea30434e80f2614165dd5b467589
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Jul 12 10:09:19 2013 -0400

    revise UnmaskedNanCounter as maskNans (#2951)
    
    NANs that are already masked weren't getting identified as needing to be
    interpolated over (because of the check for _pbMask in the apply loop),
    and therefore aren't removed.  In fact, we want to remove all NANs, not
    just the ones that are unmasked (just because they have a mask bit set
    doesn't mean they will be interpolated over by some other function, and
    we want to remove all NANs).
    
    * Made UnmaskedNanCounter a function (because there's no need to preserve
      state) and updated the name to more closely match the functionality.
    * Made the mask bits to allow and mask configurable.
    * Updated docs.
    * Removed instantiation for int and uint16_t (have no NAN).  We could
      introduce noop specialisations for these if desired.
    * Added test.
</pre>
<h3><a name="f2ffadb1"/></a>f2ffadb1</h3>

<pre>
commit f2ffadb1bc77bca0f7413fb1e051f34c4f121307
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Fri Oct 10 17:16:22 2014 +0900

    Use amp.getDiskBiasSec() instead of amp.getBiasSec() in saturationDetection()
</pre>
<h3><a name="f95415ac"/></a>f95415ac</h3>

<pre>
commit f95415acdf024a2927cb4b16e1ebb12c5f2a067d
Author: Russell Owen <rowen@uw.edu>
Date:   Wed May 16 15:16:09 2012 -0500

    Fix data section for computing variance.
    Renamed visitCCD to postISRCCD
</pre>
<h3><a name="a21c7f73"/></a>a21c7f73</h3>

<pre>
commit a21c7f733760165baa2097098c85225669ed7f54
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 16:38:43 2012 -0700

    Simplified the CCD assembly task.
    Documented the contents of isr.py
    Minor tweaks to ISR task.
</pre>
<h3><a name="ab11e342"/></a>ab11e342</h3>

<pre>
commit ab11e34253889ce5cf44128e7cba58eeb3836c09
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Sat Mar 2 12:26:11 2013 +0900

    Document new 'immediate' arg to getDetrend
</pre>
<h3><a name="8b0a9a2d"/></a>8b0a9a2d</h3>

<pre>
commit 8b0a9a2df806e8948af6c24a1ddba023b6a25da2
Author: Russell Owen <rowen@uw.edu>
Date:   Wed May 2 13:00:56 2012 -0700

    Make it easier to mask without interpolating.
    This is about as far as I think it makes sense to go for this ticket.
</pre>
<h3><a name="eb7f581c"/></a>eb7f581c</h3>

<pre>
commit eb7f581cbfbf8e185e5d01bff031863c9f648725
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Feb 1 13:40:31 2012 -0600

    rework isr to take only maskedImages.  added defect, nan, and saturation interpolation
</pre>
<h3><a name="32531ffd"/></a>32531ffd</h3>

<pre>
commit 32531ffdbf8d0ee00cfa23387633c101512abfd2
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Jan 25 19:21:31 2012 -0600

    IsrTask working.  Added and example script runTask.py in examples
</pre>
<h3><a name="2d7d9d9f"/></a>2d7d9d9f</h3>

<pre>
commit 2d7d9d9f55d8a37ef7283b764f522bf1b50e1846
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 12:17:49 2012 -0700

    Add flags to disable bias, dark and flat correction.
    Correct computation of variance plane.
    Document expected units of gain and read noise.
</pre>
<h3><a name="e68e6bd8"/></a>e68e6bd8</h3>

<pre>
commit e68e6bd80773d271c8a56aaef5dd28f1a620eac0
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Jan 10 11:35:34 2013 -0500

    Get detrend immediately (w/o proxy), so errors can pop up normally.
</pre>
<h3><a name="34e55246"/></a>34e55246</h3>

<pre>
commit 34e552460f6f0c1ff310cfed5bafa553f5adaae9
Author: Naoki Yasuda <yasudank@gmail.com>
Date:   Mon May 5 12:15:04 2014 +0900

    Fixed typo in maskAndInterpNan().
</pre>
<h3><a name="f1cee734"/></a>f1cee734</h3>

<pre>
commit f1cee734998f1faf86c02af42ea599b077847eeb
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Sep 17 16:26:50 2014 -0400

    IsrTask: allow fallback to a different filter when loading calibrations
    
    This allows processing to push forward even if calibrations for
    a particular filter aren't available.  Using the fallback filter
    is not a good idea for science processing, but it might allow
    useful results to be extracted from onsite analysis when data
    from a previously unanticipated filter appears.
</pre>
<h3><a name="3797fb0c"/></a>3797fb0c</h3>

<pre>
commit 3797fb0c1b3694d4e1897c7b7fcaa9729f002e78
Author: Russell Owen <rowen@uw.edu>
Date:   Tue May 15 15:54:54 2012 -0700

    Handle datasec better for saturation detection and overscan correction.
</pre>
<h3><a name="6f588bbd"/></a>6f588bbd</h3>

<pre>
commit 6f588bbd697b60b45c8a2cd3f959efea9e013987
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Jan 26 18:52:03 2012 -0500

    Make output of 'postISR' optional.
</pre>
<h3><a name="3d8e4321"/></a>3d8e4321</h3>

<pre>
commit 3d8e4321d976678407aee7b7bfe0973f5803d481
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 28 23:44:11 2012 -0600

    Added functionality to transpose images before interpolating them
</pre>
<h3><a name="c37b4e85"/></a>c37b4e85</h3>

<pre>
commit c37b4e853d4272bab570e913573ea7be2654160f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 09:02:56 2012 -0700

    First cut. Untested.
</pre>
<h3><a name="55827ae3"/></a>55827ae3</h3>

<pre>
commit 55827ae31eb7ceaa8b3bbbf5c10f2068b003508d
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 26 17:31:12 2012 -0700

    Bug fixes.
</pre>
<h3><a name="b7c620a8"/></a>b7c620a8</h3>

<pre>
commit b7c620a8ba97d5a02376367fc06bb090216b8420
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Nov 8 11:37:47 2012 -0500

    Provide method to read detrend/calibration exposure, and allow for them to be assembled (since they may have been created unassembled/untrimmed).
</pre>
<h3><a name="0e2f0e0a"/></a>0e2f0e0a</h3>

<pre>
commit 0e2f0e0a015e2d0040530075e18566dc65ad248e
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 27 17:00:52 2012 -0700

    Bug fixes
</pre>
<h3><a name="2081540b"/></a>2081540b</h3>

<pre>
commit 2081540ba1b7f6691cf4e218732428785f8db1e2
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 7 20:44:27 2012 -0500

    Add fringe subtraction task.
</pre>
<h3><a name="98bda3aa"/></a>98bda3aa</h3>

<pre>
commit 98bda3aa950cfc2cb66ee6781a51c09482543df7
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Fri Jan 20 18:10:50 2012 -0600

    Working on modifications for new pipette
</pre>
<h3><a name="6739c63b"/></a>6739c63b</h3>

<pre>
commit 6739c63b91ee6bc89b74ff524d0b2a5870467cb7
Author: Bob Armstrong <rearmstr@gmail.com>
Date:   Tue Nov 4 16:58:38 2014 -0500

    IsrTask: Add function to set valid Polygon
    
    This is currently used only in the obs_subaru isr task.  It was put here
    to make pushing to the LSST side easier.
</pre>
<h3><a name="108fd376"/></a>108fd376</h3>

<pre>
commit 108fd37604193a5469f2f681b79d26e43312ea32
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Jan 26 18:48:21 2012 -0500

    More changes to allow ccd/amp to co-exist; cleaner.
</pre>
<h3><a name="cc0b857a"/></a>cc0b857a</h3>

<pre>
commit cc0b857afd4a21349e8972aacbcd56db4df158b0
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 28 13:33:17 2012 -0600

    Adding data references to isr
</pre>
<h3><a name="ff1a4e33"/></a>ff1a4e33</h3>

<pre>
commit ff1a4e33de4d8fe14a5f469d43a355d0b097d290
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Dec 7 12:44:39 2011 -0600

    Modifications for integrations with the pip_base Task object.
</pre>
<h3><a name="89cd629b"/></a>89cd629b</h3>

<pre>
commit 89cd629bb8e1a72a545176311b1ef659358d95af
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Oct 7 14:55:11 2014 -0400

    saturationDetection: apply to overscan as well as image
    
    The overscan may be saturated from charge bleeding in from
    the image.
</pre>
<h3><a name="a3afbee1"/></a>a3afbee1</h3>

<pre>
commit a3afbee139e4dbcc004f3f28cb519110c071f479
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 17:30:26 2012 -0700

    Update documentation and tweak arguments in IsrTask to clarify usage.
</pre>
<h3><a name="27f1ad34"/></a>27f1ad34</h3>

<pre>
commit 27f1ad34083a5a973031e964dfad95de624bfd8b
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Feb 28 15:56:13 2012 -0600

    Add data reference api to isrTask
</pre>
<h3><a name="25aa8a8a"/></a>25aa8a8a</h3>

<pre>
commit 25aa8a8ad5e1f98d5753b4b324cc043b2790252a
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 15:05:55 2012 -0700

    Simplified CCD assembly. Tweaked setting of variance plane.
</pre>
<h3><a name="ff3f43ba"/></a>ff3f43ba</h3>

<pre>
commit ff3f43ba8afec8d903e4d66c86f58596c536217d
Author: Russell Owen <rowen@uw.edu>
Date:   Thu May 3 13:51:35 2012 -0700

    After talking to Paul Price, reverted some changes, making it more like
    the original code. Good.
</pre>
<h3><a name="0142cbbb"/></a>0142cbbb</h3>

<pre>
commit 0142cbbb510c9f27929c5def89c79267a932d40f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 13:55:46 2012 -0700

    Minor tweaks
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="a3afbee1"/></a>a3afbee1</h3>

<pre>
commit a3afbee139e4dbcc004f3f28cb519110c071f479
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 17:30:26 2012 -0700

    Update documentation and tweak arguments in IsrTask to clarify usage.
</pre>
<h3><a name="219584a3"/></a>219584a3</h3>

<pre>
commit 219584a3ca9859724200844e1faf91a094ea079b
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 08:42:42 2014 -0700

    Use default image origin when possible
</pre>
<h3><a name="b7c620a8"/></a>b7c620a8</h3>

<pre>
commit b7c620a8ba97d5a02376367fc06bb090216b8420
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Nov 8 11:37:47 2012 -0500

    Provide method to read detrend/calibration exposure, and allow for them to be assembled (since they may have been created unassembled/untrimmed).
</pre>
<h3><a name="4e182ec8"/></a>4e182ec8</h3>

<pre>
commit 4e182ec802bf215f041c4570629963ddae120445
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Fri May 1 15:53:27 2015 -0500

    IsrTask.runDataRef: return result from run
</pre>
<h3><a name="ef668c93"/></a>ef668c93</h3>

<pre>
commit ef668c9316cd267931c519f0d27b18d09473b772
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Thu Mar 13 11:32:42 2014 -0500

    Removed reference to transpose in interpolation
</pre>
<h3><a name="9749e104"/></a>9749e104</h3>

<pre>
commit 9749e104108b0a391c913d30501489ed65503750
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Oct 7 14:55:11 2014 -0400

    saturationDetection: apply to overscan as well as image
    
    The overscan may be saturated from charge bleeding in from
    the image.
</pre>
<h3><a name="da4824f6"/></a>da4824f6</h3>

<pre>
commit da4824f6859b88cb47e6be8ce257ec40b940f5d4
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Mar 11 13:33:02 2014 -0500

    Fixes for new cameraGeom.
</pre>
<h3><a name="178c7528"/></a>178c7528</h3>

<pre>
commit 178c75286f57ff1612acb4c4dec3c48693ba6e63
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 30 13:40:35 2015 -0500

    Update runIsrTask example and IsrTask documentation.
        - Change example to demo run() instead of runDataRef()
        - Move debug statement to run() to match debug info in Task doc.
        - Improve a check for non-empty overscan region before running
          overscan correction
</pre>
<h3><a name="a21c7f73"/></a>a21c7f73</h3>

<pre>
commit a21c7f733760165baa2097098c85225669ed7f54
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 16:38:43 2012 -0700

    Simplified the CCD assembly task.
    Documented the contents of isr.py
    Minor tweaks to ISR task.
</pre>
<h3><a name="3797fb0c"/></a>3797fb0c</h3>

<pre>
commit 3797fb0c1b3694d4e1897c7b7fcaa9729f002e78
Author: Russell Owen <rowen@uw.edu>
Date:   Tue May 15 15:54:54 2012 -0700

    Handle datasec better for saturation detection and overscan correction.
</pre>
<h3><a name="99ed5a35"/></a>99ed5a35</h3>

<pre>
commit 99ed5a35ca7328852e3e0ef8eccc72cec66a03d5
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Mon Mar 10 19:20:59 2014 -0500

    Updates to remove reference to old cameraGeom API
</pre>
<h3><a name="374928b2"/></a>374928b2</h3>

<pre>
commit 374928b23445758c0e6589ceec8d44ec4b933418
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Mon Aug 11 08:13:38 2014 -0700

    Added documentation for IsrTask and an example.
    
    The example creates a mock dataRef and runs it through ISR.  The
    example only does overscan, dark and flat correction.  The methods
    that construct the mock data could be useful elsewhere.
</pre>
<h3><a name="d545ee27"/></a>d545ee27</h3>

<pre>
commit d545ee275dd408325033880bdebb124f1581fbe8
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Sun Aug 17 15:02:14 2014 -0400

    Fixed typo in copydoc
</pre>
<h3><a name="73bd6734"/></a>73bd6734</h3>

<pre>
commit 73bd67343a2a8ec5129fe9aca8cea204439047b7
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Sun Feb 15 19:57:37 2015 -0600

    Refactor IsrTask/FringeTask s.t. run() takes exposures, runDataRef() a ButlerDataRef
    
        See epic DM-1113 for background
        - Push all interaction with the Butler to readIsrData()/readFringeData()
        - Update all lower-level methods like [bias/flat/dark]Correction to take
          exposures instead of dataRefs.
        - Add doAssembleCcd config to give run option to operate on single amps
        - Replace word "detrend" with "isr" in names
</pre>
<h3><a name="357088e3"/></a>357088e3</h3>

<pre>
commit 357088e3e85a75e341a6328a989e1d649561bcfd
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 23 01:14:55 2015 -0500

    IsrTask/FringeTask: Make more robust
    
        - Validate input to IsrTask.run()
        - Check for overscan pixels before attempting overscan correction
        - FringeTask.subtract(): check that number of fringe exposures
          matches number of scale factors
</pre>
<h3><a name="35683577"/></a>35683577</h3>

<pre>
commit 35683577e75626f3ece09ea6dd69a9482a519906
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Wed Oct 29 15:39:08 2014 -0700

    Cleans up runIsrTask.py and isrTask.py
    
    Removed whitespace from isrTask.py.
    Added missing import and cleaned up display
    in runIsrTask.py.
</pre>
<h3><a name="ff1a4e33"/></a>ff1a4e33</h3>

<pre>
commit ff1a4e33de4d8fe14a5f469d43a355d0b097d290
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Dec 7 12:44:39 2011 -0600

    Modifications for integrations with the pip_base Task object.
</pre>
<h3><a name="6f588bbd"/></a>6f588bbd</h3>

<pre>
commit 6f588bbd697b60b45c8a2cd3f959efea9e013987
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Jan 26 18:52:03 2012 -0500

    Make output of 'postISR' optional.
</pre>
<h3><a name="bc212058"/></a>bc212058</h3>

<pre>
commit bc2120587b7d4b9cf1b3fe4ccbed870f03c1f6b1
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Feb 14 16:01:39 2014 -0500

    overscan: rename polyOrder to order (#3065)
    
    As requested in code review.  Overloading "order" to mean
    either polynomial order or spline knots has precedence in
    IRAF (e.g., ccdproc).
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/ip/isr/assembleCcdTask.py"/></a>python/lsst/ip/isr/assembleCcdTask.py
### Diff:

<pre>
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import lsst.afw.cameraGeom as cameraGeom
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
23   <a href="#99ed5a35">99ed5a35</a> + import lsst.afw.cameraGeom.utils as cameraGeomUtils</div>
                import lsst.afw.image as afwImage
                import lsst.pex.config as pexConfig
                import lsst.pipe.base as pipeBase
                from .isr import calcEffectiveGain
                
                __all__ = ["AssembleCcdTask"]
                
                class AssembleCcdConfig(pexConfig.Config):
                    setGain = pexConfig.Field(
                        doc = "set gain?",
                        dtype = bool,
                        default = True,
                    )
                    doRenorm = pexConfig.Field(
                        doc = "renormalize to a gain of 1? (ignored if setGain false)",
                        dtype = bool,
                        default = True,
                    )
                    doTrim = pexConfig.Field(
                        doc = "trim out non-data regions?",
                        dtype = bool,
                        default = True,
                    )
                    keysToRemove = pexConfig.ListField(
                        doc = "FITS headers to remove (in addition to DATASEC, BIASSEC, TRIMSEC and perhaps GAIN)",
                        dtype = str,
                        default = (),
                    )
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#f67c2cdc">f67c2cdc</a> + ## \addtogroup LSST_task_documentation</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#f67c2cdc">f67c2cdc</a> + ## \{</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
55   <a href="#f67c2cdc">f67c2cdc</a> + ## \page AssembleCcdTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
56   <a href="#f67c2cdc">f67c2cdc</a> + ## \ref AssembleCcdTask_ "AssembleCcdTask"</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
57   <a href="#f67c2cdc">f67c2cdc</a> + ## \copybrief AssembleCcdTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#f67c2cdc">f67c2cdc</a> + ## \}</div>
                
                class AssembleCcdTask(pipeBase.Task):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
54   <a href="#c37b4e85">c37b4e85</a> -     """Assemble a CCD</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
61   <a href="#f67c2cdc">f67c2cdc</a> +     """!</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#f67c2cdc">f67c2cdc</a> +     \anchor AssembleCcdTask_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#f67c2cdc">f67c2cdc</a> +     \brief Assemble a set of amplifier images into a full detector size set of pixels.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Contents Contents</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_Purpose</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_Initialize</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_IO</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_Config</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_Debug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#f67c2cdc">f67c2cdc</a> +      - \ref ip_isr_assemble_Example</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Purpose Description</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#f67c2cdc">f67c2cdc</a> +     This task assembles sections of an image into a larger mosaic.  The sub-sections</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#f67c2cdc">f67c2cdc</a> +     are typically amplifier sections and are to be assembled into a detector size pixel grid.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#f67c2cdc">f67c2cdc</a> +     The assembly is driven by the entries in the raw amp information.  The task can be configured</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#f67c2cdc">f67c2cdc</a> +     to return a detector image with non-data (e.g. overscan) pixels included.  The task can also </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#f67c2cdc">f67c2cdc</a> +     renormalize the pixel values to a nominal gain of 1.  The task also removes exposure metadata that </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#f67c2cdc">f67c2cdc</a> +     has context in raw amps, but not in trimmed detectors (e.g. 'BIASSEC').</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Initialize Task initialization</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#f67c2cdc">f67c2cdc</a> +     \copydoc \_\_init\_\_</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_IO Inputs/Outputs to the assembleCcd method</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#f67c2cdc">f67c2cdc</a> +     \copydoc assembleCcd</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Config Configuration parameters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#f67c2cdc">f67c2cdc</a> +     See \ref AssembleCcdConfig</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Debug Debug variables</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#f67c2cdc">f67c2cdc</a> +     The \link lsst.pipe.base.cmdLineTask.CmdLineTask command line task\endlink interface supports a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#f67c2cdc">f67c2cdc</a> +     flag \c -d to import \b debug.py from your \c PYTHONPATH; see <a</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#f67c2cdc">f67c2cdc</a> +     href="http://lsst-web.ncsa.illinois.edu/~buildbot/doxygen/x_masterDoxyDoc/base_debug.html"></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#f67c2cdc">f67c2cdc</a> +     Using lsstDebug to control debugging output</a> for more about \b debug.py files.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#f67c2cdc">f67c2cdc</a> +     The available variables in AssembleCcdTask are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#f67c2cdc">f67c2cdc</a> +     <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#f67c2cdc">f67c2cdc</a> +       <DT> \c display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#f67c2cdc">f67c2cdc</a> +       <DD> A dictionary containing debug point names as keys with frame number as value. Valid keys are:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#f67c2cdc">f67c2cdc</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#f67c2cdc">f67c2cdc</a> +           <DT> assembledExposure </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#f67c2cdc">f67c2cdc</a> +           <DD> display assembled exposure </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#f67c2cdc">f67c2cdc</a> +         </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#f67c2cdc">f67c2cdc</a> +     </DL>  </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#f67c2cdc">f67c2cdc</a> +     \section ip_isr_assemble_Example A complete example of using AssembleCcdTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#f67c2cdc">f67c2cdc</a> +     This code is in runAssembleTask.py in the examples directory, and can be run as \em e.g.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#f67c2cdc">f67c2cdc</a> +     \code</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#f67c2cdc">f67c2cdc</a> +     python examples/runAssembleTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#f67c2cdc">f67c2cdc</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#374928b2">374928b2</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#f67c2cdc">f67c2cdc</a> +     \dontinclude runAssembleTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#f67c2cdc">f67c2cdc</a> +     Import the task.  There are other imports.  Read the source file for more info.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#f67c2cdc">f67c2cdc</a> +     \skipline AssembleCcdTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#374928b2">374928b2</a> +     \dontinclude exampleUtils.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#374928b2">374928b2</a> +     Create some input images with the help of some utilities in examples/exampleUtils.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#f67c2cdc">f67c2cdc</a> +     \skip makeAssemblyInput</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#f67c2cdc">f67c2cdc</a> +     \until inputData</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#f67c2cdc">f67c2cdc</a> +     The above numbers can be changed.  The assumption that the readout corner is flipped on every other amp is</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#f67c2cdc">f67c2cdc</a> +     hardcoded in createDetector.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#374928b2">374928b2</a> +     \dontinclude runAssembleTask.py</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#f67c2cdc">f67c2cdc</a> +     Run the assembler task</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#f67c2cdc">f67c2cdc</a> +     \skip runAssembler</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#f67c2cdc">f67c2cdc</a> +     \until frame += 1</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#f67c2cdc">f67c2cdc</a> +     <HR></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#f67c2cdc">f67c2cdc</a> +     To investigate the \ref ip_isr_assemble_Debug, put something like</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#f67c2cdc">f67c2cdc</a> +     \code{.py}</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#f67c2cdc">f67c2cdc</a> +     import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#f67c2cdc">f67c2cdc</a> +     def DebugInfo(name):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#f67c2cdc">f67c2cdc</a> +         di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#f67c2cdc">f67c2cdc</a> +         if name == "lsst.ip.isr.assembleCcdTask":</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#f67c2cdc">f67c2cdc</a> +             di.display = {'assembledExposure':2} </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#f67c2cdc">f67c2cdc</a> +         return di</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#f67c2cdc">f67c2cdc</a> +     lsstDebug.Info = DebugInfo</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#f67c2cdc">f67c2cdc</a> +     \endcode</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#f67c2cdc">f67c2cdc</a> +     into your debug.py file and run runAssembleTask.py with the \c --debug flag.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#f67c2cdc">f67c2cdc</a> +     Conversion notes:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#f67c2cdc">f67c2cdc</a> +         Display code should be updated once we settle on a standard way of controlling what is displayed.</div>
                    """
                    ConfigClass = AssembleCcdConfig
                    _DefaultName = "assembleCcd"
                    
                    def __init__(self, **kwargs):
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#f67c2cdc">f67c2cdc</a> +         """!Initialize the AssembleCcdTask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#f67c2cdc">f67c2cdc</a> +         The keys for removal specified in the config are added to a default set:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#f67c2cdc">f67c2cdc</a> +         ('DATASEC', 'BIASSEC', 'TRIMSEC', 'GAIN')</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#f67c2cdc">f67c2cdc</a> +         """</div>
                        pipeBase.Task.__init__(self, **kwargs)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#dd64d974">dd64d974</a> +         self.allKeysToRemove = ('DATASEC', 'BIASSEC', 'TRIMSEC', 'GAIN') + tuple(self.config.keysToRemove)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#c37b4e85">c37b4e85</a> +     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#99ed5a35">99ed5a35</a> +     def assembleCcd(self, assembleInput):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#f67c2cdc">f67c2cdc</a> +         """!Assemble a set of amps into a single CCD size image</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#f67c2cdc">f67c2cdc</a> +         \param[in] assembleInput -- Either a dictionary of amp lsst.afw.image.Exposures or a single </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#f67c2cdc">f67c2cdc</a> +                                     lsst.afw.image.Exposure containing all raw</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#f67c2cdc">f67c2cdc</a> +                                     amps.  If a dictionary of amp exposures, </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
172  <a href="#f67c2cdc">f67c2cdc</a> +                                     the key should be the amp name.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
173  <a href="#f67c2cdc">f67c2cdc</a> +         \return assembledCcd -- An lsst.afw.image.Exposure of the assembled amp sections.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#f67c2cdc">f67c2cdc</a> +         \throws TypeError with the following string:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#f67c2cdc">f67c2cdc</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#f67c2cdc">f67c2cdc</a> +           <DT> Expected either a dictionary of amp exposures or a single raw exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#f67c2cdc">f67c2cdc</a> +           <DD> The input exposures to be assembled do not adhere to the required format.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#f67c2cdc">f67c2cdc</a> +         </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#f67c2cdc">f67c2cdc</a> +         \throws RuntimeError with the following string:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#f67c2cdc">f67c2cdc</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#f67c2cdc">f67c2cdc</a> +         <DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#f67c2cdc">f67c2cdc</a> +           <DT> No ccd detector found</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#f67c2cdc">f67c2cdc</a> +           <DD> The detector set on the input exposure is not set.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#f67c2cdc">f67c2cdc</a> +         </DL></div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#c37b4e85">c37b4e85</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#f22d058a">f22d058a</a> +         ccd = None</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#da4824f6">da4824f6</a> +         if hasattr(assembleInput, "has_key"):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#da4824f6">da4824f6</a> +             # Get a detector object for this set of amps</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#f22d058a">f22d058a</a> +             ccd = assembleInput.itervalues().next().getDetector()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#99ed5a35">99ed5a35</a> +             # Sent a dictionary of input exposures, assume one amp per key keyed on amp name</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#99ed5a35">99ed5a35</a> +             def getNextExposure(amp):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#99ed5a35">99ed5a35</a> +                 return assembleInput[amp.getName()]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#da4824f6">da4824f6</a> +         elif hasattr(assembleInput, "getMaskedImage"):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#f22d058a">f22d058a</a> +             ccd = assembleInput.getDetector()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#99ed5a35">99ed5a35</a> +             # A single exposure was sent.  Use this to assemble.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#99ed5a35">99ed5a35</a> +             def getNextExposure(amp):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#99ed5a35">99ed5a35</a> +                 return assembleInput</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#99ed5a35">99ed5a35</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#99ed5a35">99ed5a35</a> +             raise TypeError("Expected either a dictionary of amp exposures or a single raw exposure")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#c37b4e85">c37b4e85</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
204  <a href="#25aa8a8a">25aa8a8a</a> +         if ccd is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
205  <a href="#99ed5a35">99ed5a35</a> +             raise RuntimeError("No ccd detector found")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#25aa8a8a">25aa8a8a</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
207  <a href="#da4824f6">da4824f6</a> +         if not self.config.doTrim:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
208  <a href="#99ed5a35">99ed5a35</a> +             outBox = cameraGeomUtils.calcRawCcdBBox(ccd)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#99ed5a35">99ed5a35</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#99ed5a35">99ed5a35</a> +             outBox = ccd.getBBox()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#99ed5a35">99ed5a35</a> +         outExposure = afwImage.ExposureF(outBox)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#25aa8a8a">25aa8a8a</a> +         outMI = outExposure.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#99ed5a35">99ed5a35</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#99ed5a35">99ed5a35</a> +         if self.config.doTrim:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
215  <a href="#da4824f6">da4824f6</a> +             assemble = cameraGeom.assembleAmplifierImage</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#99ed5a35">99ed5a35</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#99ed5a35">99ed5a35</a> +             assemble = cameraGeom.assembleAmplifierRawImage</div>
                        
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
62   <a href="#dd64d974">dd64d974</a> -         self.allKeysToRemove = ('DATASEC', 'BIASSEC', 'TRIMSEC', 'GAIN') + tuple(self.config.keysToRemove)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#c37b4e85">c37b4e85</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#7be5c786">7be5c786</a> -     def assembleCcd(self, inExposure):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#7be5c786">7be5c786</a> -         """Assemble a CCD by copying data sections and (usually) trimming out the rest</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#a21c7f73">a21c7f73</a> -         @param[in,out] inExposure   input exposure; the setTrimmed flag of the ccd device info may be modified</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#7be5c786">7be5c786</a> -         @return assembled exposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#c37b4e85">c37b4e85</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#7be5c786">7be5c786</a> -         ccd = cameraGeom.cast_Ccd(inExposure.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#7be5c786">7be5c786</a> -         if ccd is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#7be5c786">7be5c786</a> -             raise RuntimeError("Detector not a ccd")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#7be5c786">7be5c786</a> -         ccd.setTrimmed(self.config.doTrim)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#7be5c786">7be5c786</a> -         outExposure = afwImage.ExposureF(ccd.getAllPixels(self.config.doTrim))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#7be5c786">7be5c786</a> -         outMI = outExposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#7be5c786">7be5c786</a> -         inMI = inExposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#7be5c786">7be5c786</a> -         # Precompute amplifier information to avoid recomputing it for each image plane.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#7be5c786">7be5c786</a> -         ampInfoList = []</div>
                        for amp in ccd:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#99ed5a35">99ed5a35</a> +             inMI = getNextExposure(amp).getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
221  <a href="#99ed5a35">99ed5a35</a> +             assemble(outMI, inMI, amp)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#7be5c786">7be5c786</a> -             outBBox = amp.getAllPixels(self.config.doTrim)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#7be5c786">7be5c786</a> -             if self.config.doTrim:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#7be5c786">7be5c786</a> -                 inBBox = amp.getDiskDataSec()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#7be5c786">7be5c786</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#7be5c786">7be5c786</a> -                 inBBox = amp.getDiskAllPixels()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#7be5c786">7be5c786</a> -             ampInfoList.append(pipeBase.Struct(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#7be5c786">7be5c786</a> -                 amp = amp,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#7be5c786">7be5c786</a> -                 outBBox = outBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#7be5c786">7be5c786</a> -                 inBBox = inBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#7be5c786">7be5c786</a> -             ))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#7be5c786">7be5c786</a> -         </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#7be5c786">7be5c786</a> -         # Process one image plane at a time, since that is probably better for cache performance</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#7be5c786">7be5c786</a> -         # and is a requirement of amp.prepareAmpData.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#7be5c786">7be5c786</a> -         # Unfortunately image planes cannot be accessed by index or name,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#7be5c786">7be5c786</a> -         # so use getattr to access each image plane getter function</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#7be5c786">7be5c786</a> -         for imagePlaneGetterName in ("getImage", "getMask", "getVariance"):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#7be5c786">7be5c786</a> -             outImage = getattr(outMI, imagePlaneGetterName)()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#7be5c786">7be5c786</a> -             inImage = getattr(inMI, imagePlaneGetterName)()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#7be5c786">7be5c786</a> -             for ampInfo in ampInfoList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#7be5c786">7be5c786</a> -                 outView = outImage.Factory(outImage, ampInfo.outBBox, afwImage.LOCAL)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#7be5c786">7be5c786</a> -                 inView = inImage.Factory(inImage, ampInfo.inBBox, afwImage.PARENT)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#7be5c786">7be5c786</a> -                 outView <<= ampInfo.amp.prepareAmpData(inView)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#7be5c786">7be5c786</a> - </div>
                        outExposure.setDetector(ccd)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#7be5c786">7be5c786</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#7be5c786">7be5c786</a> -         self.postprocessExposure(outExposure=outExposure, inExposure=inExposure)</div>
              ?                                                                      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#da4824f6">da4824f6</a> +         self.postprocessExposure(outExposure=outExposure, inExposure=getNextExposure(ccd[0]))</div>
              ?                                                                      ^^^^^^^        ++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#7be5c786">7be5c786</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#7be5c786">7be5c786</a> +     </div>
                        return outExposure
                    
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#7be5c786">7be5c786</a> -     def assembleAmpList(self, ampExposureList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#7be5c786">7be5c786</a> -         """Assemble a collection of amplifier exposures into a CCD</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#7be5c786">7be5c786</a> -         @param[in,out]  ampExposureList collection of amp exposures to assemble;</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#7be5c786">7be5c786</a> -                                         the setTrimmed flag of the ccd device info may be modified</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#7be5c786">7be5c786</a> -         @return assembled exposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#c37b4e85">c37b4e85</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#7be5c786">7be5c786</a> -         ampExp0 = ampExposureList[0]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#7be5c786">7be5c786</a> -         amp0 = cameraGeom.cast_Amp(ampExp0.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#7be5c786">7be5c786</a> -         if amp0 is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#7be5c786">7be5c786</a> -             raise RuntimeError("No amp detector found in first amp exposure")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#7be5c786">7be5c786</a> -         ccd = cameraGeom.cast_Ccd(amp0.getParent())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#25aa8a8a">25aa8a8a</a> -         if ccd is None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#7be5c786">7be5c786</a> -             raise RuntimeError("No ccd detector found in amp detector")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#25aa8a8a">25aa8a8a</a> -         ccd.setTrimmed(self.config.doTrim)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#25aa8a8a">25aa8a8a</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#e5c0481e">e5c0481e</a> -         outExposure = afwImage.ExposureF(ccd.getAllPixels(self.config.doTrim))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#25aa8a8a">25aa8a8a</a> -         outMI = outExposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#7be5c786">7be5c786</a> -         </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#7be5c786">7be5c786</a> -         # Precompute amplifier information to avoid recomputing it for each image plane.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#7be5c786">7be5c786</a> -         ampInfoList = []</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#7be5c786">7be5c786</a> -         for ampExp in ampExposureList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#7be5c786">7be5c786</a> -             amp = cameraGeom.cast_Amp(ampExp.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#7be5c786">7be5c786</a> -             outBBox = amp.getAllPixels(self.config.doTrim)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#25aa8a8a">25aa8a8a</a> -             if self.config.doTrim:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#25aa8a8a">25aa8a8a</a> -                 inBBox = amp.getDiskDataSec()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#25aa8a8a">25aa8a8a</a> -             else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#25aa8a8a">25aa8a8a</a> -                 inBBox = amp.getDiskAllPixels()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#7be5c786">7be5c786</a> -             ampInfoList.append(pipeBase.Struct(</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#7be5c786">7be5c786</a> -                 amp = amp,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#7be5c786">7be5c786</a> -                 outBBox = outBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#7be5c786">7be5c786</a> -                 inBBox = inBBox,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#7be5c786">7be5c786</a> -                 ampMaskedImage = ampExp.getMaskedImage(),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#7be5c786">7be5c786</a> -             ))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#7be5c786">7be5c786</a> -         </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#7be5c786">7be5c786</a> -         # Process one image plane at a time, since that is probably better for cache performance</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#7be5c786">7be5c786</a> -         # and since it is the only way amp.prepareAmpData works.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#7be5c786">7be5c786</a> -         # Unfortunately image planes cannot be accessed by index or name,</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#7be5c786">7be5c786</a> -         # so use getattr to access each image plane getter function</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#7be5c786">7be5c786</a> -         for imagePlaneGetterName in ("getImage", "getMask", "getVariance"):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#7be5c786">7be5c786</a> -             outImage = getattr(outMI, imagePlaneGetterName)()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#7be5c786">7be5c786</a> -             for ampInfo in ampInfoList:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#7be5c786">7be5c786</a> -                 outView = outImage.Factory(outImage, ampInfo.outBBox, afwImage.LOCAL)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#7be5c786">7be5c786</a> -                 inImage = getattr(ampInfo.ampMaskedImage, imagePlaneGetterName)()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#7be5c786">7be5c786</a> -                 inView = inImage.Factory(inImage, ampInfo.inBBox, afwImage.PARENT)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#7be5c786">7be5c786</a> -                 outView <<= ampInfo.amp.prepareAmpData(inView)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#25aa8a8a">25aa8a8a</a> -         outExposure.setDetector(ccd)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#7be5c786">7be5c786</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#7be5c786">7be5c786</a> -         self.postprocessExposure(outExposure=outExposure, inExposure=ampExposureList[0])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#7be5c786">7be5c786</a> -     </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#25aa8a8a">25aa8a8a</a> -         return outExposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#25aa8a8a">25aa8a8a</a> - </div>
                    def postprocessExposure(self, outExposure, inExposure):
                        """Set exposure non-image attributes, including wcs and metadata and display exposure (if requested)
                        
                        Call after assembling the pixels
                        
                        @param[in,out]  outExposure assembled exposure:
                                                    - removes unwanted keywords
                                                    - sets calib, filter, and detector
                        @param[in]      inExposure  input exposure
                        """
                        self.setWcs(outExposure = outExposure, inExposure = inExposure)
                
                        exposureMetadata = inExposure.getMetadata()
                        for key in self.allKeysToRemove:
                            if exposureMetadata.exists(key):
                                exposureMetadata.remove(key)
                        outExposure.setMetadata(exposureMetadata)
                
                        if self.config.setGain:
                            self.setGain(outExposure = outExposure)
                
                        inCalib = inExposure.getCalib()
                        outCalib = outExposure.getCalib()
                        outCalib.setExptime(inCalib.getExptime())
                        outCalib.setMidTime(inCalib.getMidTime())
                
                        outExposure.setFilter(inExposure.getFilter())
                
                        self.display("assembledExposure", exposure=outExposure)
                
                    def setWcs(self, outExposure, inExposure):
                        """Set output WCS = input WCS, adjusted as required for datasecs not starting at lower left corner
                
                        @param[in,out]  outExposure     assembled exposure; wcs is set
                        @param[in]      inExposure      input exposure
                        """
                        if inExposure.hasWcs():
                            wcs = inExposure.getWcs()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
202  <a href="#55827ae3">55827ae3</a> -             ccd = cameraGeom.cast_Ccd(outExposure.getDetector())</div>
              ?                   --------------------                         -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#99ed5a35">99ed5a35</a> +             ccd = outExposure.getDetector()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
203  <a href="#25aa8a8a">25aa8a8a</a> -             amp0 = cameraGeom.cast_Amp(ccd[0])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
266  <a href="#99ed5a35">99ed5a35</a> +             amp0 = ccd[0]</div>
                            if amp0 is None:
                                raise RuntimeError("No amplifier detector information found")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
206  <a href="#25aa8a8a">25aa8a8a</a> -             amp0.prepareWcsData(wcs)</div>
              ?               ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#99ed5a35">99ed5a35</a> +             cameraGeomUtils.prepareWcsData(wcs, amp0)</div>
              ?             +  ^^^^^^^^^^^^                   ++++++
                            outExposure.setWcs(wcs)
                        else:
                            self.log.log(self.log.WARN, "No WCS found in input exposure")
                
                    def setGain(self, outExposure):
                        """Renormalize, if requested, and set gain metadata
                
                        @param[in,out]  outExposure     assembled exposure:
                                                        - scales the pixels if config.doRenorm is true
                                                        - adds some gain keywords to the metadata
                        """
                        if outExposure.getMaskedImage().getVariance().getArray().max() == 0:
                            raise RuntimeError("Can't calculate the effective gain since the variance plane is set to zero")
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
220  <a href="#e5c0481e">e5c0481e</a> -         ccd = cameraGeom.cast_Ccd(outExposure.getDetector())</div>
              ?               --------------------                         -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
283  <a href="#99ed5a35">99ed5a35</a> +         ccd = outExposure.getDetector()</div>
                        exposureMetadata = outExposure.getMetadata()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#c37b4e85">c37b4e85</a> -         gain = 0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#f22d058a">f22d058a</a> +         gain = 0.</div>
              ?                 +
                        namps = 0
                        for amp in ccd:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#25aa8a8a">25aa8a8a</a> -             gain += cameraGeom.cast_Amp(amp).getElectronicParams().getGain()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
288  <a href="#99ed5a35">99ed5a35</a> +             gain += amp.getGain()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#c37b4e85">c37b4e85</a> -             namps += 1.</div>
              ?                       -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#f22d058a">f22d058a</a> +             namps += 1</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#c37b4e85">c37b4e85</a> -         gain /= float(namps)</div>
              ?                 ------     -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#f22d058a">f22d058a</a> +         gain /= namps</div>
                        if self.config.doRenorm:
                            mi = outExposure.getMaskedImage()
                            mi *= gain
                            exposureMetadata.set("GAIN", 1.0)
                        medgain, meangain = calcEffectiveGain(outExposure.getMaskedImage())
                        exposureMetadata.add("MEDGAIN", medgain)
                        exposureMetadata.add("MEANGAIN", meangain)
                        exposureMetadata.add("GAINEFF", medgain)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="55827ae3"/></a>55827ae3</h3>

<pre>
commit 55827ae31eb7ceaa8b3bbbf5c10f2068b003508d
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 26 17:31:12 2012 -0700

    Bug fixes.
</pre>
<h3><a name="dd64d974"/></a>dd64d974</h3>

<pre>
commit dd64d974b781de74f813290a46f7e77c7686ea30
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 15:44:05 2012 -0700

    Most unit tests pass. Ccd assembly still needs work.
    Also, there are no unit tests for IsrTask methods.
</pre>
<h3><a name="a21c7f73"/></a>a21c7f73</h3>

<pre>
commit a21c7f733760165baa2097098c85225669ed7f54
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 16:38:43 2012 -0700

    Simplified the CCD assembly task.
    Documented the contents of isr.py
    Minor tweaks to ISR task.
</pre>
<h3><a name="c37b4e85"/></a>c37b4e85</h3>

<pre>
commit c37b4e853d4272bab570e913573ea7be2654160f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 09:02:56 2012 -0700

    First cut. Untested.
</pre>
<h3><a name="7be5c786"/></a>7be5c786</h3>

<pre>
commit 7be5c7862fcaa76ffd8b9553b28c3ba14406574c
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 26 14:34:34 2012 -0700

    Unify assembly.
    Speed up and clarify overscan correction.
</pre>
<h3><a name="25aa8a8a"/></a>25aa8a8a</h3>

<pre>
commit 25aa8a8ad5e1f98d5753b4b324cc043b2790252a
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 15:05:55 2012 -0700

    Simplified CCD assembly. Tweaked setting of variance plane.
</pre>
<h3><a name="e5c0481e"/></a>e5c0481e</h3>

<pre>
commit e5c0481ecc69cdbed8e0d057cd329645332087da
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 16:10:22 2012 -0700

    Fixed some bugs in the assembler. The unit test still needs an overhaul
    (it was written for LSST data).
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="dd64d974"/></a>dd64d974</h3>

<pre>
commit dd64d974b781de74f813290a46f7e77c7686ea30
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 15:44:05 2012 -0700

    Most unit tests pass. Ccd assembly still needs work.
    Also, there are no unit tests for IsrTask methods.
</pre>
<h3><a name="da4824f6"/></a>da4824f6</h3>

<pre>
commit da4824f6859b88cb47e6be8ce257ec40b940f5d4
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Tue Mar 11 13:33:02 2014 -0500

    Fixes for new cameraGeom.
</pre>
<h3><a name="f22d058a"/></a>f22d058a</h3>

<pre>
commit f22d058a5c1d352db07175ed13f82fda750bad69
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Thu Mar 13 15:18:06 2014 -0500

    Added defect test.  Addressed Becker's review
</pre>
<h3><a name="99ed5a35"/></a>99ed5a35</h3>

<pre>
commit 99ed5a35ca7328852e3e0ef8eccc72cec66a03d5
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Mon Mar 10 19:20:59 2014 -0500

    Updates to remove reference to old cameraGeom API
</pre>
<h3><a name="f67c2cdc"/></a>f67c2cdc</h3>

<pre>
commit f67c2cdcf7c40977d107d673938911e9113b415f
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Sat Aug 9 18:24:33 2014 -0700

    Added documentation for AssembleCcdTask.
    
    Added doxygen to document the operation of the AssembleCcdTask
    Also added an example of how to run the task.  The example makes up
    fake data and assembles them using both the per amp mechanism and using
    the mosaiced raw data.
</pre>
<h3><a name="374928b2"/></a>374928b2</h3>

<pre>
commit 374928b23445758c0e6589ceec8d44ec4b933418
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Mon Aug 11 08:13:38 2014 -0700

    Added documentation for IsrTask and an example.
    
    The example creates a mock dataRef and runs it through ISR.  The
    example only does overscan, dark and flat correction.  The methods
    that construct the mock data could be useful elsewhere.
</pre>
<h3><a name="7be5c786"/></a>7be5c786</h3>

<pre>
commit 7be5c7862fcaa76ffd8b9553b28c3ba14406574c
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 26 14:34:34 2012 -0700

    Unify assembly.
    Speed up and clarify overscan correction.
</pre>
<h3><a name="25aa8a8a"/></a>25aa8a8a</h3>

<pre>
commit 25aa8a8ad5e1f98d5753b4b324cc043b2790252a
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 15:05:55 2012 -0700

    Simplified CCD assembly. Tweaked setting of variance plane.
</pre>
<h3><a name="c37b4e85"/></a>c37b4e85</h3>

<pre>
commit c37b4e853d4272bab570e913573ea7be2654160f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 09:02:56 2012 -0700

    First cut. Untested.
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/testFringes.py"/></a>tests/testFringes.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import os
                import sys
                import unittest
                
                import numpy
                import lsst.utils.tests as tests
                import lsst.afw.math as afwMath
                import lsst.afw.image as afwImage
                import lsst.afw.display.ds9 as ds9
                import lsst.afw.image.utils as afwImageUtils
                from lsst.pipe.base import Struct
                from lsst.ip.isr.fringe import FringeTask
                
                try:
                    debug
                except NameError:
                    debug = False
                
                def checkDebug():
                    """Turn on Task debugging if desired"""
                    if debug:
                        import lsstDebug
                        print "Importing debug settings..."
                        def DebugInfo(name):
                            di = lsstDebug.getInfo(name)        # N.b. lsstDebug.Info(name) would call us recursively
                            if name == "lsst.ip.isr.fringe":
                                di.plot = True
                            return di
                        lsstDebug.Info = DebugInfo
                
                class FringeDataRef(object):
                    """Quacks like a ButlerDataRef, so we can provide an in-memory fringe frame"""
                    def __init__(self, fringe):
                        self.fringe = fringe
                        self.dataId = {'test': True}
                    def get(self, name="fringe", immediate=False):
                        if name == "fringe":
                            return self.fringe
                        if name == "ccdExposureId":
                            return 1000
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
63   <a href="#2294a266">2294a266</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
64   <a href="#2294a266">2294a266</a> - class MultipleFringeDataRef(object):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
65   <a href="#2294a266">2294a266</a> -     """Something like a ButlerDataRef that holds multiple fringe frames.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#2294a266">2294a266</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#2294a266">2294a266</a> -     This is only used by the MultipleFringeTask.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#2294a266">2294a266</a> -     """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#2294a266">2294a266</a> -     def __init__(self, fringeList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#2294a266">2294a266</a> -         self.fringeList = fringeList</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#2294a266">2294a266</a> -     def get(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#2294a266">2294a266</a> -         return self.fringeList</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#2294a266">2294a266</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#2294a266">2294a266</a> - class MultipleFringeTask(FringeTask):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#2294a266">2294a266</a> -     """A FringeTask that reads multiple fringe frames"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#2294a266">2294a266</a> -     def readFringes(self, dataRef, assembler=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#2294a266">2294a266</a> -         fringeList = dataRef.get()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#78215f34">78215f34</a> -         rng = numpy.random.RandomState(seed=0)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#78215f34">78215f34</a> -         positions = self.generatePositions(fringeList[0], rng)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#2294a266">2294a266</a> -         fluxes = numpy.ndarray([len(positions), len(fringeList)])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#2294a266">2294a266</a> -         for i, f in enumerate(fringeList):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#2294a266">2294a266</a> -             fluxes[:,i] = self.measureExposure(f, positions, title="Fringe frame")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#2294a266">2294a266</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#2294a266">2294a266</a> -         return Struct(fringes=fringeList, fluxes=fluxes, positions=positions)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#2294a266">2294a266</a> - </div>
                
                def createFringe(width, height, xFreq, xOffset, yFreq, yOffset):
                    """Create a fringe frame
                
                    @param width, height    Size of image
                    @param xFreq, yFreq     Frequency of sinusoids in x and y
                    @param xOffset, yOffset Phase of sinusoids in x and y
                    @return Fringe frame
                    """
                    image = afwImage.ImageF(width, height)
                    array = image.getArray()
                    x, y = numpy.indices(array.shape)
                    array[x,y] = numpy.sin(xFreq*x + xOffset) + numpy.sin(yFreq*y + yOffset)
                    mi = afwImage.makeMaskedImage(image)
                    exp = afwImage.makeExposure(mi)
                    exp.setFilter(afwImage.Filter('FILTER'))
                    return exp
                
                frame = 1 # ds9 frame
                
                class FringeTestCase(unittest.TestCase):
                    """Tests of the FringeTask"""
                    def setUp(self):
                        self.size = 512
                        self.config = FringeTask.ConfigClass()
                        self.config.filters = ['FILTER']
                        self.config.num = 5000
                        self.config.small = 1
                        self.config.large = 128
                        self.config.pedestal = False
                        afwImageUtils.defineFilter('FILTER', lambdaEff=0)
                
                    def tearDown(self):
                        afwImageUtils.resetFilters()
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#2294a266">2294a266</a> -     def checkFringe(self, task, exp, dataRef, precision):</div>
              ?                                      ^^^^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#73bd6734">73bd6734</a> +     def checkFringe(self, task, exp, fringes, precision):</div>
              ?                                      ^^^^^ ^
                        """Run fringe subtraction and verify
                
                        @param task         Task to run
                        @param exp          Science exposure
                        @param dataRef      Data reference that will provide the fringes
                        @param precision    Precision for assertAlmostEqual
                        """
                        if debug:
                            global frame
                            ds9.mtv(exp, frame=frame, title="Science exposure")
                            frame += 1
                            fringe = dataRef.get()
                            if not isinstance(fringe, list):
                                fringe = [fringe]
                            for i, f in enumerate(fringe):
                                ds9.mtv(f, frame=frame, title="Fringe frame %d" % (i+1))
                                frame += 1
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#2294a266">2294a266</a> -         task.run(exp, dataRef)</div>
              ?                       ^^^^^ ^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#73bd6734">73bd6734</a> +         task.run(exp, fringes)</div>
              ?                       ^^^^^ ^
                
                        mi = exp.getMaskedImage()
                
                        if debug:
                            ds9.mtv(exp, frame=frame, title="Subtracted")
                            frame += 1
                
                        mi -= afwMath.makeStatistics(mi, afwMath.MEAN).getValue()
                        self.assertLess(afwMath.makeStatistics(mi, afwMath.STDEV).getValue(), precision)
                
                    def testSingle(self, pedestal=0.0, precision=1.0e-4):
                        """Test subtraction of a single fringe frame
                
                        @param pedestal    Pedestal to add into fringe frame
                        @param precision   Precision for assertAlmostEqual
                        """
                        xFreq = numpy.pi / 10.0
                        xOffset = 1.0
                        yFreq = numpy.pi / 15.0
                        yOffset = 0.5
                        scale = 1.0
                        fringe = createFringe(self.size, self.size, xFreq, xOffset, yFreq, yOffset)
                        fMi = fringe.getMaskedImage()
                        fMi += pedestal
                        exp = createFringe(self.size, self.size, xFreq, xOffset, yFreq, yOffset)
                        eMi = exp.getMaskedImage()
                        eMi *= scale
                
                        task = FringeTask(name="fringe", config=self.config)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#2294a266">2294a266</a> -         dataRef = FringeDataRef(fringe)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#2294a266">2294a266</a> -         self.checkFringe(task, exp, dataRef, precision)</div>
              ?                                     ^^^^^ -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#73bd6734">73bd6734</a> +         self.checkFringe(task, exp, fringe, precision)</div>
              ?                                     ^^^^^
                
                    def testPedestal(self):
                        """Test subtraction of a fringe frame with a pedestal"""
                        self.config.pedestal = True
                        self.testSingle(pedestal=10000.0, precision=1.0e-3) # Not sure why this produces less precision
                
                    def testMultiple(self):
                        """Test subtraction of multiple fringe frames"""
                        xFreqList = [0.1, 0.13, 0.06]
                        xOffsetList = [0.0, 0.1, 0.2]
                        yFreqList = [0.09, 0.12, 0.07]
                        yOffsetList = [0.3, 0.2, 0.1]
                        fringeList = [createFringe(self.size, self.size, xFreq, xOffset, yFreq, yOffset)
                                      for xFreq, xOffset, yFreq, yOffset in
                                      zip(xFreqList, xOffsetList, yFreqList, yOffsetList)]
                
                        # Generate science frame
                        scales = [0.33, 0.33, 0.33]
                        image = afwImage.ImageF(self.size, self.size)
                        image.set(0)
                        for s, f in zip(scales, fringeList):
                            image.scaledPlus(s, f.getMaskedImage().getImage())
                        mi = afwImage.makeMaskedImage(image)
                        exp = afwImage.makeExposure(mi)
                        exp.setFilter(afwImage.Filter('FILTER'))
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#2294a266">2294a266</a> -         task = MultipleFringeTask(name="multiFringe", config=self.config)</div>
              ?                --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
174  <a href="#73bd6734">73bd6734</a> +         task = FringeTask(name="multiFringe", config=self.config)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#2294a266">2294a266</a> -         dataRef = MultipleFringeDataRef(fringeList)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#2294a266">2294a266</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#2294a266">2294a266</a> -         self.checkFringe(task, exp, dataRef, precision=1.0e-2)</div>
              ?                                     ^^ ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#73bd6734">73bd6734</a> +         self.checkFringe(task, exp, fringeList, precision=1.0e-2)</div>
              ?                                     ^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#2294a266">2294a266</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#71f0adbe">71f0adbe</a> +     def testRunDataRef(self, pedestal=0.0, precision=1.0e-4):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#71f0adbe">71f0adbe</a> +         """Test the .runDataRef method for complete test converage</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#71f0adbe">71f0adbe</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#71f0adbe">71f0adbe</a> +         @param pedestal    Pedestal to add into fringe frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
181  <a href="#71f0adbe">71f0adbe</a> +         @param precision   Precision for assertAlmostEqual</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#71f0adbe">71f0adbe</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#71f0adbe">71f0adbe</a> +         xFreq = numpy.pi / 10.0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#71f0adbe">71f0adbe</a> +         xOffset = 1.0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
185  <a href="#71f0adbe">71f0adbe</a> +         yFreq = numpy.pi / 15.0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
186  <a href="#71f0adbe">71f0adbe</a> +         yOffset = 0.5</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
187  <a href="#71f0adbe">71f0adbe</a> +         scale = 1.0</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
188  <a href="#71f0adbe">71f0adbe</a> +         fringe = createFringe(self.size, self.size, xFreq, xOffset, yFreq, yOffset)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#71f0adbe">71f0adbe</a> +         fMi = fringe.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#71f0adbe">71f0adbe</a> +         fMi += pedestal</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#71f0adbe">71f0adbe</a> +         exp = createFringe(self.size, self.size, xFreq, xOffset, yFreq, yOffset)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#71f0adbe">71f0adbe</a> +         eMi = exp.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#71f0adbe">71f0adbe</a> +         eMi *= scale</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#71f0adbe">71f0adbe</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#71f0adbe">71f0adbe</a> +         task = FringeTask(name="fringe", config=self.config)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
196  <a href="#71f0adbe">71f0adbe</a> +         dataRef = FringeDataRef(fringe)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#71f0adbe">71f0adbe</a> +         task.runDataRef(exp, dataRef)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#71f0adbe">71f0adbe</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#71f0adbe">71f0adbe</a> +         mi = exp.getMaskedImage()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
200  <a href="#71f0adbe">71f0adbe</a> +         mi -= afwMath.makeStatistics(mi, afwMath.MEAN).getValue()</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
201  <a href="#71f0adbe">71f0adbe</a> +         self.assertLess(afwMath.makeStatistics(mi, afwMath.STDEV).getValue(), precision)</div>
                
                def suite():
                    """Returns a suite containing all the test cases in this module."""
                    tests.init()
                    checkDebug()
                
                    suites = []
                    suites += unittest.makeSuite(FringeTestCase)
                    suites += unittest.makeSuite(tests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(exit=False):
                    """Run the tests"""
                    tests.run(suite(), exit)
                
                if __name__ == "__main__":
                    if len(sys.argv) == 2 and sys.argv[1] == "--debug":
                        debug = True
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="78215f34"/></a>78215f34</h3>

<pre>
commit 78215f3497f77c3630cf4ac8800a1aac976dbaea
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri May 16 18:27:17 2014 -0400

    Make random number generation in fringe code deterministic
</pre>
<h3><a name="2294a266"/></a>2294a266</h3>

<pre>
commit 2294a2665e86460118430a6302054df27bb4b481
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 28 15:00:59 2012 -0500

    Add test for fringe subtraction.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="71f0adbe"/></a>71f0adbe</h3>

<pre>
commit 71f0adbe8a39c226842e3cc0f29eab01a7e7c9af
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 30 13:45:05 2015 -0500

    testFringe.py: Add testRunDataRef
</pre>
<h3><a name="73bd6734"/></a>73bd6734</h3>

<pre>
commit 73bd67343a2a8ec5129fe9aca8cea204439047b7
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Sun Feb 15 19:57:37 2015 -0600

    Refactor IsrTask/FringeTask s.t. run() takes exposures, runDataRef() a ButlerDataRef
    
        See epic DM-1113 for background
        - Push all interaction with the Butler to readIsrData()/readFringeData()
        - Update all lower-level methods like [bias/flat/dark]Correction to take
          exposures instead of dataRefs.
        - Add doAssembleCcd config to give run option to operate on single amps
        - Replace word "detrend" with "isr" in names
</pre>
<h3><a name="2294a266"/></a>2294a266</h3>

<pre>
commit 2294a2665e86460118430a6302054df27bb4b481
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 28 15:00:59 2012 -0500

    Add test for fringe subtraction.
</pre>
</div>


[Return to list](#homelist)
# <a name="tests/testOverscanCorrection.py"/></a>tests/testOverscanCorrection.py
### Diff:

<pre>
                #!/usr/bin/env python
                
                # 
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                # 
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                # 
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                # 
                # You should have received a copy of the LSST License Statement and 
                # the GNU General Public License along with this program.  If not, 
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
24   <a href="#dabfe113">dabfe113</a> - import os</div>
                import unittest
                
                import lsst.utils.tests as tests
                import lsst.afw.image as afwImage
                import lsst.afw.geom as afwGeom
                import lsst.ip.isr as ipIsr
                
                class IsrTestCases(unittest.TestCase):
                    def setUp(self):
                        self.overscanKeyword = "BIASSEC"
                
                    def tearDown(self):
                        del self.overscanKeyword
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
39   <a href="#dabfe113">dabfe113</a> -     def testOverscanCorrectionY(self):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
38   <a href="#0021ba86">0021ba86</a> +     def testOverscanCorrectionY(self, **kwargs):</div>
              ?                                     ++++++++++
                        bbox = afwGeom.Box2I(afwGeom.Point2I(0,0),
                                            afwGeom.Point2I(9,12))
                        maskedImage = afwImage.MaskedImageF(bbox)
                        maskedImage.set(10, 0x0, 1)
                
                        # these should be functionally equivalent
                        bbox     = afwGeom.Box2I(afwGeom.Point2I(0,10),
                                                 afwGeom.Point2I(9,12))
                        biassec  = '[1:10,11:13]'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
49   <a href="#dd64d974">dd64d974</a> -         overscan = afwImage.MaskedImageF(maskedImage, bbox, afwImage.PARENT)</div>
              ?                                                           -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
48   <a href="#219584a3">219584a3</a> +         overscan = afwImage.MaskedImageF(maskedImage, bbox)</div>
                        overscan.set(2, 0x0, 1)
                        
                        exposure = afwImage.ExposureF(maskedImage, None)
                        metadata = exposure.getMetadata()
                        metadata.setString(self.overscanKeyword, biassec)
                
                        ipIsr.overscanCorrection(maskedImage, overscan.getImage(), fitType = "MEDIAN")
                
                        height        = maskedImage.getHeight()
                        width         = maskedImage.getWidth()
                        for j in range(height):
                            for i in range(width):
                                if j >= 10:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0)
                                else:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 8)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#dabfe113">dabfe113</a> -     def testOverscanCorrectionX(self):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
66   <a href="#0021ba86">0021ba86</a> +     def testOverscanCorrectionX(self, **kwargs):</div>
              ?                                     ++++++++++
                        bbox = afwGeom.Box2I(afwGeom.Point2I(0,0),
                                            afwGeom.Point2I(12,9))
                        maskedImage = afwImage.MaskedImageF(bbox)
                        maskedImage.set(10, 0x0, 1)
                
                        # these should be functionally equivalent
                        bbox     = afwGeom.Box2I(afwGeom.Point2I(10,0),
                                                 afwGeom.Point2I(12,9))
                        biassec  = '[11:13,1:10]'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#dd64d974">dd64d974</a> -         overscan = afwImage.MaskedImageF(maskedImage, bbox, afwImage.PARENT)</div>
              ?                                                           -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#219584a3">219584a3</a> +         overscan = afwImage.MaskedImageF(maskedImage, bbox)</div>
                        overscan.set(2, 0x0, 1)
                        
                        exposure = afwImage.ExposureF(maskedImage, None)
                        metadata = exposure.getMetadata()
                        metadata.setString(self.overscanKeyword, biassec)
                
                        ipIsr.overscanCorrection(maskedImage, overscan.getImage(), fitType = "MEDIAN")
                
                        height        = maskedImage.getHeight()
                        width         = maskedImage.getWidth()
                        for j in range(height):
                            for i in range(width):
                                if i >= 10:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0)
                                else:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 8)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#9b6cdadf">9b6cdadf</a> -     def checkPolyOverscanCorrectionX(self, fitType):</div>
              ?                                            ^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#0021ba86">0021ba86</a> +     def checkPolyOverscanCorrectionX(self, **kwargs):</div>
              ?                                            ^^^^^^^^
                        bbox = afwGeom.Box2I(afwGeom.Point2I(0,0),
                                            afwGeom.Point2I(12,9))
                        maskedImage = afwImage.MaskedImageF(bbox)
                        maskedImage.set(10, 0x0, 1)
                
                        # these should be functionally equivalent
                        bbox     = afwGeom.Box2I(afwGeom.Point2I(10,0),
                                                 afwGeom.Point2I(12,9))
                        biassec  = '[11:13,1:10]'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#dd64d974">dd64d974</a> -         overscan = afwImage.MaskedImageF(maskedImage, bbox, afwImage.PARENT)</div>
              ?                                                           -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#219584a3">219584a3</a> +         overscan = afwImage.MaskedImageF(maskedImage, bbox)</div>
                        overscan.set(2, 0x0, 1)
                        for i in range(bbox.getDimensions()[1]):
                            for j,off in enumerate([-0.5, 0.0, 0.5]):
                                overscan.getImage().set(j,i,2+i+off)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#dabfe113">dabfe113</a> -         </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#0021ba86">0021ba86</a> + </div>
                        exposure = afwImage.ExposureF(maskedImage, None)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#9b6cdadf">9b6cdadf</a> -         ipIsr.overscanCorrection(maskedImage, overscan.getImage(), fitType=fitType)</div>
              ?                                                                    ^^^^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#0021ba86">0021ba86</a> +         ipIsr.overscanCorrection(maskedImage, overscan.getImage(), **kwargs)</div>
              ?                                                                    ^^^^^^^^
                
                        height        = maskedImage.getHeight()
                        width         = maskedImage.getWidth()
                        for j in range(height):
                            for i in range(width):
                                if i == 10:
                                    self.assertEqual(maskedImage.getImage().get(i,j), -0.5)
                                elif i == 11:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0)
                                elif i == 12:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0.5)
                                else:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 10 - 2 - j)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#9b6cdadf">9b6cdadf</a> -     def checkPolyOverscanCorrectionY(self, fitType):</div>
              ?                                            ^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#0021ba86">0021ba86</a> +     def checkPolyOverscanCorrectionY(self, **kwargs):</div>
              ?                                            ^^^^^^^^
                        bbox = afwGeom.Box2I(afwGeom.Point2I(0,0),
                                            afwGeom.Point2I(9,12))
                        maskedImage = afwImage.MaskedImageF(bbox)
                        maskedImage.set(10, 0x0, 1)
                
                        # these should be functionally equivalent
                        bbox     = afwGeom.Box2I(afwGeom.Point2I(0,10),
                                                 afwGeom.Point2I(9,12))
                        biassec  = '[11:13,1:10]'
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#dd64d974">dd64d974</a> -         overscan = afwImage.MaskedImageF(maskedImage, bbox, afwImage.PARENT)</div>
              ?                                                           -----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#219584a3">219584a3</a> +         overscan = afwImage.MaskedImageF(maskedImage, bbox)</div>
                        overscan.set(2, 0x0, 1)
                        for i in range(bbox.getDimensions()[0]):
                            for j,off in enumerate([-0.5, 0.0, 0.5]):
                                overscan.getImage().set(i,j,2+i+off)
                        
                        exposure = afwImage.ExposureF(maskedImage, None)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#9b6cdadf">9b6cdadf</a> -         ipIsr.overscanCorrection(maskedImage, overscan.getImage(), fitType=fitType)</div>
              ?                                                                    ^^^^^^^^^^^^^^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#0021ba86">0021ba86</a> +         ipIsr.overscanCorrection(maskedImage, overscan.getImage(), **kwargs)</div>
              ?                                                                    ^^^^^^^^
                
                        height        = maskedImage.getHeight()
                        width         = maskedImage.getWidth()
                        for j in range(height):
                            for i in range(width):
                                if j == 10:
                                    self.assertEqual(maskedImage.getImage().get(i,j), -0.5)
                                elif j == 11:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0)
                                elif j == 12:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 0.5)
                                else:
                                    self.assertEqual(maskedImage.getImage().get(i,j), 10 - 2 - i)
                
                    def testPolyOverscanCorrection(self):
                        for fitType in ("POLY", "CHEB", "LEG"):
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#9b6cdadf">9b6cdadf</a> -             self.checkPolyOverscanCorrectionX(fitType)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#0021ba86">0021ba86</a> +             self.checkPolyOverscanCorrectionX(fitType=fitType)</div>
              ?                                                      ++++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#9b6cdadf">9b6cdadf</a> -             self.checkPolyOverscanCorrectionY(fitType)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#0021ba86">0021ba86</a> +             self.checkPolyOverscanCorrectionY(fitType=fitType)</div>
              ?                                                      ++++++++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#0021ba86">0021ba86</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#0021ba86">0021ba86</a> +     def testSplineOverscanCorrection(self):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#0021ba86">0021ba86</a> +         for fitType in ("NATURAL_SPLINE", "CUBIC_SPLINE", "AKIMA_SPLINE"):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#bc212058">bc212058</a> +             self.checkPolyOverscanCorrectionX(fitType=fitType, order=5)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#bc212058">bc212058</a> +             self.checkPolyOverscanCorrectionY(fitType=fitType, order=5)</div>
                
                        
                def suite():
                    """Returns a suite containing all the test cases in this module."""
                    tests.init()
                
                    suites = []
                    suites += unittest.makeSuite(IsrTestCases)
                    suites += unittest.makeSuite(tests.MemoryTestCase)
                    return unittest.TestSuite(suites)
                
                def run(exit=False):
                    """Run the tests"""
                    tests.run(suite(), exit)
                
                if __name__ == "__main__":
                    run(True)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="9b6cdadf"/></a>9b6cdadf</h3>

<pre>
commit 9b6cdadf4ae00b2974a395e0445635b52c6e2051
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 20 13:37:27 2013 -0500

    overscan: improve overscan polynomial fitting
    
    Reduce overscan using mean instead of median.
    Allow use of Chebyshev and Legendre polynomials.
    Add debugging plots of overscan.
</pre>
<h3><a name="dabfe113"/></a>dabfe113</h3>

<pre>
commit dabfe1139c662bf6cc466a360b084c5621e34ce9
Author: becker <becker@git.lsstcorp.org>
Date:   Fri Mar 6 23:47:26 2009 +0000

    Last unit test written but depenedent on the solution of ticket #686.  #327.
</pre>
<h3><a name="dd64d974"/></a>dd64d974</h3>

<pre>
commit dd64d974b781de74f813290a46f7e77c7686ea30
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 15:44:05 2012 -0700

    Most unit tests pass. Ccd assembly still needs work.
    Also, there are no unit tests for IsrTask methods.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="219584a3"/></a>219584a3</h3>

<pre>
commit 219584a3ca9859724200844e1faf91a094ea079b
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 08:42:42 2014 -0700

    Use default image origin when possible
</pre>
<h3><a name="0021ba86"/></a>0021ba86</h3>

<pre>
commit 0021ba86ff48594c934f35f23bdd4463673a4604
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Jan 9 16:06:18 2014 -0500

    add test for spline overscan correction (#3065)
</pre>
<h3><a name="bc212058"/></a>bc212058</h3>

<pre>
commit bc2120587b7d4b9cf1b3fe4ccbed870f03c1f6b1
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Feb 14 16:01:39 2014 -0500

    overscan: rename polyOrder to order (#3065)
    
    As requested in code review.  Overloading "order" to mean
    either polynomial order or spline knots has precedence in
    IRAF (e.g., ccdproc).
</pre>
</div>


[Return to list](#homelist)
# <a name="src/Isr.cc"/></a>src/Isr.cc
### Diff:

<pre>
                // -*- lsst-c++ -*-
                
                /* 
                 * LSST Data Management System
                 * Copyright 2008, 2009, 2010 LSST Corporation.
                 * 
                 * This product includes software developed by the
                 * LSST Project (http://www.lsst.org/).
                 *
                 * This program is free software: you can redistribute it and/or modify
                 * it under the terms of the GNU General Public License as published by
                 * the Free Software Foundation, either version 3 of the License, or
                 * (at your option) any later version.
                 * 
                 * This program is distributed in the hope that it will be useful,
                 * but WITHOUT ANY WARRANTY; without even the implied warranty of
                 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                 * GNU General Public License for more details.
                 * 
                 * You should have received a copy of the LSST License Statement and 
                 * the GNU General Public License along with this program.  If not, 
                 * see <http://www.lsstcorp.org/LegalNotices/>.
                 */
                 
                
                #include "lsst/pex/logging/Trace.h"
                #include "lsst/afw/math.h"
                #include "lsst/afw/math/Statistics.h"
                #include "lsst/ip/isr.h"
                
                namespace lsst { namespace ip { namespace isr {
                
                // Functions
                template <typename ImageT>
                void LookupTableReplace<ImageT>::apply(afw::image::MaskedImage<ImageT> &image, float gain) const {
                    double igain = 1.0 / gain;
                    int nPixTooHigh = 0;
                    int nPixTooLow = 0;
                    for (int y = 0; y != image.getHeight(); ++y) {
                        for (x_iterator ptr = image.row_begin(y), end = image.row_end(y); ptr != end; ++ptr) {
                            int ind = static_cast<int>(ptr.image() + 0.5);  // Rounded pixel value
                            if (ind < 0) {
                                ind = 0;
                                ++nPixTooLow;
                            } else if (ind >= _max) {
                                ind = _max - 1;
                                ++nPixTooHigh;
                            }
                            PixelT p = PixelT(_table[ind],  (*ptr).mask(), _table[ind] * igain);
                            *ptr = p;
                        }
                    }
                    if ((nPixTooHigh > 0) || (nPixTooLow > 0)) {
                        // log message
                        pex::logging::TTrace<1>("lsst.ip.isr.LookupTableReplace.apply", 
                            "Data truncated; %d pixels were < 0; %d pixels were >= %d", nPixTooLow, nPixTooHigh, _max);
                    }
                }
                
                template <typename PixelT>
                size_t maskNans(afw::image::MaskedImage<PixelT> const& mi, afw::image::MaskPixel maskVal,
                                afw::image::MaskPixel allow)
                {
                    typedef typename afw::image::MaskedImage<PixelT>::x_iterator x_iterator;
                    size_t nPix = 0;
                    for (int y = 0; y != mi.getHeight(); ++y) {
                        for (x_iterator ptr = mi.row_begin(y), end = mi.row_end(y); ptr != end; ++ptr) {
                            if (!(ptr.mask() & allow) && (!utils::lsst_isfinite(ptr.image()) ||
                                                          !utils::lsst_isfinite(ptr.variance()))) {
                                nPix += 1;
                                ptr.mask() |= maskVal;
                            }
                        }
                    }
                    return nPix;
                }
                
                template<typename ImagePixelT, typename FunctionT>
                void fitOverscanImage(
                    boost::shared_ptr< afw::math::Function1<FunctionT> > &overscanFunction,
                    afw::image::MaskedImage<ImagePixelT> const& overscan,
                    double ssize,
                    int sigma
                ) {
                    typedef afw::image::MaskedImage<ImagePixelT> MaskedImage;
                
                
                    const int height = overscan.getHeight();
                    const int width  = overscan.getWidth();
                    std::vector<double> values(height);
                    std::vector<double> errors(height);
                    std::vector<double> positions(height);
                
                    std::vector<double> parameters(overscanFunction->getNParameters(), 0.);
                    std::vector<double> stepsize(overscanFunction->getNParameters(), ssize);
                    
                    for (int y = 0; y < height; ++y) {
                        /**
                        afw::geom::Box2I bbox       = afw::geom::Box2I( afw::geom::Point2I(0, y),
                                                              afw::geom::Point2I(0, width) );
                        The above was how this was defined before ticket #1556.  As I understand it
                        the following is the new way to do this
                        **/
                        afw::geom::Box2I bbox = afw::geom::Box2I(afw::geom::Point2I(0,y), afw::geom::Point2I(width,y));
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#637d994f">637d994f</a> -         MaskedImage mi         = MaskedImage(overscan, bbox, afw::image::PARENT);</div>
              ?                                                            --------------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#219584a3">219584a3</a> +         MaskedImage mi         = MaskedImage(overscan, bbox);</div>
                        afw::math::Statistics stats = afw::math::makeStatistics(*(mi.getImage()), afw::math::MEAN | afw::math::STDEV);
                
                        values[y]    = stats.getValue(afw::math::MEAN);
                        errors[y]    = stats.getValue(afw::math::STDEV);
                        positions[y] = y;
                     
                    }
                    afw::math::FitResults fitResults = afw::math::minimize(
                        *overscanFunction,
                        parameters,
                        stepsize,
                        values,
                        errors,
                        positions,
                        sigma
                        );
                    
                    overscanFunction->setParameters(fitResults.parameterList);
                }
                
                std::string between(std::string &s, char ldelim, char rdelim) {
                    std::string::iterator b(s.begin());
                    std::string::iterator e(s.end());
                    std::string::iterator lp;
                    std::string::iterator rp;
                    
                    std::string result;
                    
                    if((lp = std::find(b, e, ldelim)) != e)
                        if((rp = std::find(++lp, e, rdelim)) != e)
                            result = std::string(lp, rp);
                    
                    return result;
                }
                
                // Explicit instantiations
                
                template
                void fitOverscanImage(
                     boost::shared_ptr<afw::math::Function1<double> > &overscanFunction, 
                    afw::image::MaskedImage<float> const& overscan,
                    double ssize,
                    int sigma);
                
                template
                void fitOverscanImage(
                     boost::shared_ptr<afw::math::Function1<double> > &overscanFunction,
                    afw::image::MaskedImage<double> const& overscan,
                    double ssize,
                    int sigma);
                
                template class CountMaskedPixels<float>;
                template class CountMaskedPixels<double>;
                
                // Integer classes make no sense for multiplicative table
                //   unless you change the image type
                template class LookupTableMultiplicative<float>;
                template class LookupTableMultiplicative<double>;
                
                // Only integer images make sense for a replacement table
                template class LookupTableReplace<int>;
                // But we turn our images into floats immediately, so use it
                template class LookupTableReplace<float>;
                // Function to mask nans in a masked image
                template size_t maskNans<float>(afw::image::MaskedImage<float> const&, afw::image::MaskPixel,
                                                afw::image::MaskPixel);
                template size_t maskNans<double>(afw::image::MaskedImage<double> const&, afw::image::MaskPixel,
                                                 afw::image::MaskPixel); 
                
                }}} // namespace lsst::ip::isr
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="637d994f"/></a>637d994f</h3>

<pre>
commit 637d994ff8b06ef9c3270d63bf7a756b99481e05
Author: jbosch <jbosch@git.lsstcorp.org>
Date:   Mon Nov 14 17:57:48 2011 +0000

    updated .build file, fixed doxygen warnings (by switching to namespace blocks in source file)
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="219584a3"/></a>219584a3</h3>

<pre>
commit 219584a3ca9859724200844e1faf91a094ea079b
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 08:42:42 2014 -0700

    Use default image origin when possible
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/ip/isr/fringe.py"/></a>python/lsst/ip/isr/fringe.py
### Diff:

<pre>
                #!/usr/bin/env python
                #
                # LSST Data Management System
                # Copyright 2012 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                
                import numpy
                
                import lsst.afw.geom as afwGeom
                import lsst.afw.image as afwImage
                import lsst.afw.math as afwMath
                import lsst.afw.display.ds9 as ds9
                
                from lsst.pipe.base import Task, Struct, timeMethod
                from lsst.pex.config import Config, Field, ListField, ConfigField
                
                def getFrame():
                    """Produce a new frame number each time"""
                    getFrame.frame += 1
                    return getFrame.frame
                getFrame.frame = 0
                
                class FringeStatisticsConfig(Config):
                    """Options for measuring fringes on an exposure"""
                    badMaskPlanes = ListField(dtype=str, default=["SAT"], doc="Ignore pixels with these masks")
                    stat = Field(dtype=int, default=afwMath.MEDIAN, doc="Statistic to use")
                    clip = Field(dtype=float, default=3.0, doc="Sigma clip threshold")
                    iterations = Field(dtype=int, default=3, doc="Number of fitting iterations")
                    rngSeedOffset = Field(dtype=int, default=0,
                                          doc="Offset to the random number generator seed (full seed includes exposure ID)")
                
                
                class FringeConfig(Config):
                    """Fringe subtraction options"""
                    filters = ListField(dtype=str, default=[], doc="Only fringe-subtract these filters")
                    num = Field(dtype=int, default=30000, doc="Number of fringe measurements")
                    small = Field(dtype=int, default=3, doc="Half-size of small (fringe) measurements (pixels)")
                    large = Field(dtype=int, default=30, doc="Half-size of large (background) measurements (pixels)")
                    iterations = Field(dtype=int, default=20, doc="Number of fitting iterations")
                    clip = Field(dtype=float, default=3.0, doc="Sigma clip threshold")
                    stats = ConfigField(dtype=FringeStatisticsConfig, doc="Statistics for measuring fringes")
                    pedestal = Field(dtype=bool, default=False, doc="Remove fringe pedestal?")
                
                class FringeTask(Task):
                    """Task to remove fringes from a science exposure
                
                    We measure fringe amplitudes at random positions on the science exposure
                    and at the same positions on the (potentially multiple) fringe frames
                    and solve for the scales simultaneously.
                    """
                    ConfigClass = FringeConfig
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#2081540b">2081540b</a> -     @timeMethod</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#2081540b">2081540b</a> -     def run(self, exposure, dataRef, assembler=None):</div>
              ?          ^       ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#cb48f5a3">cb48f5a3</a> +     def readFringes(self, dataRef, assembler=None):</div>
              ?          ^^^^^^ +++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#2081540b">2081540b</a> -         """Remove fringes from the provided science exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#cb48f5a3">cb48f5a3</a> +         """Read the fringe frame(s)</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#2081540b">2081540b</a> -         Fringes are only subtracted if the science exposure has a filter</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#2081540b">2081540b</a> -         listed in the configuration.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#cb48f5a3">cb48f5a3</a> +         The current implementation assumes only a single fringe frame and</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#cb48f5a3">cb48f5a3</a> +         will have to be updated to support multi-mode fringe subtraction.</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#2081540b">2081540b</a> -         @param exposure    Science exposure from which to remove fringes</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#cb48f5a3">cb48f5a3</a> +         This implementation could be optimised by persisting the fringe</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#cb48f5a3">cb48f5a3</a> +         positions and fluxes.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#2081540b">2081540b</a> + </div>
                        @param dataRef     Data reference for the science exposure
                        @param assembler   An instance of AssembleCcdTask (for assembling fringe frames)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#cb48f5a3">cb48f5a3</a> +         @return Struct(fringes: fringe exposure or list of fringe exposures;</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#cb48f5a3">cb48f5a3</a> +                        seed: 32-bit uint derived from ccdExposureId for random number generator</div>
                        """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#2081540b">2081540b</a> -         import lsstDebug</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#2081540b">2081540b</a> -         display = lsstDebug.Info(__name__).display</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#2081540b">2081540b</a> -         if not self.checkFilter(exposure):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#2081540b">2081540b</a> -             return</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#2081540b">2081540b</a> -         fringes = self.readFringes(dataRef, assembler=assembler)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#2081540b">2081540b</a> -         expFringes = self.measureExposure(exposure, fringes.positions, title="Science")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#2081540b">2081540b</a> -         solution = self.solve(expFringes, fringes.fluxes)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#2081540b">2081540b</a> -         self.subtract(exposure, fringes.fringes, solution)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#2081540b">2081540b</a> -         if display:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#2081540b">2081540b</a> -             ds9.mtv(exposure, title="Fringe subtracted", frame=getFrame())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#2081540b">2081540b</a> -     def checkFilter(self, exposure):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#2081540b">2081540b</a> -         """Check whether we should fringe-subtract the science exposure"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#2081540b">2081540b</a> -         return exposure.getFilter().getName() in self.config.filters</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#2081540b">2081540b</a> -     def readFringes(self, dataRef, assembler=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#2081540b">2081540b</a> -         """Read the fringe frame(s) and measure fringe amplitudes.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#2081540b">2081540b</a> -         The current implementation assumes only a single fringe frame and</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#2081540b">2081540b</a> -         will have to be updated to support multi-mode fringe subtraction.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#2081540b">2081540b</a> -         This implementation could be optimised by persisting the fringe</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#2081540b">2081540b</a> -         positions and fluxes.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#2081540b">2081540b</a> -         @param dataRef     Data reference for the science exposure</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#2081540b">2081540b</a> -         @param assembler   An instance of AssembleCcdTask (for assembling fringe frames)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#2081540b">2081540b</a> -         @return Struct(fringes: list of fringe frames;</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#2081540b">2081540b</a> -                        fluxes: fringe amplitues;</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#2081540b">2081540b</a> -                        positions: array of (x,y) for fringe amplitude measurements)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#2081540b">2081540b</a> -         """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#78215f34">78215f34</a> -         seed = dataRef.get("ccdExposureId", immediate=True) + self.config.stats.rngSeedOffset</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#78215f34">78215f34</a> -         rng = numpy.random.RandomState(seed=seed)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#78215f34">78215f34</a> - </div>
                        try:
                            fringe = dataRef.get("fringe", immediate=True)
                        except Exception as e:
                            raise RuntimeError("Unable to retrieve fringe for %s: %s" % (dataRef.dataId, e))
                        if assembler is not None:
                            fringe = assembler.assembleCcd(fringe)
                
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#cb48f5a3">cb48f5a3</a> +         seed = self.config.stats.rngSeedOffset + dataRef.get("ccdExposureId", immediate=True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#cb48f5a3">cb48f5a3</a> +         #Seed for numpy.random.RandomState must be convertable to a 32 bit unsigned integer</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#cb48f5a3">cb48f5a3</a> +         seed %= 2**32</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#cb48f5a3">cb48f5a3</a> +         return Struct(fringes = fringe,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#cb48f5a3">cb48f5a3</a> +                       seed = seed)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#73bd6734">73bd6734</a> +     @timeMethod</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#73bd6734">73bd6734</a> +     def run(self, exposure, fringes, seed=None):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#73bd6734">73bd6734</a> +         """Remove fringes from the provided science exposure.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#73bd6734">73bd6734</a> +         Primary method of FringeTask.  Fringes are only subtracted if the</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#73bd6734">73bd6734</a> +         science exposure has a filter listed in the configuration.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#73bd6734">73bd6734</a> +         @param exposure    Science exposure from which to remove fringes</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#73bd6734">73bd6734</a> +         @param fringes     Exposure or list of Exposures</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#73bd6734">73bd6734</a> +         @param seed        32-bit unsigned integer for random number generator</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#73bd6734">73bd6734</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#2081540b">2081540b</a> +         import lsstDebug</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#2081540b">2081540b</a> +         display = lsstDebug.Info(__name__).display</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#2081540b">2081540b</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#2081540b">2081540b</a> +         if not self.checkFilter(exposure):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#2081540b">2081540b</a> +             return</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#73bd6734">73bd6734</a> + </div>
                        if self.config.pedestal:
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#73bd6734">73bd6734</a> +             self.removePedestal(fringes)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#73bd6734">73bd6734</a> +         if seed is None:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#73bd6734">73bd6734</a> +             seed = self.config.stats.rngSeedOffset</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#73bd6734">73bd6734</a> +         rng = numpy.random.RandomState(seed=seed)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#73bd6734">73bd6734</a> +         if hasattr(fringes, '__iter__'):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#73bd6734">73bd6734</a> +             #multiple fringe frames (placeholder implementation)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#73bd6734">73bd6734</a> +             positions = self.generatePositions(fringes[0], rng)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#73bd6734">73bd6734</a> +             fluxes = numpy.ndarray([len(positions), len(fringes)])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#73bd6734">73bd6734</a> +             for i, f in enumerate(fringes):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#73bd6734">73bd6734</a> +                 fluxes[:,i] = self.measureExposure(f, positions, title="Fringe frame")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#73bd6734">73bd6734</a> +         else:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#73bd6734">73bd6734</a> +             #single fringe frame</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#73bd6734">73bd6734</a> +             positions = self.generatePositions(fringes, rng)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#73bd6734">73bd6734</a> +             fluxes = self.measureExposure(fringes, positions, title="Fringe frame")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#73bd6734">73bd6734</a> +             fluxes = fluxes.reshape([len(positions), 1])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#73bd6734">73bd6734</a> +             fringes = [fringes]</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#73bd6734">73bd6734</a> +         expFringes = self.measureExposure(exposure, positions, title="Science")</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#73bd6734">73bd6734</a> +         solution = self.solve(expFringes, fluxes)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#73bd6734">73bd6734</a> +         self.subtract(exposure, fringes, solution)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#2081540b">2081540b</a> +         if display:</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#2081540b">2081540b</a> +             ds9.mtv(exposure, title="Fringe subtracted", frame=getFrame())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#2081540b">2081540b</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#cb48f5a3">cb48f5a3</a> +     @timeMethod</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#cb48f5a3">cb48f5a3</a> +     def runDataRef(self, exposure, dataRef, assembler=None):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#cb48f5a3">cb48f5a3</a> +         """Remove fringes from the provided science exposure.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#2081540b">2081540b</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#cb48f5a3">cb48f5a3</a> +         Retrieve fringes from butler dataRef provided and remove from</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#cb48f5a3">cb48f5a3</a> +         provided science exposure.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#cb48f5a3">cb48f5a3</a> +         Fringes are only subtracted if the science exposure has a filter</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#cb48f5a3">cb48f5a3</a> +         listed in the configuration.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#2081540b">2081540b</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#cb48f5a3">cb48f5a3</a> +         @param exposure    Science exposure from which to remove fringes</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#2081540b">2081540b</a> +         @param dataRef     Data reference for the science exposure</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#2081540b">2081540b</a> +         @param assembler   An instance of AssembleCcdTask (for assembling fringe frames)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#2081540b">2081540b</a> +         """</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#cb48f5a3">cb48f5a3</a> +         if not self.checkFilter(exposure):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#cb48f5a3">cb48f5a3</a> +             return</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#cb48f5a3">cb48f5a3</a> +         fringeStruct = self.readFringes(dataRef, assembler=assembler)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
157  <a href="#cb48f5a3">cb48f5a3</a> +         self.run(exposure,  **fringeStruct.getDict())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
158  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
159  <a href="#cb48f5a3">cb48f5a3</a> +     def checkFilter(self, exposure):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
160  <a href="#cb48f5a3">cb48f5a3</a> +         """Check whether we should fringe-subtract the science exposure"""</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
161  <a href="#cb48f5a3">cb48f5a3</a> +         return exposure.getFilter().getName() in self.config.filters</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#73bd6734">73bd6734</a> + </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#73bd6734">73bd6734</a> +     def removePedestal(self, fringe):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#73bd6734">73bd6734</a> +         """Remove pedestal from fringe exposure"""</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#2081540b">2081540b</a> -             stats = afwMath.StatisticsControl()</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#73bd6734">73bd6734</a> +         stats = afwMath.StatisticsControl()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#2081540b">2081540b</a> -             stats.setNumSigmaClip(self.config.stats.clip)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
166  <a href="#73bd6734">73bd6734</a> +         stats.setNumSigmaClip(self.config.stats.clip)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#2081540b">2081540b</a> -             stats.setNumIter(self.config.stats.iterations)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
167  <a href="#73bd6734">73bd6734</a> +         stats.setNumIter(self.config.stats.iterations)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#2081540b">2081540b</a> -             mi = fringe.getMaskedImage()</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
168  <a href="#73bd6734">73bd6734</a> +         mi = fringe.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#2081540b">2081540b</a> -             pedestal = afwMath.makeStatistics(mi, afwMath.MEDIAN, stats).getValue()</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
169  <a href="#73bd6734">73bd6734</a> +         pedestal = afwMath.makeStatistics(mi, afwMath.MEDIAN, stats).getValue()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#2081540b">2081540b</a> -             self.log.info("Removing fringe pedestal: %f" % pedestal)</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
170  <a href="#73bd6734">73bd6734</a> +         self.log.info("Removing fringe pedestal: %f" % pedestal)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#2081540b">2081540b</a> -             mi -= pedestal</div>
              ? ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
171  <a href="#73bd6734">73bd6734</a> +         mi -= pedestal</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#78215f34">78215f34</a> -         positions = self.generatePositions(fringe, rng)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#2081540b">2081540b</a> -         fluxes = self.measureExposure(fringe, positions, title="Fringe frame")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#2081540b">2081540b</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#2081540b">2081540b</a> -         return Struct(fringes=[fringe],</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#2081540b">2081540b</a> -                       fluxes=fluxes.reshape([len(positions), 1]),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#2081540b">2081540b</a> -                       positions=positions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#2081540b">2081540b</a> -                       )</div>
                
                    def generatePositions(self, exposure, rng):
                        """Generate a random distribution of positions for measuring fringe amplitudes"""
                        start = self.config.large
                        num = self.config.num
                        width = exposure.getWidth() - self.config.large
                        height = exposure.getHeight() - self.config.large
                        return numpy.array([rng.randint(start, width, size=num),
                                            rng.randint(start, height, size=num)]).swapaxes(0, 1)
                
                    @timeMethod
                    def measureExposure(self, exposure, positions, title="Fringe"):
                        """Measure fringe amplitudes for an exposure
                
                        The fringe amplitudes are measured as the statistic within a square
                        aperture.  The statistic within a larger aperture are subtracted so
                        as to remove the background.
                
                        @param exposure    Exposure to measure
                        @param positions   Array of (x,y) for fringe measurement
                        @param title       Title for display
                        @return Array of fringe measurements
                        """
                        stats = afwMath.StatisticsControl()
                        stats.setNumSigmaClip(self.config.stats.clip)
                        stats.setNumIter(self.config.stats.iterations)
                        stats.setAndMask(exposure.getMaskedImage().getMask().getPlaneBitMask(self.config.stats.badMaskPlanes))
                
                        num = self.config.num
                        fringes = numpy.ndarray(num)
                        
                        for i in range(num):
                            x, y = positions[i]
                            small = measure(exposure.getMaskedImage(), x, y, self.config.small, self.config.stats.stat, stats)
                            large = measure(exposure.getMaskedImage(), x, y, self.config.large, self.config.stats.stat, stats)
                            fringes[i] = small - large
                
                        import lsstDebug
                        display = lsstDebug.Info(__name__).display
                        if display:
                            frame = getFrame()
                            ds9.mtv(exposure, frame=frame, title=title)
                            if False:
                                with ds9.Buffering():
                                    for x,y in positions:
                                        corners = numpy.array([[-1, -1], [ 1, -1], [ 1,  1], [-1,  1], [-1, -1]]) + [[x, y]]
                                        ds9.line(corners * self.config.small, frame=frame, ctype="green")
                                        ds9.line(corners * self.config.large, frame=frame, ctype="blue")
                
                        return fringes
                
                    @timeMethod
                    def solve(self, science, fringes):
                        """Solve (with iterative clipping) for the scale factors
                
                        @param science     Array of science exposure fringe amplitudes
                        @param fringes     Array of arrays of fringe frame fringe amplitudes
                        @return Array of scale factors for the fringe frames
                        """
                        import lsstDebug
                        doPlot = lsstDebug.Info(__name__).plot
                
                        origNum = len(science)
                
                        good = numpy.where(numpy.logical_and(numpy.isfinite(science), numpy.any(numpy.isfinite(fringes), 1)))
                        science = science[good]
                        fringes = fringes[good]
                        oldNum = len(science)
                
                        for i in range(self.config.iterations):
                            solution = self._solve(science, fringes)
                            resid = science - numpy.sum(solution * fringes, 1)
                            rms = stdev(resid)
                            good = numpy.logical_not(abs(resid) > self.config.clip * rms)
                            self.log.logdebug("Iteration %d: RMS=%f numGood=%d" % (i, rms, good.sum()))
                            self.log.logdebug("Solution %d: %s" % (i, solution))
                            newNum = good.sum()
                
                            if doPlot:
                                import matplotlib.pyplot as plot
                                for j in range(fringes.shape[1]):
                                    fig = plot.figure(j)
                                    fig.clf()
                                    try:
                                        fig.canvas._tkcanvas._root().lift() # == Tk's raise
                                    except:
                                        pass
                                    ax = fig.add_axes((0.1, 0.1, 0.8, 0.8))
                                    adjust = science.copy()
                                    others = set(range(fringes.shape[1]))
                                    others.discard(j)
                                    for k in others:
                                        adjust -= solution[k] * fringes[:,k]
                                    ax.plot(fringes[:,j], adjust, 'r.')
                                    xmin = fringes[:,j].min()
                                    xmax = fringes[:,j].max()
                                    ymin = solution[j] * xmin
                                    ymax = solution[j] * xmax
                                    ax.plot([xmin, xmax], [ymin, ymax], 'b-')
                                    ax.set_title("Fringe %d: %f" % (j, solution[j]))
                                    ax.set_xlabel("Fringe amplitude")
                                    ax.set_ylabel("Science amplitude")
                                    ax.set_autoscale_on(False)
                                    ax.set_xbound(lower=xmin, upper=xmax)
                                    ax.set_ybound(lower=ymin, upper=ymax)
                                    fig.show()
                                while True:
                                    ans = raw_input("Enter or c to continue [chp]").lower()
                                    if ans in ("", "c",):
                                        break
                                    if ans in ("p",):
                                        import pdb; pdb.set_trace()
                                    elif ans in ("h", ):
                                        print "h[elp] c[ontinue] p[db]"
                
                            if newNum == oldNum:
                                # Not gaining
                                break
                            oldNum = newNum
                            good = numpy.where(good)
                            science = science[good]
                            fringes = fringes[good]
                
                        # Final solution without rejection
                        solution = self._solve(science, fringes)
                        self.log.info("Fringe solution: %s RMS: %f Good: %d/%d" % (solution, rms, len(science), origNum))
                        return solution
                
                    def _solve(self, science, fringes):
                        """Solve for the scale factors
                
                        @param science     Array of science exposure fringe amplitudes
                        @param fringes     Array of arrays of fringe frame fringe amplitudes
                        @return Array of scale factors for the fringe frames
                        """
                        return afwMath.LeastSquares.fromDesignMatrix(fringes, science,
                                                                     afwMath.LeastSquares.DIRECT_SVD).getSolution()
                
                    def subtract(self, science, fringes, solution):
                        """Subtract the fringes
                
                        @param science     Science exposure
                        @param fringes     List of fringe frames
                        @param solution    Array of scale factors for the fringe frames
                        """
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#357088e3">357088e3</a> +         if len(solution) != len(fringes):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#357088e3">357088e3</a> +             raise RuntimeError("Number of fringe frames (%s) != number of scale factors (%s)"% \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#357088e3">357088e3</a> +                                    (len(fringes), len(solution)))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
320  <a href="#357088e3">357088e3</a> + </div>
                        for s, f in zip(solution, fringes):
                            science.getMaskedImage().scaledMinus(s, f.getMaskedImage())
                
                
                def measure(mi, x, y, size, statistic, stats):
                    """Measure a statistic within an aperture
                
                    @param mi          MaskedImage to measure
                    @param x, y        Center for aperture
                    @param size        Size of aperture
                    @param statistic   Statistic to measure
                    @param stats       StatisticsControl object
                    @return Value of statistic within aperture
                    """
                    bbox = afwGeom.Box2I(afwGeom.Point2I(int(x) - size, int(y - size)), afwGeom.Extent2I(2*size, 2*size))
                    subImage = mi.Factory(mi, bbox, afwImage.LOCAL)
                    return afwMath.makeStatistics(subImage, statistic, stats).getValue()
                
                def stdev(vector):
                    """Calculate a robust standard deviation of an array of values
                
                    @param vector  Array of values
                    @return Standard deviation
                    """
                    num = len(vector)
                    vector = vector.copy()
                    vector.sort()
                    return 0.74 * (vector[int(0.75 * num)] - vector[int(0.25 * num)])
                
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="78215f34"/></a>78215f34</h3>

<pre>
commit 78215f3497f77c3630cf4ac8800a1aac976dbaea
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri May 16 18:27:17 2014 -0400

    Make random number generation in fringe code deterministic
</pre>
<h3><a name="2081540b"/></a>2081540b</h3>

<pre>
commit 2081540ba1b7f6691cf4e218732428785f8db1e2
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 7 20:44:27 2012 -0500

    Add fringe subtraction task.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="73bd6734"/></a>73bd6734</h3>

<pre>
commit 73bd67343a2a8ec5129fe9aca8cea204439047b7
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Sun Feb 15 19:57:37 2015 -0600

    Refactor IsrTask/FringeTask s.t. run() takes exposures, runDataRef() a ButlerDataRef
    
        See epic DM-1113 for background
        - Push all interaction with the Butler to readIsrData()/readFringeData()
        - Update all lower-level methods like [bias/flat/dark]Correction to take
          exposures instead of dataRefs.
        - Add doAssembleCcd config to give run option to operate on single amps
        - Replace word "detrend" with "isr" in names
</pre>
<h3><a name="cb48f5a3"/></a>cb48f5a3</h3>

<pre>
commit cb48f5a32f3edf5c3a1f74a4f0ca7bf838a917e1
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 23 01:12:45 2015 -0500

    FringeTask: Reorder methods to readFringes, run, runDataRef.
</pre>
<h3><a name="2081540b"/></a>2081540b</h3>

<pre>
commit 2081540ba1b7f6691cf4e218732428785f8db1e2
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 7 20:44:27 2012 -0500

    Add fringe subtraction task.
</pre>
<h3><a name="357088e3"/></a>357088e3</h3>

<pre>
commit 357088e3e85a75e341a6328a989e1d649561bcfd
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Thu Apr 23 01:14:55 2015 -0500

    IsrTask/FringeTask: Make more robust
    
        - Validate input to IsrTask.run()
        - Check for overscan pixels before attempting overscan correction
        - FringeTask.subtract(): check that number of fringe exposures
          matches number of scale factors
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/ip/isr/isrLib.i"/></a>python/lsst/ip/isr/isrLib.i
### Diff:

<pre>
                // -*- lsst-c++ -*-
                
                /* 
                 * LSST Data Management System
                 * Copyright 2008, 2009, 2010 LSST Corporation.
                 * 
                 * This product includes software developed by the
                 * LSST Project (http://www.lsst.org/).
                 *
                 * This program is free software: you can redistribute it and/or modify
                 * it under the terms of the GNU General Public License as published by
                 * the Free Software Foundation, either version 3 of the License, or
                 * (at your option) any later version.
                 * 
                 * This program is distributed in the hope that it will be useful,
                 * but WITHOUT ANY WARRANTY; without even the implied warranty of
                 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                 * GNU General Public License for more details.
                 * 
                 * You should have received a copy of the LSST License Statement and 
                 * the GNU General Public License along with this program.  If not, 
                 * see <http://www.lsstcorp.org/LegalNotices/>.
                 */
                 
                %define isrLib_DOCSTRING
                "
                Python bindings for lsst::ip::isr Instrument Signature Removal code
                "
                %enddef
                
                %feature("autodoc", "1");
                %module(package="lsst.ip.isr", docstring=isrLib_DOCSTRING) isrLib
                
                // Suppress swig complaints; see afw/image/imageLib.i for more 
                #pragma SWIG nowarn=314                 // print is a python keyword (--> _print)
                #pragma SWIG nowarn=362                 // operator=  ignored 
                
                // Everything we will need in the _wrap.cc file
                %{
                #include <boost/shared_ptr.hpp>
                
                #include "lsst/pex/exceptions.h"
                #include "lsst/pex/logging.h"
                #include "lsst/ip/isr.h"
                #include "lsst/pex/policy/Policy.h"
                #include "lsst/afw/detection.h"
                #include "lsst/afw/geom.h" // work around ticket #1121
                #include "lsst/afw/cameraGeom.h"
                %}
                
                %include "lsst/p_lsstSwig.i"
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
52   <a href="#4931abdd">4931abdd</a> + %initializeNumPy(ip_isr)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
53   <a href="#4931abdd">4931abdd</a> + </div>
                %import  "lsst/afw/image/imageLib.i" 
                %import  "lsst/afw/math/mathLib.i" 
                %lsst_exceptions();
                
                %shared_ptr(lsst::ip::isr::CountMaskedPixels<float>);
                %shared_ptr(lsst::ip::isr::CountMaskedPixels<double>);
                
                %shared_ptr(lsst::ip::isr::LookupTableMultiplicative<float>);
                %shared_ptr(lsst::ip::isr::LookupTableMultiplicative<double>);
                
                %shared_ptr(lsst::ip::isr::LookupTableReplace<float>);
                %shared_ptr(lsst::ip::isr::LookupTableReplace<double>);
                
                %include "lsst/ip/isr.h"
                
                %define %instantiateFloatLike(TYPE, PIXELTYPE)
                %template(CountMaskedPixels##TYPE) lsst::ip::isr::CountMaskedPixels<PIXELTYPE>;
                %template(LookupTableMultiplicative##TYPE) lsst::ip::isr::LookupTableMultiplicative<PIXELTYPE>;
                %template(fitOverscanImage) lsst::ip::isr::fitOverscanImage<PIXELTYPE, double>;
                %template(maskNans) lsst::ip::isr::maskNans<PIXELTYPE>;
                %enddef
                
                %template(LookupTableReplaceI) lsst::ip::isr::LookupTableReplace<int>;
                %template(LookupTableReplaceF) lsst::ip::isr::LookupTableReplace<float>;
                
                %instantiateFloatLike(F, float);
                %instantiateFloatLike(D, double);
                
                /******************************************************************************/
                // Local Variables: ***
                // eval: (setq indent-tabs-mode nil) ***
                // End: ***
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="4931abdd"/></a>4931abdd</h3>

<pre>
commit 4931abddb218da5fa8d5a035c2075396ee4e0df5
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Wed Apr 8 17:10:54 2015 -0400

    Utilize new numeric scalar typemaps and NumPy initialization macro
</pre>
</div>


[Return to list](#homelist)
# <a name="python/lsst/ip/isr/isr.py"/></a>python/lsst/ip/isr/isr.py
### Diff:

<pre>
                #
                # LSST Data Management System
                # Copyright 2008, 2009, 2010 LSST Corporation.
                #
                # This product includes software developed by the
                # LSST Project (http://www.lsst.org/).
                #
                # This program is free software: you can redistribute it and/or modify
                # it under the terms of the GNU General Public License as published by
                # the Free Software Foundation, either version 3 of the License, or
                # (at your option) any later version.
                #
                # This program is distributed in the hope that it will be useful,
                # but WITHOUT ANY WARRANTY; without even the implied warranty of
                # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                # GNU General Public License for more details.
                #
                # You should have received a copy of the LSST License Statement and
                # the GNU General Public License along with this program.  If not,
                # see <http://www.lsstcorp.org/LegalNotices/>.
                #
                import math
                
                import numpy
                
                import lsst.afw.geom as afwGeom
                import lsst.afw.image as afwImage
                import lsst.afw.detection as afwDetection
                import lsst.afw.math as afwMath
                import lsst.meas.algorithms as measAlg
                import lsst.pex.exceptions as pexExcept
                
                def createPsf(fwhm):
                    """Make a double Gaussian PSF
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
35   <a href="#bbc42e80">bbc42e80</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fwhm            FWHM of double Gaussian smoothing kernel</div>
              ?                -----      ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
36   <a href="#b6716709">b6716709</a> +     @param[in] fwhm  FWHM of double Gaussian smoothing kernel</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#a21c7f73">a21c7f73</a> -     @return psf</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
37   <a href="#bbc42e80">bbc42e80</a> +     @return measAlg.DoubleGaussianPsf</div>
                    """
                    ksize = 4*int(fwhm) + 1
                    return measAlg.DoubleGaussianPsf(ksize, ksize, fwhm/(2*math.sqrt(2*math.log(2))))
                
                def calcEffectiveGain(maskedImage):
                    """Calculate effective gain
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskedImage     masked image to process</div>
              ?               -----              ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
45   <a href="#b6716709">b6716709</a> +     @param[in] maskedImage  afw.image.MaskedImage to process</div>
              ?                             ^^^^^ +++++     ^
                    @return (median gain, mean gain) in e-/ADU
                    """
                    im = afwImage.ImageF(maskedImage.getImage(), True)
                    var = maskedImage.getVariance()
                    im /= var
                    medgain = afwMath.makeStatistics(im, afwMath.MEDIAN).getValue()
                    meangain = afwMath.makeStatistics(im, afwMath.MEANCLIP).getValue()
                    return medgain, meangain
                
                def transposeMaskedImage(maskedImage):
                    """Make a transposed copy of a masked image
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskedImage     masked image to process</div>
              ?               -----              ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
58   <a href="#b6716709">b6716709</a> +     @param[in] maskedImage  afw.image.MaskedImage to process</div>
              ?                             ^^^^^ +++++     ^
                    @return transposed masked image
                    """
                    transposed = maskedImage.Factory(afwGeom.Extent2I(maskedImage.getHeight(), maskedImage.getWidth()))
                    transposed.getImage().getArray()[:] = maskedImage.getImage().getArray().T
                    transposed.getMask().getArray()[:] = maskedImage.getMask().getArray().T
                    transposed.getVariance().getArray()[:] = maskedImage.getVariance().getArray().T
                    return transposed
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
67   <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
68   <a href="#c37b4e85">c37b4e85</a> - def calculateSdqaCcdRatings(maskedImage, metadata):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
69   <a href="#c37b4e85">c37b4e85</a> -     metrics = {}</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#c37b4e85">c37b4e85</a> -     metrics['nSaturatePix'] = 0</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#c37b4e85">c37b4e85</a> -     metrics['nBadCalibPix'] = 0</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#c37b4e85">c37b4e85</a> -     metrics['imageClipMean4Sig3Pass'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#c37b4e85">c37b4e85</a> -     metrics['imageSigma'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMedian'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
75   <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMin'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
76   <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMax'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
77   <a href="#c37b4e85">c37b4e85</a> -     mask = maskedImage.getMask()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
78   <a href="#c37b4e85">c37b4e85</a> -     badbitmask = mask.getPlaneBitMask('BAD')</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
79   <a href="#c37b4e85">c37b4e85</a> -     satbitmask = mask.getPlaneBitMask('SAT')</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
80   <a href="#c37b4e85">c37b4e85</a> -     intrpbitmask = mask.getPlaneBitMask('INTRP')</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
81   <a href="#c37b4e85">c37b4e85</a> -     sctrl = afwMath.StatisticsControl()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
82   <a href="#c37b4e85">c37b4e85</a> -     sctrl.setNumIter(3)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
83   <a href="#c37b4e85">c37b4e85</a> -     sctrl.setNumSigmaClip(4)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
84   <a href="#c37b4e85">c37b4e85</a> -     sctrl.setAndMask(satbitmask | badbitmask | intrpbitmask)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#c37b4e85">c37b4e85</a> -     satmask = afwImage.MaskU(mask, True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#c37b4e85">c37b4e85</a> -     badmask = afwImage.MaskU(mask, True)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#c37b4e85">c37b4e85</a> -     satmask &= satbitmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#c37b4e85">c37b4e85</a> -     badmask &= badbitmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
89   <a href="#c37b4e85">c37b4e85</a> -     satmaskim = afwImage.ImageU(satmask.getBBox(afwImage.PARENT))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
90   <a href="#c37b4e85">c37b4e85</a> -     satmaskim <<= satmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
91   <a href="#c37b4e85">c37b4e85</a> -     badmaskim = afwImage.ImageU(badmask.getBBox(afwImage.PARENT))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
92   <a href="#c37b4e85">c37b4e85</a> -     badmaskim <<= badmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
93   <a href="#c37b4e85">c37b4e85</a> -     thresh = afwDetection.Threshold(0.5)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
94   <a href="#dd64d974">dd64d974</a> -     fs = afwDetection.FootprintSet(satmaskim, thresh)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
95   <a href="#c37b4e85">c37b4e85</a> -     for f in fs.getFootprints():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
96   <a href="#c37b4e85">c37b4e85</a> -         metrics['nSaturatePix'] += f.getNpix()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
97   <a href="#dd64d974">dd64d974</a> -     fs = afwDetection.FootprintSet(badmaskim, thresh)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
98   <a href="#c37b4e85">c37b4e85</a> -     for f in fs.getFootprints():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
99   <a href="#c37b4e85">c37b4e85</a> -         metrics['nBadCalibPix'] += f.getNpix()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
100  <a href="#c37b4e85">c37b4e85</a> -     stats = afwMath.makeStatistics(maskedImage, afwMath.MEANCLIP | \</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
101  <a href="#c37b4e85">c37b4e85</a> -         afwMath.STDEVCLIP | afwMath.MEDIAN | afwMath.MIN |\</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
102  <a href="#c37b4e85">c37b4e85</a> -         afwMath.MAX, sctrl)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
103  <a href="#c37b4e85">c37b4e85</a> -     metrics['imageClipMean4Sig3Pass'] = stats.getValue(afwMath.MEANCLIP)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
104  <a href="#c37b4e85">c37b4e85</a> -     metrics['imageSigma'] = stats.getValue(afwMath.STDEVCLIP)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMedian'] = stats.getValue(afwMath.MEDIAN)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMin'] = stats.getValue(afwMath.MIN)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#c37b4e85">c37b4e85</a> -     metrics['imageMax'] = stats.getValue(afwMath.MAX)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
108  <a href="#c37b4e85">c37b4e85</a> -     for k in metrics.keys():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
109  <a href="#c37b4e85">c37b4e85</a> -         metadata.set(k, metrics[k])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
110  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
111  <a href="#c37b4e85">c37b4e85</a> - def calculateSdqaAmpRatings(maskedImage, metadata, biasBBox, dataBBox):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
112  <a href="#c37b4e85">c37b4e85</a> -     metrics = {}</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
113  <a href="#c37b4e85">c37b4e85</a> -     metrics['nSaturatePix'] = 0</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
114  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMean'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
115  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanStdDev'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
116  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMedian'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
117  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMin'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
118  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMax'] = None</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
119  <a href="#c37b4e85">c37b4e85</a> -     trimmi = afwImage.MaskedImageF(maskedImage, dataBBox, False)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#c37b4e85">c37b4e85</a> -     biasmi = afwImage.MaskedImageF(maskedImage, biasBBox, False)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#c37b4e85">c37b4e85</a> -     mask = maskedImage.getMask()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#c37b4e85">c37b4e85</a> -     satbitmask = mask.getPlaneBitMask('SAT')</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
123  <a href="#c37b4e85">c37b4e85</a> -     sctrl = afwMath.StatisticsControl()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
124  <a href="#c37b4e85">c37b4e85</a> -     sctrl.setAndMask(satbitmask)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
125  <a href="#c37b4e85">c37b4e85</a> -     satmask = trimmi.getMask()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
126  <a href="#c37b4e85">c37b4e85</a> -     satmask &= satbitmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
127  <a href="#c37b4e85">c37b4e85</a> -     satmaskim = afwImage.ImageU(satmask.getBBox(afwImage.PARENT))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
128  <a href="#c37b4e85">c37b4e85</a> -     satmaskim <<= satmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
129  <a href="#c37b4e85">c37b4e85</a> -     thresh = afwDetection.Threshold(0.5)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
130  <a href="#dd64d974">dd64d974</a> -     fs = afwDetection.FootprintSet(satmaskim, thresh)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
131  <a href="#c37b4e85">c37b4e85</a> -     for f in fs.getFootprints():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
132  <a href="#c37b4e85">c37b4e85</a> -         metrics['nSaturatePix'] += f.getNpix()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
133  <a href="#c37b4e85">c37b4e85</a> -     stats = afwMath.makeStatistics(biasmi, afwMath.MEAN | \</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#c37b4e85">c37b4e85</a> -         afwMath.STDEV | afwMath.MEDIAN | afwMath.MIN |\</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#c37b4e85">c37b4e85</a> -         afwMath.MAX,sctrl)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMean'] = stats.getValue(afwMath.MEAN)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanStdDev'] = stats.getValue(afwMath.STDEV)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
138  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMedian'] = stats.getValue(afwMath.MEDIAN)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
139  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMin'] = stats.getValue(afwMath.MIN)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#c37b4e85">c37b4e85</a> -     metrics['overscanMax'] = stats.getValue(afwMath.MAX)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#c37b4e85">c37b4e85</a> -     for k in metrics.keys():</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#c37b4e85">c37b4e85</a> -         metadata.set(k, metrics[k])</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#c37b4e85">c37b4e85</a> - </div>
                def interpolateDefectList(maskedImage, defectList, fwhm, fallbackValue=None):
                    """Interpolate over defects specified in a defect list
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
147  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to process</div>
              ?                    -             ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
70   <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  masked image to process</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
148  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      defectList      defect list</div>
              ?                -----            ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
71   <a href="#b6716709">b6716709</a> +     @param[in] defectList  defect list</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
149  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fwhm            FWHM of double Gaussian smoothing kernel</div>
              ?                -----      ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
72   <a href="#b6716709">b6716709</a> +     @param[in] fwhm  FWHM of double Gaussian smoothing kernel</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
150  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fallbackValue   fallback value if an interpolated value cannot be determined;</div>
              ?               -----                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
73   <a href="#b6716709">b6716709</a> +     @param[in] fallbackValue  fallback value if an interpolated value cannot be determined;</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#a21c7f73">a21c7f73</a> -                                     if None then use clipped mean image value</div>
              ? ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
74   <a href="#bbc42e80">bbc42e80</a> +                               if None then use clipped mean image value</div>
                    """
                    psf = createPsf(fwhm)
                    if fallbackValue is None:
                        fallbackValue = afwMath.makeStatistics(maskedImage.getImage(), afwMath.MEANCLIP).getValue()
                    if 'INTRP' not in maskedImage.getMask().getMaskPlaneDict().keys():
                        maskedImage.getMask.addMaskPlane('INTRP')
                    measAlg.interpolateOverDefects(maskedImage, psf, defectList, fallbackValue, True)
                
                def defectListFromFootprintList(fpList, growFootprints=1):
                    """Compute a defect list from a footprint list, optionally growing the footprints
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
162  <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
85   <a href="#bbc42e80">bbc42e80</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
163  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fpList          footprint list</div>
              ?                -----      --------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
86   <a href="#b6716709">b6716709</a> +     @param[in] fpList  footprint list</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
164  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      growFootprints  amount by which to grow footprints of detected regions</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
87   <a href="#b6716709">b6716709</a> +     @param[in] growFootprints  amount by which to grow footprints of detected regions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
165  <a href="#a21c7f73">a21c7f73</a> -     @return defect list</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
88   <a href="#bbc42e80">bbc42e80</a> +     @return meas.algorithms.DefectListT</div>
                    """
                    defectList = measAlg.DefectListT()
                    for fp in fpList:
                        if growFootprints > 0:
                            # if "True", growing requires a convolution
                            # if "False", its faster
                            fpGrow = afwDetection.growFootprint(fp, growFootprints, False)
                        else:
                            fpGrow = fp
                        for bbox in afwDetection.footprintToBBoxList(fpGrow):
                            defect = measAlg.Defect(bbox)
                            defectList.push_back(defect)
                    return defectList
                
                def transposeDefectList(defectList):
                    """Make a transposed copy of a defect list
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
182  <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
105  <a href="#bbc42e80">bbc42e80</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
183  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      defectList      defect list</div>
              ?                -----            ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
106  <a href="#b6716709">b6716709</a> +     @param[in] defectList  defect list</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
184  <a href="#a21c7f73">a21c7f73</a> -     @return defect list with transposed defects</div>
              ?             ^     ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
107  <a href="#bbc42e80">bbc42e80</a> +     @return meas.algorithms.DefectListT with transposed defects</div>
              ?             ^^^^^^^^^^^^^^^^^     ^   +
                    """
                    retDefectList = measAlg.DefectListT()
                    for defect in defectList:
                        bbox = defect.getBBox()
                        nbbox = afwGeom.Box2I(afwGeom.Point2I(bbox.getMinY(), bbox.getMinX()), 
                             afwGeom.Extent2I(bbox.getDimensions()[1], bbox.getDimensions()[0]))
                        retDefectList.push_back(measAlg.Defect(nbbox))
                    return retDefectList
                
                def maskPixelsFromDefectList(maskedImage, defectList, maskName='BAD'):
                    """Set mask plane based on a defect list
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
197  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to process; mask plane is updated</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
120  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to process; mask plane is updated</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
198  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      defectList      defect list</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
121  <a href="#b6716709">b6716709</a> +     @param[in] defectList  meas.algorithms.DefectListT</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
199  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskName        mask plane name</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
122  <a href="#b6716709">b6716709</a> +     @param[in] maskName  mask plane name</div>
                    """
                    # mask bad pixels
                    mask = maskedImage.getMask()
                    bitmask = mask.getPlaneBitMask(maskName)
                    for defect in defectList:
                        bbox = defect.getBBox()
                        afwDetection.setMaskFromFootprint(mask, afwDetection.Footprint(bbox), bitmask)
                
                def getDefectListFromMask(maskedImage, maskName, growFootprints=1):
                    """Compute a defect list from a specified mask plane
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
211  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskedImage     masked image to process</div>
              ?               -----              ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
134  <a href="#b6716709">b6716709</a> +     @param[in] maskedImage  masked image to process</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskName        mask plane name</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
135  <a href="#b6716709">b6716709</a> +     @param[in] maskName  mask plane name</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      growFootprints  amount by which to grow footprints of detected regions</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
136  <a href="#b6716709">b6716709</a> +     @param[in] growFootprints  amount by which to grow footprints of detected regions</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
137  <a href="#bbc42e80">bbc42e80</a> +     @return meas.algrithms.DefectListT of regions in mask</div>
                    """
                    mask = maskedImage.getMask()
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
216  <a href="#1a942b21">1a942b21</a> -     thresh = afwDetection.Threshold(mask.getPlaneBitMask(maskName), afwDetection.Threshold.BITMASK)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
140  <a href="#c37b4e85">c37b4e85</a> +     workmask = afwImage.MaskU(mask, True)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
141  <a href="#c37b4e85">c37b4e85</a> +     workmask &= mask.getPlaneBitMask(maskName)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
142  <a href="#c37b4e85">c37b4e85</a> +     thresh = afwDetection.Threshold(0.5)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
143  <a href="#219584a3">219584a3</a> +     maskimg = afwImage.ImageU(workmask.getBBox())</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
144  <a href="#c37b4e85">c37b4e85</a> +     maskimg <<= workmask</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
217  <a href="#1a942b21">1a942b21</a> -     fpList = afwDetection.FootprintSet(mask, thresh).getFootprints()</div>
              ?     ^^^^ -                                          ----------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
145  <a href="#dd64d974">dd64d974</a> +     ds = afwDetection.FootprintSet(maskimg, thresh)</div>
              ?     ^                                  +++
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
146  <a href="#c37b4e85">c37b4e85</a> +     fpList = ds.getFootprints()</div>
                    return defectListFromFootprintList(fpList, growFootprints)
                
                def makeThresholdMask(maskedImage, threshold, growFootprints=1, maskName = 'SAT'):
                    """Mask pixels based on threshold detection
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
151  <a href="#bbc42e80">bbc42e80</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to process; the mask is altered</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
152  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to process; the mask is altered</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      threshold       detection threshold</div>
              ?                -----           -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
153  <a href="#b6716709">b6716709</a> +     @param[in] threshold  detection threshold</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      growFootprints  amount by which to grow footprints of detected regions</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
154  <a href="#b6716709">b6716709</a> +     @param[in] growFootprints  amount by which to grow footprints of detected regions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
226  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskName        mask plane name</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
155  <a href="#b6716709">b6716709</a> +     @param[in] maskName  mask plane name</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
156  <a href="#bbc42e80">bbc42e80</a> +     @return meas.algorihtms.DefectListT of regions set in the mask.</div>
                    """
                    # find saturated regions
                    thresh = afwDetection.Threshold(threshold)
                    fs = afwDetection.FootprintSet(maskedImage, thresh)
                
                    if growFootprints > 0:
                        fs = afwDetection.FootprintSet(fs, growFootprints)
                
                    fpList = fs.getFootprints()
                    # set mask
                    mask = maskedImage.getMask()
                    bitmask = mask.getPlaneBitMask(maskName)
                    afwDetection.setMaskFromFootprintList(mask, fpList, bitmask)
                
                    return defectListFromFootprintList(fpList, growFootprints=0)
                
                def interpolateFromMask(maskedImage, fwhm, growFootprints=1, maskName='SAT', fallbackValue=None):
                    """Interpolate over defects identified by a particular mask plane
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
245  <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
175  <a href="#bbc42e80">bbc42e80</a> + </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
246  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to process</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
176  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to process</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
247  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fwhm            FWHM of double Gaussian smoothing kernel</div>
              ?                -----      ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
177  <a href="#b6716709">b6716709</a> +     @param[in] fwhm  FWHM of double Gaussian smoothing kernel</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
248  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      growFootprints  amount by which to grow footprints of detected regions</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
178  <a href="#b6716709">b6716709</a> +     @param[in] growFootprints  amount by which to grow footprints of detected regions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskName        mask plane name</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
179  <a href="#b6716709">b6716709</a> +     @param[in] maskName  mask plane name</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#cc57d8fc">cc57d8fc</a> -     @param[in]      fallbackValue   value of last resort for interpolation</div>
              ?               -----                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
180  <a href="#b6716709">b6716709</a> +     @param[in] fallbackValue  value of last resort for interpolation</div>
                    """
                    defectList = getDefectListFromMask(maskedImage, maskName, growFootprints)
                    interpolateDefectList(maskedImage, defectList, fwhm, fallbackValue=fallbackValue)
                
                def saturationCorrection(maskedImage, saturation, fwhm, growFootprints=1, interpolate=True, maskName='SAT',
                                         fallbackValue=None):
                    """Mark saturated pixels and optionally interpolate over them
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to process</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
189  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to process</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      saturation      saturation level (used as a detection threshold)</div>
              ?                -----            ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
190  <a href="#b6716709">b6716709</a> +     @param[in] saturation  saturation level (used as a detection threshold)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
261  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      fwhm            FWHM of double Gaussian smoothing kernel</div>
              ?                -----      ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
191  <a href="#b6716709">b6716709</a> +     @param[in] fwhm  FWHM of double Gaussian smoothing kernel</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
262  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      growFootprints  amount by which to grow footprints of detected regions</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
192  <a href="#b6716709">b6716709</a> +     @param[in] growFootprints  amount by which to grow footprints of detected regions</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
263  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      interpolate     interpolate over saturated pixels?</div>
              ?               -----              ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
193  <a href="#b6716709">b6716709</a> +     @param[in] interpolate  interpolate over saturated pixels?</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
264  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      maskName        mask plane name</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
194  <a href="#b6716709">b6716709</a> +     @param[in] maskName  mask plane name</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
265  <a href="#cc57d8fc">cc57d8fc</a> -     @param[in]      fallbackValue   value of last resort for interpolation</div>
              ?               -----                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
195  <a href="#b6716709">b6716709</a> +     @param[in] fallbackValue  value of last resort for interpolation</div>
                    """
                    defectList = makeThresholdMask(
                        maskedImage = maskedImage,
                        threshold = saturation,
                        growFootprints = growFootprints,
                        maskName = maskName,
                    )
                    if interpolate:
                        interpolateDefectList(maskedImage, defectList, fwhm, fallbackValue=fallbackValue)
                
                def biasCorrection(maskedImage, biasMaskedImage):
                    """Apply bias correction in place
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to correct</div>
              ?                    -             ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
209  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  masked image to correct</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
280  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      biasMaskedImage bias, as a masked image</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
210  <a href="#b6716709">b6716709</a> +     @param[in] biasMaskedImage  bias, as a masked image</div>
              ?                                +
                    """
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
212  <a href="#73bd6734">73bd6734</a> +     if maskedImage.getBBox(afwImage.LOCAL) != biasMaskedImage.getBBox(afwImage.LOCAL):</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
213  <a href="#73bd6734">73bd6734</a> +         raise RuntimeError("maskedImage bbox %s != biasMaskedImage bbox %s" % \</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
214  <a href="#73bd6734">73bd6734</a> +             (maskedImage.getBBox(afwImage.LOCAL), biasMaskedImage.getBBox(afwImage.LOCAL)))</div>
                    maskedImage -= biasMaskedImage
                
                def darkCorrection(maskedImage, darkMaskedImage, expScale, darkScale):
                    """Apply dark correction in place
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
286  <a href="#a21c7f73">a21c7f73</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
219  <a href="#e05f6b30">e05f6b30</a> + </div>
                    maskedImage -= dark * expScaling / darkScaling
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to correct</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
222  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to correct</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      darkMaskedImage dark masked image</div>
              ?               -----                            ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
223  <a href="#b6716709">b6716709</a> +     @param[in] darkMaskedImage  dark afw.image.MaskedImage</div>
              ?                                +     +++++ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
291  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      expScale        exposure scale</div>
              ?                -----          ------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
224  <a href="#b6716709">b6716709</a> +     @param[in] expScale  exposure scale</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
292  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      darkScale       dark scale</div>
              ?                -----           -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
225  <a href="#b6716709">b6716709</a> +     @param[in] darkScale  dark scale</div>
                    """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#0e2f0e0a">0e2f0e0a</a> -     if maskedImage.getBBox() != darkMaskedImage.getBBox():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
227  <a href="#2faf6616">2faf6616</a> +     if maskedImage.getBBox(afwImage.LOCAL) != darkMaskedImage.getBBox(afwImage.LOCAL):</div>
              ?                            ++++++++++++++                             ++++++++++++++
                        raise RuntimeError("maskedImage bbox %s != darkMaskedImage bbox %s" % \
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
296  <a href="#0e2f0e0a">0e2f0e0a</a> -             (maskedImage.getBBox(), darkMaskedImage.getBBox()))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
229  <a href="#2faf6616">2faf6616</a> +             (maskedImage.getBBox(afwImage.LOCAL), darkMaskedImage.getBBox(afwImage.LOCAL)))</div>
              ?                                  ++++++++++++++                           ++++++++++++++
                
                    scale = expScale / darkScale
                    maskedImage.scaledMinus(scale, darkMaskedImage)
                
                def updateVariance(maskedImage, gain, readNoise):
                    """Set the variance plane based on the image plane
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
304  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image; image plane is read and variance plane is written</div>
              ?                    -             ^^^            -------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
237  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage; image plane is read and variance plane is written</div>
              ?                                 ^^^^^ +++++     ++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
305  <a href="#2d7d9d9f">2d7d9d9f</a> -     @param[in]      gain            amplifier gain (e-/ADU)</div>
              ?                -----    ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
238  <a href="#b6716709">b6716709</a> +     @param[in] gain  amplifier gain (e-/ADU)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
306  <a href="#2d7d9d9f">2d7d9d9f</a> -     @param[in]      readNoise       amplifier read noise (ADU/pixel)</div>
              ?                -----           -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
239  <a href="#b6716709">b6716709</a> +     @param[in] readNoise  amplifier read noise (ADU/pixel)</div>
                    """
                    var = maskedImage.getVariance()
                    var <<= maskedImage.getImage()
                    var /= gain
                    var += readNoise**2
                
                def flatCorrection(maskedImage, flatMaskedImage, scalingType, userScale=1.0):
                    """Apply flat correction in place
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
316  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to correct</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
249  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to correct</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
317  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      flatMaskedImage flat field masked image</div>
              ?               -----                                  ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
250  <a href="#b6716709">b6716709</a> +     @param[in] flatMaskedImage  flat field afw.image.MaskedImage</div>
              ?                                +           +++++ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
318  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      scalingType     how to compute flat scale; one of 'MEAN', 'MEDIAN' or 'USER'</div>
              ?               -----              ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
251  <a href="#b6716709">b6716709</a> +     @param[in] scalingType  how to compute flat scale; one of 'MEAN', 'MEDIAN' or 'USER'</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
319  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      userScale       scale to use if scalingType is 'USER', else ignored</div>
              ?                -----           -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
252  <a href="#b6716709">b6716709</a> +     @param[in] userScale  scale to use if scalingType is 'USER', else ignored</div>
                    """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
321  <a href="#0e2f0e0a">0e2f0e0a</a> -     if maskedImage.getBBox() != flatMaskedImage.getBBox():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
254  <a href="#2faf6616">2faf6616</a> +     if maskedImage.getBBox(afwImage.LOCAL) != flatMaskedImage.getBBox(afwImage.LOCAL):</div>
              ?                            ++++++++++++++                             ++++++++++++++
                        raise RuntimeError("maskedImage bbox %s != flatMaskedImage bbox %s" % \
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
323  <a href="#0e2f0e0a">0e2f0e0a</a> -             (maskedImage.getBBox(), flatMaskedImage.getBBox()))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
256  <a href="#2faf6616">2faf6616</a> +             (maskedImage.getBBox(afwImage.LOCAL), flatMaskedImage.getBBox(afwImage.LOCAL)))</div>
              ?                                  ++++++++++++++                           ++++++++++++++
                
                    # Figure out scale from the data
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
326  <a href="#c37b4e85">c37b4e85</a> -     # I'm not sure we should be doing this here, but maybe</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
259  <a href="#bbc42e80">bbc42e80</a> +     # Ideally the flats are normalized by the calibration product pipelin, but this allows some flexibility</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
260  <a href="#bbc42e80">bbc42e80</a> +     # in the case that the flat is created by some other mechanism.</div>
                    if scalingType == 'MEAN':
                        flatScale = afwMath.makeStatistics(flatMaskedImage.getImage(), afwMath.MEAN).getValue(afwMath.MEAN)
                    elif scalingType == 'MEDIAN':
                        flatScale = afwMath.makeStatistics(flatMaskedImage.getImage(), afwMath.MEDIAN).getValue(afwMath.MEDIAN)
                    elif scalingType == 'USER':
                        flatScale = userScale
                    else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
334  <a href="#a21c7f73">a21c7f73</a> -         raise pexExcept.LsstException, '%s : %s not implemented' % ("flatCorrection", scalingType)</div>
              ?                         ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
268  <a href="#1b49360c">1b49360c</a> +         raise pexExcept.Exception, '%s : %s not implemented' % ("flatCorrection", scalingType)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#c37b4e85">c37b4e85</a> -     </div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
269  <a href="#e05f6b30">e05f6b30</a> + </div>
                    maskedImage.scaledDivides(1.0/flatScale, flatMaskedImage)
                
                def illuminationCorrection(maskedImage, illumMaskedImage, illumScale):
                    """Apply illumination correction in place
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
341  <a href="#a21c7f73">a21c7f73</a> -     @param[in,out]  maskedImage     masked image to correct</div>
              ?                    -             ^^^      ^^
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
275  <a href="#b6716709">b6716709</a> +     @param[in,out] maskedImage  afw.image.MaskedImage to correct</div>
              ?                                 ^^^^^ +++++     ^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
342  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      illumMaskedImage illumination correction masked image</div>
              ?               -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
276  <a href="#b6716709">b6716709</a> +     @param[in] illumMaskedImage  illumination correction masked image</div>
              ?                                 +
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
343  <a href="#a21c7f73">a21c7f73</a> -     @param[in]      illumScale      scale value for illumination correction</div>
              ?                -----            ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
277  <a href="#b6716709">b6716709</a> +     @param[in] illumScale  scale value for illumination correction</div>
                    """
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
345  <a href="#0e2f0e0a">0e2f0e0a</a> -     if maskedImage.getBBox() != illumMaskedImage.getBBox():</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
279  <a href="#7e5436d8">7e5436d8</a> +     if maskedImage.getBBox(afwImage.LOCAL) != illumMaskedImage.getBBox(afwImage.LOCAL):</div>
              ?                            ++++++++++++++                              ++++++++++++++
                        raise RuntimeError("maskedImage bbox %s != illumMaskedImage bbox %s" % \
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
347  <a href="#0e2f0e0a">0e2f0e0a</a> -             (maskedImage.getBBox(), illumMaskedImage.getBBox()))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
281  <a href="#7e5436d8">7e5436d8</a> +             (maskedImage.getBBox(afwImage.LOCAL), illumMaskedImage.getBBox(afwImage.LOCAL)))</div>
              ?                                  ++++++++++++++                            ++++++++++++++
                
                    maskedImage.scaledDivides(1./illumScale, illumMaskedImage)
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
351  <a href="#c37b4e85">c37b4e85</a> - def trimAmp(exposure, trimBbox=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
352  <a href="#c37b4e85">c37b4e85</a> -     """Return a new Exposure that is a subsection of the input exposure.</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
353  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
354  <a href="#c37b4e85">c37b4e85</a> -     NOTE: do we need to deal with the WCS in any way, shape, or form?</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
355  <a href="#c37b4e85">c37b4e85</a> -     """</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
356  <a href="#c37b4e85">c37b4e85</a> -     if trimBbox is not None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#c37b4e85">c37b4e85</a> -         return exposureFactory(exposure, trimBbox, LOCAL)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
358  <a href="#c37b4e85">c37b4e85</a> -     else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#c37b4e85">c37b4e85</a> -         amp = cameraGeom.cast_Amp(exposure.getDetector())</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#c37b4e85">c37b4e85</a> -         return exposureFactory(exposure, amp.getDiskDataSec(false), LOCAL)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#c37b4e85">c37b4e85</a> -     # n.b. what other changes are needed here?</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
362  <a href="#c37b4e85">c37b4e85</a> -     # e.g. wcs info, overscan, etc</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
363  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#94c5cbbc">94c5cbbc</a> - def overscanCorrection(ampMaskedImage, overscanImage, fitType='MEDIAN', polyOrder=1, collapseRej=3.0,</div>
              ?                                                                         - ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
285  <a href="#55cf411a">55cf411a</a> + def overscanCorrection(ampMaskedImage, overscanImage, fitType='MEDIAN', order=1, collapseRej=3.0,</div>
                                       statControl=None):
                    """Apply overscan correction in place
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#7be5c786">7be5c786</a> -     @param[in,out]  ampMaskedImage  masked image to correct</div>
              ?                    -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
289  <a href="#b6716709">b6716709</a> +     @param[in,out] ampMaskedImage  masked image to correct</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#7be5c786">7be5c786</a> -     @param[in]      overscanImage   overscan data as an image</div>
              ?               -----                -
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
290  <a href="#b6716709">b6716709</a> +     @param[in] overscanImage  overscan data as an afw.image.IMage</div>
              ?                                                   ++++     ++++++
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#a3afbee1">a3afbee1</a> -     @param[in]      fitType         type of fit for overscan correction; one of:</div>
              ?                -----         -------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
291  <a href="#b6716709">b6716709</a> +     @param[in] fitType  type of fit for overscan correction; one of:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#a21c7f73">a21c7f73</a> -                                     - 'MEAN'</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
292  <a href="#bbc42e80">bbc42e80</a> +                         - 'MEAN'</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
372  <a href="#a21c7f73">a21c7f73</a> -                                     - 'MEDIAN'</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
293  <a href="#bbc42e80">bbc42e80</a> +                         - 'MEDIAN'</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
373  <a href="#9b6cdadf">9b6cdadf</a> -                                     - 'POLY' (ordinary polynomial)</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
294  <a href="#bbc42e80">bbc42e80</a> +                         - 'POLY' (ordinary polynomial)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
374  <a href="#9b6cdadf">9b6cdadf</a> -                                     - 'CHEB' (Chebyshev polynomial)</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
295  <a href="#bbc42e80">bbc42e80</a> +                         - 'CHEB' (Chebyshev polynomial)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
375  <a href="#9b6cdadf">9b6cdadf</a> -                                     - 'LEG' (Legendre polynomial)</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
296  <a href="#bbc42e80">bbc42e80</a> +                         - 'LEG' (Legendre polynomial)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
376  <a href="#4d4cade8">4d4cade8</a> -                                     - 'NATURAL_SPLINE', 'CUBIC_SPLINE', 'AKIMA_SPLINE' (splines)</div>
              ? ------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
297  <a href="#bbc42e80">bbc42e80</a> +                         - 'NATURAL_SPLINE', 'CUBIC_SPLINE', 'AKIMA_SPLINE' (splines)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
377  <a href="#4d4cade8">4d4cade8</a> -     @param[in]      polyOrder       polynomial order or spline knots (ignored unless fitType</div>
              ?                ------ ---    -----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
298  <a href="#b6716709">b6716709</a> +     @param[in] order  polynomial order or spline knots (ignored unless fitType</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
378  <a href="#4d4cade8">4d4cade8</a> -                                     indicates a polynomial or spline)</div>
              ? --------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
299  <a href="#bbc42e80">bbc42e80</a> +                       indicates a polynomial or spline)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#6e77c23e">6e77c23e</a> -     @param[in]      collapseRej     Rejection threshold (sigma) for collapsing dimension of overscan</div>
              ?               -----              ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
300  <a href="#b6716709">b6716709</a> +     @param[in] collapseRej  Rejection threshold (sigma) for collapsing dimension of overscan</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
380  <a href="#94c5cbbc">94c5cbbc</a> -     @param[in]      statControl     Statistics control object</div>
              ?               -----              ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
301  <a href="#55cf411a">55cf411a</a> +     @param[in] statControl  Statistics control object</div>
                    """
                    ampImage = ampMaskedImage.getImage()
                    if statControl is None:
                        statControl = afwMath.StatisticsControl()
                    if fitType == 'MEAN':
                        offImage = afwMath.makeStatistics(overscanImage, afwMath.MEAN, statControl).getValue(afwMath.MEAN)
                    elif fitType == 'MEDIAN':
                        offImage = afwMath.makeStatistics(overscanImage, afwMath.MEDIAN, statControl).getValue(afwMath.MEDIAN)
                    elif fitType in ('POLY', 'CHEB', 'LEG', 'NATURAL_SPLINE', 'CUBIC_SPLINE', 'AKIMA_SPLINE'):
                        if hasattr(overscanImage, "getImage"):
                            biasArray = overscanImage.getImage().getArray()
                            biasArray = numpy.ma.masked_where(overscanImage.getMask().getArray() & statControl.getAndMask(),
                                                              biasArray)
                        else:
                            biasArray = overscanImage.getArray()
                        # Fit along the long axis, so collapse along each short row and fit the resulting array
                        shortInd = numpy.argmin(biasArray.shape)
                        if shortInd == 0:
                            # Convert to some 'standard' representation to make things easier
                            biasArray = numpy.transpose(biasArray)
                
                        # Do a single round of clipping to weed out CR hits and signal leaking into the overscan
                        percentiles = numpy.percentile(biasArray, [25.0, 50.0, 75.0], axis=1)
                        medianBiasArr = percentiles[1]
                        stdevBiasArr = 0.74*(percentiles[2] - percentiles[0]) # robust stdev
                        diff = numpy.abs(biasArray - medianBiasArr[:,numpy.newaxis])
                        biasMaskedArr = numpy.ma.masked_where(diff > collapseRej*stdevBiasArr[:,numpy.newaxis], biasArray)
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
408  <a href="#6e77c23e">6e77c23e</a> -         medianBiasArr = numpy.mean(biasMaskedArr, axis=1)</div>
              ?         ^  ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
329  <a href="#ecde9a6f">ecde9a6f</a> +         collapsed = numpy.mean(biasMaskedArr, axis=1)</div>
              ?         ^^^^^^^
                        del biasArray, percentiles, stdevBiasArr, diff, biasMaskedArr
                
                        if shortInd == 0:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
412  <a href="#6e77c23e">6e77c23e</a> -             medianBiasArr = numpy.transpose(medianBiasArr)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
333  <a href="#ecde9a6f">ecde9a6f</a> +             collapsed = numpy.transpose(collapsed)</div>
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
414  <a href="#9b6cdadf">9b6cdadf</a> -         num = len(medianBiasArr)</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
335  <a href="#ecde9a6f">ecde9a6f</a> +         num = len(collapsed)</div>
                        indices = 2.0*numpy.arange(num)/float(num) - 1.0
                
                        if fitType in ('POLY', 'CHEB', 'LEG'):
                            # A numpy polynomial
                            poly = numpy.polynomial
                            fitter, evaler = {"POLY": (poly.polynomial.polyfit, poly.polynomial.polyval),
                                              "CHEB": (poly.chebyshev.chebfit, poly.chebyshev.chebval),
                                              "LEG":  (poly.legendre.legfit, poly.legendre.legval),
                                              }[fitType]
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
425  <a href="#4d4cade8">4d4cade8</a> -             coeffs = fitter(indices, medianBiasArr, polyOrder)</div>
              ?                                      ^  ----------  - ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
346  <a href="#bc212058">bc212058</a> +             coeffs = fitter(indices, collapsed, order)</div>
              ?                                      ^^^^^^^
                            fitBiasArr = evaler(indices, coeffs)
                        elif 'SPLINE' in fitType:
                            # An afw interpolation
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
429  <a href="#4d4cade8">4d4cade8</a> -             numBins = polyOrder</div>
              ?                       - ---
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
350  <a href="#bc212058">bc212058</a> +             numBins = order</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
430  <a href="#4d4cade8">4d4cade8</a> -             values, binEdges = numpy.histogram(indices, bins=numBins, weights=medianBiasArr)</div>
                            #
                            # numpy.histogram needs a real array for the mask, but numpy.ma "optimises" the case
                            # no-values-are-masked by replacing the mask array by a scalar, numpy.ma.nomask
                            #
                            # Issue DM-415
                            #
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
437  <a href="#d86efcc4">d86efcc4</a> -             medianBiasArrMask = medianBiasArr.mask</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
357  <a href="#c250aace">c250aace</a> +             collapsedMask = collapsed.mask</div>
                            try:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
439  <a href="#d86efcc4">d86efcc4</a> -                 if medianBiasArrMask == numpy.ma.nomask:</div>
              ?                    ^  ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
359  <a href="#c250aace">c250aace</a> +                 if collapsedMask == numpy.ma.nomask:</div>
              ?                    ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
440  <a href="#d86efcc4">d86efcc4</a> -                     medianBiasArrMask = numpy.array(len(medianBiasArr)*[numpy.ma.nomask])</div>
              ?                     ^  ----------                       ^  ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
360  <a href="#c250aace">c250aace</a> +                     collapsedMask = numpy.array(len(collapsed)*[numpy.ma.nomask])</div>
              ?                     ^^^^^^^                         ^^^^^^^
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
441  <a href="#d86efcc4">d86efcc4</a> -             except ValueError:      # If medianBiasArrMask is an array the test fails [needs .all()]</div>
              ?                                          ^  ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
361  <a href="#c250aace">c250aace</a> +             except ValueError:      # If collapsedMask is an array the test fails [needs .all()]</div>
              ?                                          ^^^^^^^
                                pass
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
444  <a href="#d86efcc4">d86efcc4</a> -             numPerBin, _ = numpy.histogram(indices, bins=numBins, weights=1 - medianBiasArrMask.astype(int))</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
445  <a href="#4d4cade8">4d4cade8</a> -             binCenters = 0.5*(binEdges[:-1] + binEdges[1:])</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
364  <a href="#55cf411a">55cf411a</a> +             numPerBin, binEdges = numpy.histogram(indices, bins=numBins,</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
365  <a href="#c250aace">c250aace</a> +                                                   weights=1-collapsedMask.astype(int))</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
366  <a href="#ecde9a6f">ecde9a6f</a> +             # Binning is just a histogram, with weights equal to the values.</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
367  <a href="#ecde9a6f">ecde9a6f</a> +             # Use a similar trick to get the bin centers (this deals with different numbers per bin).</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
368  <a href="#ecde9a6f">ecde9a6f</a> +             values = numpy.histogram(indices, bins=numBins, weights=collapsed)[0]/numPerBin</div>
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
369  <a href="#ecde9a6f">ecde9a6f</a> +             binCenters = numpy.histogram(indices, bins=numBins, weights=indices)[0]/numPerBin</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
446  <a href="#96dbefdf">96dbefdf</a> -             interp = afwMath.makeInterpolate(binCenters.astype(float)[numPerBin > 0],</div>
              ?                                                                      ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
370  <a href="#72841624">72841624</a> +             interp = afwMath.makeInterpolate(binCenters.astype(float),</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
447  <a href="#96dbefdf">96dbefdf</a> -                                              (values/numPerBin).astype(float)[numPerBin > 0],</div>
              ?                                              -      -----------              ---------------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
371  <a href="#72841624">72841624</a> +                                              values.astype(float),</div>
                                                             afwMath.stringToInterpStyle(fitType))
                            fitBiasArr = numpy.array([interp.interpolate(i) for i in indices])
                
                        import lsstDebug
                        if lsstDebug.Info(__name__).display:
                            import matplotlib.pyplot as plot
                            figure = plot.figure(1)
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
379  <a href="#ecde9a6f">ecde9a6f</a> +             figure.clear()</div>
                            axes = figure.add_axes((0.1, 0.1, 0.8, 0.8))
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
456  <a href="#9b6cdadf">9b6cdadf</a> -             axes.plot(indices, medianBiasArr, 'k+')</div>
              ?                                ^  ----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
381  <a href="#ecde9a6f">ecde9a6f</a> +             axes.plot(indices, collapsed, 'k+')</div>
              ?                                ^^^^^^^
                            axes.plot(indices, fitBiasArr, 'r-')
                            figure.show()
                            prompt = "Press Enter or c to continue [chp]... "
                            while True:
                                ans = raw_input(prompt).lower()
                                if ans in ("", "c",):
                                    break
                                if ans in ("p",):
                                    import pdb; pdb.set_trace()
                                elif ans in ("h", ):
                                    print "h[elp] c[ontinue] p[db]"
                                figure.close()
                
                        offImage = ampImage.Factory(ampImage.getDimensions())
                        offArray = offImage.getArray()
                        if shortInd == 1:
                            offArray[:,:] = fitBiasArr[:,numpy.newaxis]
                        else:
                            offArray[:,:] = fitBiasArr[numpy.newaxis,:]
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
476  <a href="#5489cf7d">5489cf7d</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
477  <a href="#5489cf7d">5489cf7d</a> -         # We don't trust any extrapolation: mask those pixels as SUSPECT</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
478  <a href="#5489cf7d">5489cf7d</a> -         mask = ampMaskedImage.getMask()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
479  <a href="#5489cf7d">5489cf7d</a> -         maskArray = mask.getArray() if shortInd == 1 else mask.getArray().transpose()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
480  <a href="#5489cf7d">5489cf7d</a> -         suspect = mask.getPlaneBitMask("SUSPECT")</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
481  <a href="#fc199042">fc199042</a> -         try:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
482  <a href="#fc199042">fc199042</a> -             if medianBiasArr.mask == numpy.ma.nomask:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
483  <a href="#fc199042">fc199042</a> -                 # There is no mask, so the whole array is fine</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
484  <a href="#fc199042">fc199042</a> -                 pass</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
485  <a href="#fc199042">fc199042</a> -         except ValueError:      # If medianBiasArr.mask is an array the test fails [needs .all()]</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
486  <a href="#fc199042">fc199042</a> -             for low in xrange(num):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
487  <a href="#fc199042">fc199042</a> -                 if not medianBiasArr.mask[low]:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
488  <a href="#fc199042">fc199042</a> -                     break</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
489  <a href="#fc199042">fc199042</a> -             if low > 0:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
490  <a href="#fc199042">fc199042</a> -                 maskArray[:low,:] |= suspect</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
491  <a href="#fc199042">fc199042</a> -             for high in xrange(1, num):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
492  <a href="#fc199042">fc199042</a> -                 if not medianBiasArr.mask[-high]:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
493  <a href="#fc199042">fc199042</a> -                     break</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
494  <a href="#fc199042">fc199042</a> -             if high > 1:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
495  <a href="#fc199042">fc199042</a> -                 maskArray[-high:,:] |= suspect</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
496  <a href="#5489cf7d">5489cf7d</a> - </div>
                    else:
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
498  <a href="#7be5c786">7be5c786</a> -         raise pexExcept.LsstException, '%s : %s an invalid overscan type' % \</div>
              ?                         ----
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
402  <a href="#1b49360c">1b49360c</a> +         raise pexExcept.Exception, '%s : %s an invalid overscan type' % \</div>
                            ("overscanCorrection", fitType)
                    ampImage -= offImage
                
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
502  <a href="#a21c7f73">a21c7f73</a> - # def fringeCorrection(maskedImage, fringe):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
503  <a href="#a21c7f73">a21c7f73</a> - #     raise NotImplementedError()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
504  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
505  <a href="#a21c7f73">a21c7f73</a> - # def pupilCorrection(maskedImage, pupil):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
506  <a href="#a21c7f73">a21c7f73</a> - #     raise NotImplementedError()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
507  <a href="#c37b4e85">c37b4e85</a> - </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
508  <a href="#c37b4e85">c37b4e85</a> - # class Linearization(object):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
509  <a href="#c37b4e85">c37b4e85</a> - #     def __init__(linearityFile=None):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
510  <a href="#c37b4e85">c37b4e85</a> - #         if linearityFile is not None:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
511  <a href="#c37b4e85">c37b4e85</a> - #             self.readFile(linearityFile)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
512  <a href="#c37b4e85">c37b4e85</a> - #         else:</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
513  <a href="#c37b4e85">c37b4e85</a> - #             self.makeLinearReplace()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
514  <a href="#c37b4e85">c37b4e85</a> - #     def getImageFactoryFromExposure(exposure):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
515  <a href="#c37b4e85">c37b4e85</a> - #         return exposure.getMaskedImage().getImage().Factory</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
516  <a href="#c37b4e85">c37b4e85</a> - #     def apply(exposure):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
517  <a href="#c37b4e85">c37b4e85</a> - #         self.getImageFactoryFromExposure(exposure)</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
518  <a href="#c37b4e85">c37b4e85</a> - #         if type is "LUT":</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
519  <a href="#c37b4e85">c37b4e85</a> - #             imageData = exposure.getMaskedImage(). </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
520  <a href="#c37b4e85">c37b4e85</a> - #         mi = exposure.getMaskedImage()</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
521  <a href="#c37b4e85">c37b4e85</a> - #         	</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
522  <a href="#c37b4e85">c37b4e85</a> - #     def readFile(filename):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
523  <a href="#c37b4e85">c37b4e85</a> - #     def writeFile(filename):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
524  <a href="#c37b4e85">c37b4e85</a> - #     def makeLinearReplace(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
525  <a href="#c37b4e85">c37b4e85</a> - #         self.type = </div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
526  <a href="#c37b4e85">c37b4e85</a> - #     def makeLinearMult(self):</div>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
527  <a href="#ff1a4e33">ff1a4e33</a> - </div>
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="a3afbee1"/></a>a3afbee1</h3>

<pre>
commit a3afbee139e4dbcc004f3f28cb519110c071f479
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 17:30:26 2012 -0700

    Update documentation and tweak arguments in IsrTask to clarify usage.
</pre>
<h3><a name="1a942b21"/></a>1a942b21</h3>

<pre>
commit 1a942b21aabbd5caf14781e6de911f816a4e4b81
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri May 1 02:57:35 2015 +0000

    getDefectListFromMask: use a simpler method to convert Mask to a FootprintSet
    
    The old method could use GBs of memory when the entire image was
    masked, because there was a peak on every pixel.  This new method
    uses the FootprintSet constructor designed for this purpose, and
    doesn't produce peaks.
</pre>
<h3><a name="cc57d8fc"/></a>cc57d8fc</h3>

<pre>
commit cc57d8fc0ad396c7d30a6437972ae855f5c8a24f
Author: Paul Price <price@astro.princeton.edu>
Date:   Mon Sep 30 20:42:35 2013 +0000

    interpolation: allow provision of fallback value
    
    The interpolateFromMask and saturationCorrection functions did not allow
    the provision of a fallback value for when the interpolation fails (and
    did not provide one themselves).  The resulted in some pixels being set
    to ~3.4e34 when the interpolation failed.
    
    Added a fallbackValue keyword argument for these functions, and changed
    them to use the interpolateDefectList function, which provides a
    suitable fallbackValue when one is not provided.
    
    Though this is an API change, it should be innocuous due to providing a
    suitable default value.
</pre>
<h3><a name="0e2f0e0a"/></a>0e2f0e0a</h3>

<pre>
commit 0e2f0e0a015e2d0040530075e18566dc65ad248e
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 27 17:00:52 2012 -0700

    Bug fixes
</pre>
<h3><a name="dd64d974"/></a>dd64d974</h3>

<pre>
commit dd64d974b781de74f813290a46f7e77c7686ea30
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 15:44:05 2012 -0700

    Most unit tests pass. Ccd assembly still needs work.
    Also, there are no unit tests for IsrTask methods.
</pre>
<h3><a name="4d4cade8"/></a>4d4cade8</h3>

<pre>
commit 4d4cade8e326446f7607223537032e27408633b0
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 20 21:32:51 2013 -0500

    overscan: add splines for interpolating overscan
</pre>
<h3><a name="a21c7f73"/></a>a21c7f73</h3>

<pre>
commit a21c7f733760165baa2097098c85225669ed7f54
Author: Russell Owen <rowen@uw.edu>
Date:   Tue Apr 24 16:38:43 2012 -0700

    Simplified the CCD assembly task.
    Documented the contents of isr.py
    Minor tweaks to ISR task.
</pre>
<h3><a name="7be5c786"/></a>7be5c786</h3>

<pre>
commit 7be5c7862fcaa76ffd8b9553b28c3ba14406574c
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Apr 26 14:34:34 2012 -0700

    Unify assembly.
    Speed up and clarify overscan correction.
</pre>
<h3><a name="96dbefdf"/></a>96dbefdf</h3>

<pre>
commit 96dbefdfeee210411c94cfde6c1631a009cd6133
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 21 12:33:16 2015 -0400

    overscan: don't interpolate over NANs
    
    Some bins may have NAN values from being entirely masked; if we attempt to
    interpolate over these, we will get NANs.
</pre>
<h3><a name="6e77c23e"/></a>6e77c23e</h3>

<pre>
commit 6e77c23e821408e2c0386daf1a1cb36c2220153a
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Nov 21 12:18:55 2013 -0500

    overscan: do a single round of clipping when collapsing (#3065)
    
    RHL pointed out that the overscan can include CR hits and signal
    leaked from the main image.  It's necessary to remove these.
    Do this by a single round of clipping, using the median and the
    IQR.
    Added a parameter to control the rejection level; formally changes
    the API, but it's defaulted so shouldn't matter.
</pre>
<h3><a name="9b6cdadf"/></a>9b6cdadf</h3>

<pre>
commit 9b6cdadf4ae00b2974a395e0445635b52c6e2051
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Nov 20 13:37:27 2013 -0500

    overscan: improve overscan polynomial fitting
    
    Reduce overscan using mean instead of median.
    Allow use of Chebyshev and Legendre polynomials.
    Add debugging plots of overscan.
</pre>
<h3><a name="94c5cbbc"/></a>94c5cbbc</h3>

<pre>
commit 94c5cbbcc8af5f9704e486f2e62615a9924dd4a1
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Dec 4 15:50:33 2013 -0500

    overscan: allow masking of overscan
    
    On HSC, saturated pixels can leak into the overscan.  We
    mask them, but they need to be ignored.
    
    Added a statControl keyword argument for control of the
    rejection and masking.
</pre>
<h3><a name="5489cf7d"/></a>5489cf7d</h3>

<pre>
commit 5489cf7db79603d7acab30048eef54d11d8535b6
Author: Paul Price <price@astro.princeton.edu>
Date:   Tue Apr 21 12:44:11 2015 -0400

    overscan: mask pixels corrected by extrapolation as SUSPECT
    
    We don't trust an extrapolation, so mask them as SUSPECT.  This allows us
    to make a guess at the correction, while also knowing which pixels may not
    have good guesses.
</pre>
<h3><a name="ff1a4e33"/></a>ff1a4e33</h3>

<pre>
commit ff1a4e33de4d8fe14a5f469d43a355d0b097d290
Author: Simon Krughoff <krughoff@astro.washington.edu>
Date:   Wed Dec 7 12:44:39 2011 -0600

    Modifications for integrations with the pip_base Task object.
</pre>
<h3><a name="fc199042"/></a>fc199042</h3>

<pre>
commit fc199042a16e754adeba243a2b88023c7cac5ab3
Author: Paul Price <price@astro.princeton.edu>
Date:   Thu Apr 23 11:41:26 2015 -0400

    fixup! overscan: mask pixels corrected by extrapolation as SUSPECT
</pre>
<h3><a name="d86efcc4"/></a>d86efcc4</h3>

<pre>
commit d86efcc455edb81230144b9cc67e9bdd93d243ef
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Apr 8 16:11:48 2014 -0400

    Toughen code to handle the case that no rows are masked
    
    See https://jira.lsstcorp.org/browse/DM-415.  In this case all the rows
    were bad, but the masking code passed them all so this bug triggered
</pre>
<h3><a name="c37b4e85"/></a>c37b4e85</h3>

<pre>
commit c37b4e853d4272bab570e913573ea7be2654160f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 09:02:56 2012 -0700

    First cut. Untested.
</pre>
<h3><a name="2d7d9d9f"/></a>2d7d9d9f</h3>

<pre>
commit 2d7d9d9f55d8a37ef7283b764f522bf1b50e1846
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 12:17:49 2012 -0700

    Add flags to disable bias, dark and flat correction.
    Correct computation of variance plane.
    Document expected units of gain and read noise.
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="b6716709"/></a>b6716709</h3>

<pre>
commit b67167091b35e84f05a4f4a693aed835d33a16a7
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Fri Oct 31 17:19:07 2014 -0700

    Fixes formatting issues of docstrings
    
    Apparently Doxygen doesn't like colons, so I removed them.
    I also fixed a typo afw.algorithms -> meas.algorithms.
</pre>
<h3><a name="219584a3"/></a>219584a3</h3>

<pre>
commit 219584a3ca9859724200844e1faf91a094ea079b
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Sep 12 08:42:42 2014 -0700

    Use default image origin when possible
</pre>
<h3><a name="72841624"/></a>72841624</h3>

<pre>
commit 72841624d121205faa3e8391079d2b07a2272e05
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 13 10:18:35 2014 -1000

    Pass NumPy arrays to afwMath.makeInterpolate.
</pre>
<h3><a name="c250aace"/></a>c250aace</h3>

<pre>
commit c250aaceccdb95a5edabefbb2c84d8ba61596fdf
Author: Robert Lupton the Good <rhl@astro.princeton.edu>
Date:   Tue Apr 8 16:11:48 2014 -0400

    overscan: Toughen code to handle the case that no rows are masked
    
    See https://jira.lsstcorp.org/browse/DM-415.  In this case all the rows
    were bad, but the masking code passed them all so this bug triggered
</pre>
<h3><a name="dd64d974"/></a>dd64d974</h3>

<pre>
commit dd64d974b781de74f813290a46f7e77c7686ea30
Author: Russell Owen <rowen@uw.edu>
Date:   Wed Apr 25 15:44:05 2012 -0700

    Most unit tests pass. Ccd assembly still needs work.
    Also, there are no unit tests for IsrTask methods.
</pre>
<h3><a name="7e5436d8"/></a>7e5436d8</h3>

<pre>
commit 7e5436d8f00a63875512db92b17aaab69083687d
Author: Russell Owen <rowen@uw.edu>
Date:   Thu Sep 18 17:36:05 2014 -0700

    Restore several image origins to local.
</pre>
<h3><a name="bbc42e80"/></a>bbc42e80</h3>

<pre>
commit bbc42e80b17f9ba3fa0d1f5793e5d6ad0154dbba
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Thu Oct 30 16:36:46 2014 -0700

    Updates docstrings
    
    In places docstrings were out of date.
    In others the docstrings were not in standard format.
    This commit fixes up the docstrings.
</pre>
<h3><a name="1b49360c"/></a>1b49360c</h3>

<pre>
commit 1b49360c602fe12df6557aec81187e4b85e29383
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Fri Jul 18 13:24:55 2014 -0400

    Adapt to changes in exception Python wrappers (DM-827)
</pre>
<h3><a name="ecde9a6f"/></a>ecde9a6f</h3>

<pre>
commit ecde9a6f869d306310a34fdc9ae72cc419ea9a2f
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Feb 14 16:12:31 2014 -0500

    overscan: add splines for interpolating overscan
</pre>
<h3><a name="73bd6734"/></a>73bd6734</h3>

<pre>
commit 73bd67343a2a8ec5129fe9aca8cea204439047b7
Author: Yusra AlSayyad <yusra@astro.washington.edu>
Date:   Sun Feb 15 19:57:37 2015 -0600

    Refactor IsrTask/FringeTask s.t. run() takes exposures, runDataRef() a ButlerDataRef
    
        See epic DM-1113 for background
        - Push all interaction with the Butler to readIsrData()/readFringeData()
        - Update all lower-level methods like [bias/flat/dark]Correction to take
          exposures instead of dataRefs.
        - Add doAssembleCcd config to give run option to operate on single amps
        - Replace word "detrend" with "isr" in names
</pre>
<h3><a name="e05f6b30"/></a>e05f6b30</h3>

<pre>
commit e05f6b30429856011dafbbef974b44d96d0f2bd6
Author: Simon Krughoff <simon.krughoff@gmail.com>
Date:   Wed Oct 29 14:02:58 2014 -0700

    Removes unused, un-documented code
    
    A large chunk of code used once upon a time to
    report SDQA values is removed.  There must be
    a better mechanism for doing this now.
</pre>
<h3><a name="2faf6616"/></a>2faf6616</h3>

<pre>
commit 2faf6616ba8616c261d016253441f4f351ffbf73
Author: Russell Owen <rowen@uw.edu>
Date:   Mon Sep 8 17:11:34 2014 -0700

    Explicitly specify LOCAL for image.getBBox()
</pre>
<h3><a name="c37b4e85"/></a>c37b4e85</h3>

<pre>
commit c37b4e853d4272bab570e913573ea7be2654160f
Author: Russell Owen <rowen@uw.edu>
Date:   Fri Apr 20 09:02:56 2012 -0700

    First cut. Untested.
</pre>
<h3><a name="55cf411a"/></a>55cf411a</h3>

<pre>
commit 55cf411aa20e1fd45bb857e53c50592f63e1f561
Author: Paul Price <price@astro.princeton.edu>
Date:   Wed Dec 4 15:50:33 2013 -0500

    overscan: allow masking of overscan
    
    On HSC, saturated pixels can leak into the overscan.  We
    mask them, but they need to be ignored.
    
    Added a statControl keyword argument for control of the
    rejection and masking.
</pre>
<h3><a name="bc212058"/></a>bc212058</h3>

<pre>
commit bc2120587b7d4b9cf1b3fe4ccbed870f03c1f6b1
Author: Paul Price <price@astro.princeton.edu>
Date:   Fri Feb 14 16:01:39 2014 -0500

    overscan: rename polyOrder to order (#3065)
    
    As requested in code review.  Overloading "order" to mean
    either polynomial order or spline knots has precedence in
    IRAF (e.g., ccdproc).
</pre>
</div>


[Return to list](#homelist)
# <a name="ups/ip_isr.table"/></a>ups/ip_isr.table
### Diff:

<pre>
<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#5da5bd3d">5da5bd3d</a> - setupRequired(meas_algorithms >= 5.0.1.0)</div>
              ?                              -----------
<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">
1    <a href="#b7cc48eb">b7cc48eb</a> + setupRequired(meas_algorithms)</div>
                setupRequired(pipe_base)
                
                envPrepend(DYLD_LIBRARY_PATH, ${PRODUCT_DIR}/lib)
                envPrepend(LD_LIBRARY_PATH, ${PRODUCT_DIR}/lib)
                envPrepend(PYTHONPATH, ${PRODUCT_DIR}/python)
</pre>
[Return to list](#homelist)


<div style="background-color:Khaki; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_hsc/ip_isr/</h2>
<h3><a name="5da5bd3d"/></a>5da5bd3d</h3>

<pre>
commit 5da5bd3d180a4aa73485c38542e936391c9b6594
Author: Jim Bosch <jbosch@astro.princeton.edu>
Date:   Thu Mar 15 18:16:35 2012 -0400

    update dependency versions
</pre>
</div>


<div style="background-color:LightBlue; margin-left: 20px; margin-right: 20px; padding-bottom: 8px; padding-left: 8px; padding-right: 8px; padding-top: 8px;">

<h2>Commits in /Users/nate/repos_lsst/ip_isr/</h2>
<h3><a name="b7cc48eb"/></a>b7cc48eb</h3>

<pre>
commit b7cc48eba157dbdf338e80ec6f385fa3906e0bd0
Author: Mario Juric <mjuric@lsst.org>
Date:   Wed Mar 5 16:29:19 2014 -0600

    removed explicit versions from the table file.
</pre>
</div>


[Return to list](#homelist)
